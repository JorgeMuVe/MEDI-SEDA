{"version":3,"sources":["datos/funcionesSistema.js","datos/usuarioDB.js","datos/appWebDB.js","componentes/Principal.js","componentes/UsuarioNoValido.js","componentes/Perfil.js","datos/sha1.js","componentes/Paginacion.js","componentes/CuadroMensaje.js","componentes/Modal.js","vista/usuario/Usuario.js","datos/sesionDB.js","vista/sesion/InicioSesion.js","vista/sesion/CerraSesion.js","vista/usuario/CambioContrasegna.js","vista/actividad/Actividad.js","vista/actividadAdministrador/ModalAgregar.js","datos/actividadDB.js","datos/impresionDB.js","vista/impresion/Impresion.js","vista/actividadAdministrador/ModalAsignarOperador.js","vista/actividadAdministrador/ModalObservacion.js","vista/impresion/ModalAjusteImpresion.js","datos/observacionDB.js","vista/actividadAdministrador/ActividadAdministrador.js","datos/presionDB.js","datos/continuidadDB.js","vista/actividadOperario/ModalMedicion.js","vista/actividadOperario/ModalObservacion.js","vista/actividadOperario/ActividadOperario.js","datos/zonaDB.js","datos/bloqueDB.js","vista/bloque/Bloque.js","datos/conexionDB.js","vista/conexion/Conexion.js","datos/conexionProdAguaDB.js","vista/conexionProdAgua/ConexionProdAgua.js","datos/direccionDB.js","vista/direccion/Direccion.js","datos/fuenteDB.js","vista/fuenteAgua/FuenteAgua.js","datos/fuenteZonaDB.js","vista/fuenteZona/FuenteZona.js","vista/zona/Zona.js","vista/mapa/Mapa.js","componentes/DescargaArchivo.js","vista/reporteContinuidad/TablaReporteEncuesta.js","vista/reporteContinuidad/TablaReportePonderado.js","vista/reporteContinuidad/TablaReporteServicio.js","vista/reporteContinuidad/TablaReporte6Hr.js","vista/reporteContinuidad/TablaReporte18Hr.js","vista/reporteContinuidad/TablaReporteResumen6Hrs.js","vista/reporteContinuidad/TablaReporteResumen18Hrs.js","vista/reporteContinuidad/TablaReporteResumen.js","datos/reporteDB.js","vista/reporteContinuidad/ReporteContinuidad.js","vista/reportePresion/TablaReporteEncuesta.js","vista/reportePresion/TablaReportePonderado.js","vista/reportePresion/TablaReporteServicio.js","vista/reportePresion/TablaReportePreMin.js","vista/reportePresion/TablaReportePreMax.js","vista/reportePresion/TablaReporteResumenPreMax.js","vista/reportePresion/TablaReporteResumenPreMin.js","vista/reportePresion/ReportePresion.js","componentes/Navegador.js","componentes/Error404.js","componentes/IconoUsuario.js","componentes/IconoSesion.js","componentes/MenuDesplegable.js","componentes/Menu.js","App.js","index.js"],"names":["obtenerDenominacionGrupoUsuario","grupoUsuario","toString","numeroArabigoEnRomano","numero","obtenerFecha","fechaTexto","dias","fecha","Date","setDate","getDate","añoDate","getFullYear","mesDate","getMonth","diaDate","fechaRespuesta","convertirNumeroAHora","numeroHora","formato","horas","minutos","segundos","horaConvertida","Math","floor","round","obtenerDenominacionTipoAltitud","codigoTipoAltitud","obtenerCodigoTipoAltitud","altitudDenominacion","verificarEstadoActividad","estadoActividad","listaMesesAgno","letra","nombre","listaAgnos","modulos","codigo","url","titulo","grupo","dispositivoMovil","window","screen","width","verificarFechaEntrega","fechaHoy","fechaEntrega","vencido","exportarArchivoPdf","html","orientacion","nombreArchivo","documento","Promise","resolver","rechazar","fetch","urlServidor","method","body","JSON","stringify","headers","Headers","then","respuesta","blob","catch","error","exportarHtmlAPdf","pdf","Blob","type","archivo","document","createElement","href","URL","createObjectURL","download","appendChild","click","datosServidor","Url","verificarGrupoUsuario","token","localStorage","getItem","undefined","decode","jwt_decode","codigoUsuario","cuentaUsuario","nombres","apellidosPaterno","apellidosMaterno","firmaDigital","firmaSesion","estadoInicial","mostrarModal","Principal","props","accesosDirectos","accesos","state","controlModal","setState","res","this","className","style","fontSize","height","Component","Error404","Perfil","usuario","history","push","UsuarioNoValido","hex_sha1","s","binarray","hex_tab","str","i","length","charAt","binb2hex","x","len","w","Array","a","b","c","d","e","olda","oldb","oldc","oldd","olde","j","rol","t","safe_add","sha1_ft","sha1_kt","core_sha1","bin","charCodeAt","str2binb","y","lsw","num","cnt","Paginacion","cantidadElementos","cambiarPagina","paginaActual","onClick","title","textAlign","border","size","value","min","pattern","name","id","onChange","CuadroMensaje","tipoCuadro","children","cerrarMensaje","marginTop","Modal","tituloModal","usuarioSeleccion","contrasegnaUsuario","habilitado","usuarios","sugerenciasUsuarios","mostrarContrasegna","usuarioInicioPaginado","textoUsuarioBuscar","Usuario","listarUsuarios","parseInt","Busqueda","inicio","resultados","response","json","cambiarHabilitadoUsuario","Parametros","promesaModificarHabilitadoUsuario","quien","_","resetearContrasegna","numAleatorio","random","guardarUsuario","evento","preventDefault","UsuarioNuevo","UsuarioCuenta","urlFetch","responseJson","modificarUsuarioCuenta","modificarDatosCuenta","modificarUsuarioEstado","target","seleccionarUsuario","pagina","cambiarTextoUsuarioBusqueda","regex","RegExp","sort","filter","test","bind","placeholder","src","alt","map","key","checked","toUpperCase","noValidate","onSubmit","maxLength","defaultValue","cursor","hidden","disabled","contrasegna","mensajeTexto","InicioSesion","ingresarDatos","ingresar","Credenciales","credenciales","setTimeout","setItem","actualizarUsuario","redireccionar","ruta","padding","align","inicioSesion","cerrarSesion","Firmas","firma","firmaUsuario","removeItem","mensajeAlerta","actualContrasegna","nuevaContrasegna","confiContrasegna","CambioContraseña","actualizarContrasegna","modificarContrasegnaCuenta","Actividad","ModificarActividad","actividad","controlModalAgregar","seleccionDatosActividad","guardarActividad","agnoPeriodo","mesPeriodo","denominacionBloque","readOnly","denominacionLote","fechaFinal","promesaListarActividadImpresion","agregarActividad","ActividadNuevo","servidor","promesaListarBloqueImpresionPaginaActividad","objJSon","tablasActividad","PaginasTabla","Impresion","agregarTitulos","paginas","altoPagina","anchoPagina","tituloHTML","getElementById","innerHTML","periodoHTML","piePagina","internal","getNumberOfPages","setFontStyle","setFontSize","text","generarTablas","cantidadPaginas","tipoActividad","bloques","tablasDePagina","paginaTabla","b1","b2","ordenImpresion","forEach","bloque","numPagina","codigoUrbano","paginaImprimir","paginaImpresion","actividades","direcciones","denominacionZona","substring","indexOf","operarios","nombresCompletos","existe","nombreCompleto","trim","direccion","denominacionFuente","altitud","tipoAltitud","ordenBloque1","ordenBloque","denominacion","inscripcion","codigoInscripcion","de1","a1","de2","a2","promeio","tabla","sector","subSector","microSector","bloqueUrbano","generarPdfImpresion","jsPDF","pageSize","getHeight","getWidth","autoTable","p1","p2","addPage","tablas","t1","t2","index","tablasActividades","d1","d2","Object","values","finalY","previousAutoTable","head","content","colSpan","styles","halign","fillColor","cellWidth","rowSpan","startY","theme","columnStyles","2","5","7","8","9","10","cellPadding","minCellHeight","valign","lineWidth","textColor","tableLineColor","bodyStyles","lineColor","headStyles","save","controlModalImpresion","imprimirPdf","numeroPagina","mostrarModalImpresion","AsignarOperador","mostrarModalAsignar","controlModalAsignar","asignarOperadorBloque","seleccionarUsuarioActividad","controlModalObservacion","mostrarModalObservacion","textoObservacion","bloquesImpresion","ModalAjusteImpresion","listarBloquesImpresion","mostrarModalAjusteImpresion","controlModalAjusteImpresion","buscarObservacion","codigoActividad","bloqueActividadInicial","codigoZona","split","denominacionAreaServicio","denominacionAltitud","fechaCreacion","codigoObservacion","actividadInicial","codigoDireccion","tipoMedicion","tipoInscripcion","actividadSeleccion","bloqueActividad","sugerenciasActividades","textoActividadBuscar","actividadInicioPaginado","usuariosJson","listarBloquesPagina","Buscar","promesaListarActividadBloque","seleccionarActividad","nuevaActividad","modificarActividad","verObservacion","bloquesGenerados","Bloque","generarBloqueActividad","alert","cambiarPeriodo","habilitarActividad","cambiarHabilitadoActividad","mes","agno","margin","retraso","color","observacion","ModalAgregar","ModalObservacion","controlModalMedicion","mostrarModalMedicion","modificarActividadEstado","lecturaArriba","lecturaAbajo","r1HoraDe","r1HoraA","r2HoraDe","r2HoraA","guardarObservacion","codigoContinuidad","codigoPresion","articulosPagina","zonas","listarActividadesPorUsuario","promesaListarActividadPorUsuario","agregarObservacion","listarDirecciones","modificarObservacion","registrarObservacion","presion","registrarMedicionPresion","modificarLecturasPresion","continuidad","registrarMedicionContinuidad","modificarHorasContinuidad","cambiarTipoActividad","cambiarBloqueUrbano","borderBottom","ModalMedicion","promesaListarZonasComponente","datos","propiedades","listarZonas","listarBloquesUrbanos","urbanoInicioPaginado","objJson","bloquesUrbanos","controlarVentanaModalAgregar","mostrarVentanaAgregarModal","seleccionarBloqueUrbano","indiceBloque","nombreBloque","indiceBloqueSeleccionado","denominacionBloqueSeleccionado","mostrarVentanaEditarModal","cambiarEstadoBloque","estaHabilitado","dataset","objetoEnviado","controlarVentanaModalEditar","alterarDenominacionBloque","agregarBloque","zonaParaAgregar","nombreBloqueParaAgregar","zonaTemporalAgregar","options","selectedIndex","objetoNuevo","zona","actualizarDenominacionBloque","objetoModificado","cambiarZona","jsonModificado","urbano","mostrarVentanaModalAgregar","mostrarVentanaModalEditar","elemento","data-bloque","data-urbano","pZona","nIndice","htmlFor","required","fechaTotalConexiones","identificadorZona","tieneConexiones","mesesAgno","agnos","codigoTotalConexion","mesSeleccionado","agnoSeleccionado","totalConexionesSeleccionado","mostrarVentanaModalRegistrar","Conexion","listarTotalConexiones","cambiarCodigoZona","controlVentanaModalRegistrar","controlAlertaModalRegistrar","texto","registrarTotalConexion","nuevoTotalConexion","conexiones","modificarTotalConexiones","cambiarAgno","alignItems","data-sector","conexion","indice","numeroConexiones","mIndice","totalConexionesProdAgua","zonaSeleccionado","altitudSeleccionado","conexionInicioPaginado","codigoProdConexion","zonaRegistro","altitudRegistro","conexionesRegistro","ConexionProdAgua","listarTotalConexionesProdAgua","cambiarZonaSeleccionado","cambiarAltitudSeleccionado","registrarTotalConexiones","esSector","Direccion","listarBloquesPorZona","bloquesZona","listaDirecciones","direccionInicioPaginado","jsonConsulta","cambiarZonaRegistro","zonaConsultada","controlVentanaModalArchivo","mostrarVentanaModalArchivo","archivoCSV","seleccionarDireccion","indiceDireccion","nombreDireccion","inscripcionDireccion","codigoDireccionSeleccionada","denominacionDireccionSeleccionada","inscripcionDireccionSeleccionada","seleccionarArchivo","files","importarArchivo","fd","FormData","append","promesaImportarArchivo","agregarNuevaDireccion","cambiarEstadoDireccion","promesaHabilitarDireccion","modificarNombreDireccion","cambiarZonaDireccion","cambiarAltitud","nombreZonaConsultada","data-id","data-direccion","indice_n1","opacity","lang","FuenteAgua","listarFuentesAgua","fuenteAguaInicioPaginado","fuentesAgua","listarZonasFuente","zonasFuentes","alterarDenominacionFuenteAgua","denominacionFuenteAguaSeleccionada","seleccionarFuenteAgua","indiceFuente","nombreFuente","indiceFuenteAguaSeleccionada","cambiarEstadoFuenteAgua","fuente","controlModalEditar","agregarFuente","enviarModificacion","mostrarOcultarZonas","codigoData","ventana_","data-fuente","codigoFuente","marginLeft","FuenteZona","listarZonaPorFuenteAgua","fuenteZonaInicioPaginado","zonasPorFuenteAgua","listarFuentesDeAgua","agregarRelacionZonaFuente","fuenteSeleccionada","zonaSeleccionada","alertaTexto","alertaColor","cambiarRelacionZonaFuenteAgua","eliminarRelacionFuenteZona","removerObjeto","componentDidMount","data-zona","data-codigo","codigoFuenteZona","nfIndice","fIndice","zIndice","zonaSeleccionInicial","Zona","zonaInicioPaginado","jsonConsultada","modificarZona","zonaModificada","zonaSeleccion","subsector","microsector","controlarVentanaModal","agregarZona","zonaNuevo","cambiarEstadoZona","habilitar","promesaHabilitarZona","cambiarSiEsSector","objetoEnviadoSector","promesaHabilitarUnaZonaComoSector","seleccionarEditarDenominacionZona","mostrarVentanaModal","registrarZona","anchoModal","altoModal","numeros","fill","defaultChecked","Mapa","generarArchivoTxt","contenido","exportarArchivoTexto","DescargaArchivo","mensaje","mostrarDescargaArchivo","controlDescargaArchivo","tipoReporte","idTabla","outerHTML","generarArchivoPdf","table","filename","sheet","buttonText","TablaReporteContinuidadEncuesta","mostrarReporte","actividadContinuidades","tiposAltitud","zonaReporte","altitudReporte","tipoReporteContinuidad","display","justifyContent","cantidadRegistrosZona","codigoZonaReporte","cantidadRegistrosZonaAltitud","Fragment","paddingLeft","horaServicio","promedioHora","TablaReporteContinuidadPonderado","promedioPonderados","promedioConexionesReporte","promedioProductoReporte","promedioConexionesZona","promedioProductoZona","indiceAltitud","promedio","conexionesActivas","producto","hora","minuto","representa","contProm","borderRight","toFixed","TablaReporteContinuidadServicio","promedioTotalConexiones","promedioPesoPonderado","promedioGeneralHora","promedioPesoPonderadoZona","promedioHoraZona","parseFloat","TablaReporteContinuidadMenor6Hrs","sumaConexionesActivas","sumaConexionesMenor6Hrs","sumaContConex","conexionesMenor6hrs","cant","horasAcumulado","cantAcumulado","continuidadMenor6Hrs","totalHora","conexionesMenor6Hrs","sumarConexionesMenor6Hrs","TablaReporteContinuidadMenor18Hrs","sumaConexionesMenor18Hrs","conexionesMenor18hrs","continuidadMenor18Hrs","conexionesMenor18Hrs","sumarConexionesMenor18Hrs","TablaReporteResumenContinuidad6Hrs","TablaReporteResumenContinuidad18Hrs","TablaReporteResumenContinuidad","mesActual","agnoActual","urbanoReporte","mesReporte","agnoReporte","cantidadZonas","cantidadPuntosMedidos","cantidadPuntosRegistrados","tituloReporteContinuidad","ReporteContinuidad","generarInformacionDocumento","cambiarMesReporte","reporteContinuidad","cambiarAgnoReporte","cambiarZonaReporte","cambiarAltitudReporte","cambiarTipoReporte","busqueda","continuidades","verificarRegistrosCompletos","generarReporte","datosVacios","zonaSector","z","insertarPonderado","calcularPromedios","promedioPonderado","TablaReporteEncuesta","TablaReportePonderado","TablaReporteResumen6Hrs","TablaReporteResumen18Hrs","TablaReporteResumen","TablaReportePresionEncuesta","actividadPresiones","tipoReportePresion","promedioPresionAltitud","cantidadPresionAltitud","promedioPresion","TablaReportePresionPonderado","promedioPresiones","TablaReportePresionServicio","promedioProductoPonderado","sumaPresionMCA","sumaPresionPSI","productoPronderado","presionMCA","presionPSI","isNaN","promedioProductoConexiones","promedioPresionPSI","promedioPresionMCA","mostrarPromedios","TablaReportePreMin","console","log","sumaConexionesPresionMin","sumaPresConex","conexionesMenor10Mca","presionAcumulado","presionMenor10Mca","promedioPresionZonaAltitud","sumarConexionesMenor10Mca","TablaReportePreMax","sumaConexionesPresionMax","conexionesMayor50Mca","presionMayor50Mca","sumarconexionesMayor50Mca","TablaReporteResumenPresionMaxima","TablaReporteResumenPresionMinima","tituloReportePresion","ReportePresion","reportePresion","presiones","insertarPromedioZonaAltitud","resolverr","promesaTotalConexionesActivasZonaAltitud","insertarTotalConexionesActivas","TablaReporteResumenPreMin","TablaReporteResumenPreMax","Navegador","identificarModulo","location","moduloAtivo","viewBox","Icono","conectado","MenuDesplegable","mostrar","Menu","controlMenuLateral","IconoUsuario","textDecoration","IconoSesion","controlFondoMenu","estadoConectado","mostrarMenuLateral","App","actualizarEstado","estado","message","exact","path","component","render","CambioContrasegna","ActividadAdministrador","ActividadOperario","ReactDOM"],"mappings":"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","file":"static/js/main.a7e3003a.chunk.js","sourcesContent":["export const datosServidor = () => {\n    const datos = {\n        protocolo : \"http\",\n        ip : \"18.191.29.185\",\n        puertoServidor : \"5000\",\n        puertoAplicacion : \"5000\"\n    }\n    return datos;\n}\n\nexport const obtenerDenominacionGrupoUsuario = (grupoUsuario) => {\n    if(grupoUsuario.toString() === \"0\"){ return \"Operador\";}\n    if(grupoUsuario.toString() === \"1\"){ return \"Administrador\";}\n    if(grupoUsuario.toString() === \"2\"){ return \"Gerente\";}\n    return \"Sin grupo\";\n}\n\nexport const numeroArabigoEnRomano = (numero) => {\n    var dummyArray = [\n        \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\", \n        \"X\", \"XI\", \"XII\", \"XIII\", \"XIV\", \"XV\", \"XVI\", \"XVII\", \"XVIII\", \"IXX\", \"XX\",\n        \"XXI\", \"XXII\", \"XXIII\", \"XXIV\", \"XXV\", \"XXVI\", \"XXVII\", \"XXVIII\", \"XXIX\", \"XXX\"\n        ]; \n    return dummyArray[numero];\n}\n\nexport const obtenerFecha = (fechaTexto, dias) => {\n    var fecha = new Date();\n    if(fechaTexto){ fecha = new Date(fechaTexto) }  \n    if(dias){ fecha.setDate(fecha.getDate() + dias) }\n    \n    var añoDate = fecha.getFullYear();\n    var mesDate = fecha.getMonth() + 1;\n    var diaDate = fecha.getDate();\n\n    var fechaRespuesta = añoDate + \"-\";\n\n    if(mesDate < 10){ fechaRespuesta = fechaRespuesta + \"0\" + mesDate; }\n    else { fechaRespuesta = fechaRespuesta + mesDate }\n    fechaRespuesta = fechaRespuesta + \"-\";\n    if(diaDate < 10){ fechaRespuesta = fechaRespuesta + \"0\" + diaDate; }\n    else { fechaRespuesta = fechaRespuesta + diaDate; }\n\n    return fechaRespuesta;\n}\n\nexport const convertirNumeroAHora = (numeroHora, formato) => {\n    var horas=0,minutos=0,segundos=0;\n    var horaConvertida = \"\";\n    switch (formato) {\n        case \"hh:mm:ss\":\n            horas = Math.floor(numeroHora);\n            minutos =  Math.floor((numeroHora - horas) * 60);\n            segundos = Math.round((((numeroHora - horas) * 60) - minutos) * 60);\n            if(horas < 10) { horas = \"0\" + horas}\n            if(minutos < 10) { minutos = \"0\" + minutos}\n            if(segundos < 10) { segundos = \"0\" + segundos}\n            horaConvertida = horas + \":\" + minutos + \":\" + segundos;\n        break;\n        case \"hh:mm\":\n            horas = Math.floor(numeroHora);\n            minutos =  Math.round((numeroHora - horas) * 60) ;\n            if(horas < 10) { horas = \"0\" + horas}\n            if(minutos < 10) { minutos = \"0\" + minutos}\n            horaConvertida = horas + \":\" + minutos;\n        break;\n        default: break;\n    }\n    return horaConvertida;\n}\n\nexport const obtenerDenominacionTipoAltitud = (codigoTipoAltitud) => {\n    //if(codigoTipoAltitud === 0){ return \"Sin Especificar\" }\n    if(codigoTipoAltitud === 1){ return \"Baja\" }\n    if(codigoTipoAltitud === 2){ return \"Media\" }\n    if(codigoTipoAltitud === 3){ return \"Alta\" }\n    return \"SNES\"; // SIN ESPECIFICAR\n}\n\nexport const obtenerCodigoTipoAltitud = (altitudDenominacion) => {\n    //if(altitudDenominacion === \"Sin Especificar\"){ return 0; }\n    if(altitudDenominacion === \"Baja\"){ return 1 }\n    if(altitudDenominacion === \"Media\"){ return 2 }\n    if(altitudDenominacion === \"Alta\"){ return 3 }\n    return 0;\n}\n\nexport const exportarArchivoTexto = (contenido, nombreArchivo) => {\n    const texto = new Blob([contenido], {type: 'text/plain'});\n    const archivo = document.createElement(\"a\");\n    archivo.href = URL.createObjectURL(texto);\n    archivo.download = nombreArchivo;\n    document.body.appendChild(archivo);\n    archivo.click();\n}\n\nexport const verificarEstadoActividad = (estadoActividad) => {\n    if(estadoActividad === null){ return \"Sin Programar\" }\n    if(estadoActividad === 1){ return \"Inscrito\" }\n    if(estadoActividad === 2){ return \"Finalizado\" }\n}\n\nexport const listaMesesAgno = [\n    { numero:1,letra:\"01\",nombre:\"Enero\"},\n    { numero:2,letra:\"02\",nombre:\"Febrero\"},\n    { numero:3,letra:\"03\",nombre:\"Marzo\"},\n    { numero:4,letra:\"04\",nombre:\"Abril\"},\n    { numero:5,letra:\"05\",nombre:\"Mayo\"},\n    { numero:6,letra:\"06\",nombre:\"Junio\"},\n    { numero:7,letra:\"07\",nombre:\"Julio\"},\n    { numero:8,letra:\"08\",nombre:\"Agosto\"},\n    { numero:9,letra:\"09\",nombre:\"Setiembre\"},\n    { numero:10,letra:\"10\",nombre:\"Octubre\"},\n    { numero:11,letra:\"11\",nombre:\"Noviembre\"},\n    { numero:12,letra:\"12\",nombre:\"Diciembre\"}\n];\n\nexport const listaAgnos = [\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\"];\n\nexport const modulos = [\n    { codigo: 1, url:'/app', titulo: 'MEDI - SEDA', grupo: 0 },\n    { codigo: 2, url:'/app/ingresar', titulo: 'Iniciar Sesión', grupo: 0 }, \n    { codigo: 3, url:'/app/salir', titulo: 'Cerrar Sesión', grupo: 0 }, \n    { codigo: 4, url:'/app/usuario', titulo: 'Usuarios del Sistema', grupo: 1 },\n    { codigo: 5, url:'/app/perfil', titulo: 'Perfil de Usuario', grupo: 1 },                \n    { codigo: 6, url:'/app/cambiocontra', titulo: 'Cambio de Contraseña', grupo: 0 },\n    { codigo: 7, url:'/app/zona', titulo: 'Zonas Comerciales', grupo: 1 },\n    { codigo: 8, url:'/app/bloque', titulo: 'Bloques Urbanos', grupo: 1 },\n    { codigo: 9, url:'/app/direccion', titulo: 'Direcciones Registradas', grupo: 1 },\n    { codigo: 11, url:'/app/conexion', titulo: 'Conexiones Activas', grupo: 1 },\n    { codigo: 12, url:'/app/conexion/prodagua', titulo: 'Conexiones Por Zona (Pro. Agua)', grupo: 1 },\n    { codigo: 13, url:'/app/actividad', titulo: 'Menu de Actividad/Reporte', grupo: 1 },\n    { codigo: 14, url:'/app/actividad/administrador/presion', titulo: 'Actividades de Presión', grupo: 1 },\n    { codigo: 15, url:'/app/actividad/administrador/continuidad', titulo: 'Actividades de Continuidad', grupo: 1 },\n    { codigo: 16, url:'/app/actividad/operario', titulo: 'Actividad de Operario', grupo: 0 },\n    { codigo: 17, url:'/app/aguafuente', titulo: 'Fuentes de Agua', grupo: 1 },\n    { codigo: 18, url:'/app/zonafuente', titulo: 'Fuentes de Agua y Zonas Comerciales', grupo: 1 },\n    { codigo: 19, url:'/app/reporte/presion', titulo: 'Reporte de Presión', grupo: 1 },\n    { codigo: 20, url:'/app/reporte/continuidad', titulo: 'Reporte de Continuidad', grupo: 1 },\n];\n\nexport const resoluciones = [\n    { nombre: \"8K\", ancho: 7680, altura: 4320 },\n    { nombre: \"UHD\", ancho: 3840, altura: 2160 },\n    { nombre: \"QHD\", ancho: 2560, altura: 1440 },\n    { nombre: \"Full HD\", ancho: 1920, altura: 1080 },\n    { nombre: \"HD+\", ancho: 1366, altura: 768 },\n    { nombre: \"HD\", ancho: 1280, altura: 720 },\n];\n\nexport const resolucionActual = () => {\n    //window.screen.width - document.documentElement.offsetWidth\n    //window.screen.height - document.documentElement.offsetHeight\n    //return document.documentElement.offsetWidth +\"x\"+document.documentElement.offsetHeight;\n    return window.screen.width +\"x\"+window.screen.height;\n}\n\nexport const dispositivoMovil = () => {\n    if(window.screen.width < 640){ return true }\n    return false;\n}\n\nexport const verificarFechaEntrega = (fecha) => {\n    var fechaHoy = new Date(obtenerFecha());\n    var fechaEntrega = new Date();\n    var vencido = false\n    if(fecha){ fechaEntrega = new Date(fecha) }  \n\n    if(fechaEntrega < fechaHoy){vencido = true}\n\n    return vencido;\n}\n\nexport const exportarArchivoPdf = (html, orientacion, nombreArchivo) => {\n    exportarHtmlAPdf(html, orientacion, nombreArchivo).then(respuesta => {            \n        const pdf = new Blob([respuesta], { type: 'application/pdf'});\n        const archivo = document.createElement(\"a\");\n        archivo.href = URL.createObjectURL(pdf);\n        archivo.download = nombreArchivo;\n        document.body.appendChild(archivo);\n        archivo.click();\n    });\n}\n\nfunction exportarHtmlAPdf( html, orientacion, nombreArchivo ){\n    const documento = { html , orientacion , nombreArchivo }\n    return new Promise((resolver,rechazar)=>{\n        fetch(urlServidor+'/reporte/pdf/' ,{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(documento),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => { resolver(respuesta.blob()) }) // Enviar Respuesta\n        .catch(error => { rechazar(error) }); // Enviar Error\n    });\n}\n\nexport const urlServidor = datosServidor().protocolo+'://'+datosServidor().ip+':'+datosServidor().puertoServidor;\nexport const urlAplicacion = datosServidor().protocolo+'://'+datosServidor().ip+':'+datosServidor().puertoAplicacion;\n\n/*\n-----      MONITORES     -------\nancho: 320 , altura: 240  pixeles (4:3): monitores de 1 y 2″.\nancho: 360 , altura: 640  pixeles (4:3): monitores de 2 y 3″.\nancho: 375 , altura: 812  pixeles (4:3): monitores de 3 y 4″.\nancho: 384 , altura: 640  pixeles (4:3): monitores de 4 y 5″.\nancho: 414 , altura: 736  pixeles (4:3): monitores de 5 y 6″.\nancho: 512 , altura: 384  pixeles (4:3): monitores de 6 y 7″.\nancho: 600 , altura: 1024  pixeles (4:3): monitores de 7 y 8″.\nancho: 640 , altura: 360  pixeles (4:3): monitores de 8 y 9″.\nancho: 768 , altura: 1024  pixeles (4:3): monitores de 9 y 10″.\nancho: 800 , altura: 1280  pixeles (4:3): monitores de 10 y 11″.\nancho: 1024 , altura: 768  pixeles (4:3): monitores de 14 y 15″.\nancho: 1024 , altura: 1366  pixeles (4:3): monitores de 14 y 16″.\nancho: 1280 , altura: 1024 pixeles (4:3): monitores de 17 y 19″.\nancho: 1440 , altura: 900  pixeles (4:3): monitores de 16 y 20″.\nancho: 1600 , altura: 1200 pixeles (4:3): monitores de  19 y 21″.\nancho: 1280 , altura: 800  pixeles (16:10): monitores de 17 y 19″.\nancho: 1680 , altura: 1050 pixeles (16:10): monitores de 19 y 21″.\nancho: 1920 , altura: 1200 pixeles (16:10): monitores de 22, 24, 26″\nancho: 2560 , altura: 1600 pixeles (16:10): monitores por encima de 26″.\nancho: 1280 , altura: 720  pixeles (16:9): monitores de 17 y 19″. Conocido como resolución HD.\nancho: 1368 , altura: 768  pixeles (16:9): monitores de 17 y 19″.\nancho: 1600 , altura: 900  pixeles (16:9): monitores de 19 y 22″.\nancho: 1920 , altura: 1080 pixeles (16:9): monitores de 24, 25, 27, 32″. Conocido como resolución Full HD.\nancho: 2560 , altura: 1440 pixeles (16:9): monitores de 24, 27, 32″.\nancho: 3840 , altura: 2160 pixeles (16:9): monitores de 27, 32″ y en adelante.  Conocido como resolución 4K.\nancho: 5120 , altura: 2880 pixeles (16:9): monitores por encima de 40″. Conocida como resolución 5K.\nancho: 7680 , altura: 4320 pixeles (16:9): monitores por encima de 50″. Conocida como resolución 8K.\nancho: 2560 , altura: 1080 pixeles (21:9): monitores de 25, 27 y 29″.\nancho: 3440 , altura: 1440 pixeles (21:9): monitores de 34″ en adelante.\nancho: 5120 , altura: 2160 pixeles (21:9): monitores de 32″ en adelante.\n*/","/*\n-- File:             usuarioDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Server NODE JS EXPRESS y Exportar funciones de Usuario.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020           \n*/\n\n//import server from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport jwt_decode from 'jwt-decode'; // Libreria para decodificar JsonWebToken\nimport { urlServidor } from './funcionesSistema.js';\nconst Url = urlServidor + '/api/usuario/';\n\n\n// LISTAR USUARIOS DISPONIBLES\nexport function promesaListarUsuariosPaginado(Busqueda){ \n    return new Promise((resolver,rechazar)=>{\n        fetch(Url + \"paginado\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(response => resolver(response.json()))\n        .catch(error => rechazar(error)); // Enviar Error\n    });\n}\n\n// LISTAR USUARIOS DISPONIBLES\nexport function usuariosDisponibles(){ \n    return new Promise((resolver,rechazar) =>{\n        fetch(Url+\"disponibles\") // Fetch para consumir API de SERVER NODE JS\n        .then((usuarios) => usuarios.json())\n        .then((usuariosJson) => {\n            resolver(usuariosJson); // Enviar Usuarios\n        })\n        .catch((error)=>{\n            rechazar(error); // Enviar Error\n        });\n    });\n}\n\n// AGREGAR NUEVO USUARIO\nexport function agregarNuevoUsuario(UsuarioNuevo){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(UsuarioNuevo),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolver(responseJson); // Enviar Respuesta\n        })\n        .catch((error)=>{\n            rechazar(error); // Enviar Error\n        });\n    });\n}\n\n// DESHABILITAR USUARIO\nexport function deshabilitarCuentaUsuario(CuentaUsuario){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'DELETE',\n            body: JSON.stringify(CuentaUsuario),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolver(responseJson); // Enviar Respuesta\n        })\n        .catch((error)=>{\n            rechazar(error); // Enviar Error\n        });\n    });\n}\n\n//MODIFICAR CONTRASEÑA DE USUARIO\nexport function modificarContrasegnaCuenta(UsuarioCuenta){ \n    const urlFetch = Url + \"contrasegna/\";\n    return new Promise((resolver,rechazar)=>{\n        fetch(urlFetch,{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(UsuarioCuenta),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then(response => resolver(response.json()))//Enviar respuesta\n        .catch(error => rechazar(error)); // Enviar Error\n    });\n}\n\n//MODIFICAR DATOS DE CUENTA USUARIO\nexport function modificarDatosCuenta(UsuarioCuenta){ \n    const urlFetch = Url + \"datos/\";\n    return new Promise((resolver,rechazar)=>{\n        fetch(urlFetch,{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(UsuarioCuenta),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolver(responseJson); // Enviar Respuesta\n        })\n        .catch((error)=>{\n            rechazar(error); // Enviar Error\n        });\n    });\n}\n\n//MODIFICAR CUENTA DE USUARIO\nexport function modificarUsuarioCuenta(UsuarioCuenta){ \n    const urlFetch = Url;\n    return new Promise((resolver,rechazar)=>{\n        fetch(urlFetch,{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(UsuarioCuenta),\n            headers: new Headers({\n                'Content-type':'application/json'\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolver(responseJson); // Enviar Respuesta\n        })\n        .catch((error)=>{\n            rechazar(error); // Enviar Error\n        });\n    });\n}\n\n//MODIFICAR ESTADO HABILITADO DE USUARIO\nexport function promesaModificarHabilitadoUsuario(Parametros){ \n    return new Promise((resolver,rechazar)=>{\n        fetch(Url + \"habilitar/\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(Parametros),\n            headers: new Headers({'Content-type':'application/json' })\n        })\n        .then(response => resolver(response.json()))\n        .catch(error=> rechazar(error));// Enviar Error\n    });\n}\n\n/* VERIFICAR GRUPO DE USUARIO\n\n==    Operario --> 1        |   Administrador --> 0\n- Cambio de Contraseña      | - Cambio de Contraseña\n- Ingresar/Salir            | - Ingresar/Salir\n- Listar Tareas Pendientes  | - Listar Presiones\n- Registrar Continuidad     | - Listar Continuidades\n- Registrar Presión         | - CRUD Usuario\n-                           | - CRUD Dirección\n-                           | - CRUD Tareas\n*/\nexport function verificarGrupoUsuario() {\n    const token = localStorage.getItem('tokenUsuario');\n    if(token !== \"\" && token !== null && token !== \"undefined\" && token !== undefined){\n        const decode = jwt_decode(token);\n        var res = {\n            codigoUsuario : decode.codigoUsuario,\n            cuentaUsuario : decode.cuentaUsuario,\n            nombres : decode.nombres,\n            apellidosPaterno : decode.apellidosPaterno,\n            apellidosMaterno : decode.apellidosMaterno,\n            grupo : decode.grupo,\n            firmaDigital : decode.firmaDigital,\n            firmaSesion : decode.firmaSesion\n        }\n        return res;\n    }else{\n        return false\n    }\n}\n","/*\n-- File:             appWebDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Verificar Datos de Aplicación\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020\n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst Url = urlServidor + '/version/';\n\n\n// VERIFICAR CONECCION A SERVIDOR EXPRESS DE NODE JS\nexport function conectarServidor(){ \n    return new Promise((resolver,rechazar) =>{\n        fetch(Url) // Fetch para consumir API de SERVER NODE JS\n        .then(estado => resolver(estado.json())) // Enviar estado\n        .catch(error => resolver({ error : error.message })); // Enviar Error\n    });\n}\n\n// VERIFICAR CONECCION A BASE DE DATOS\nexport function conectarBaseDatos(){ \n    return new Promise((resolver,rechazar) =>{\n        fetch(Url + \"repositorio/\") // Fetch para consumir API de SERVER NODE JS\n        .then(estado => resolver(estado.json())) // Enviar estado\n        .catch(error => resolver({ error : error.message })); // Enviar Error\n    });\n}\n\n//  VERIFICAR CONECCION A SERVIDOR EXPRESS DE NODE JS Y BASE DE DATOS\nexport function conectar(){ \n    return new Promise((resolver,rechazar) =>{\n        fetch(Url + \"datos/\") // Fetch para consumir API de SERVER NODE JS\n        .then(estado => resolver(estado.json())) // Enviar estado\n        .catch(error => resolver({ error : error.message })); // Enviar Error\n    });\n}\n\n\n","/*\n-- File:             Principal.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI Principal de la Aplicación\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\nimport { verificarGrupoUsuario } from '../datos/usuarioDB.js';\nimport { resolucionActual } from '../datos/funcionesSistema.js';\n\nconst estadoInicial = {\n    codigoUsuario : \"\",\n    cuentaUsuario : \"\",\n    nombres : \"\",\n    apellidosPaterno : \"\",\n    apellidosMaterno : \"\",\n    firmaDigital : \"\",\n    grupo : -1, // 1 -> Operador - 0 -> Administrador \n\n    mostrarModal: false,\n}\n\nexport class Principal extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    accesosDirectos = () => {\n        var accesos = (  <div>MEDI SEDA</div>  );\n        switch (this.state.grupo) {\n            case 0: accesos = ( // Usuario Operador\n                <div>\n                    <a href=\"/actividad/operario\">Acitividades de Presión</a>\n                </div>);\n            break;\n            case 1: accesos = ( // Usuario Administrador\n                <div>\n                    <a href=\"/actividad/administrador/presion\">Acitividades de Presión</a>\n                    <a href=\"/actividad/administrador/continuidad\">Acitividades de Presión</a>\n                    <a href=\"/reporte/presion\">Reporte de Presión</a>\n                    <a href=\"/reporte/continuidad\">Reporte de Continuidad</a>\n                </div>);\n            break; \n            case 2: accesos = ( // Usuario Gerente\n                <div>\n                    <a href=\"/reporte/presion\">Reporte de Presión</a>\n                    <a href=\"/reporte/continuidad\">Reporte de Continuidad</a>\n                </div>);\n            break;\n            default: break;\n        }\n        return accesos;\n    }\n\n    controlModal = () => {\n        this.setState({ mostrarModal : !this.state.mostrarModal });\n    }\n\n    componentDidMount () {\n        const res = verificarGrupoUsuario();\n        if(res){ this.setState(res) }\n        else{ this.setState(estadoInicial) }\n    }\n\n    render() { return(\n        <div>\n            <div className=\"contenedor\">\n                <div className=\"centrado\" style={{fontSize:\"20px\"}}><b>SISTEMA WEB MEDI SEDA V.0.1</b></div>\n                <br />\n                <div className=\"centrado\">Toma de valores de continuidad y presión.</div>\n                <br />\n                <div className=\"centrado\">La resolución de tu pantalla es: { resolucionActual() }</div>\n            </div>\n        </div>\n    )}\n}\n\nexport default Principal;","/*\n-- File:             UsuarioNoValido.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para mostrar Mensaje de Usuario no Valido\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\n\nexport class Error404 extends Component {\n    render() {\n        return (\n            <div className=\"centrado\">\n                <div className=\"cuadro_mensaje peligro\" style={{width:\"50%\"}}> \n                   <p> Usuario no Valido </p>\n                   <p> Esta acción sera Reportada</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Error404;","\nimport React, { Component } from 'react';\nimport { verificarGrupoUsuario } from '../datos/usuarioDB.js';\nimport { obtenerDenominacionGrupoUsuario } from '../datos/funcionesSistema';\nimport UsuarioNoValido from './UsuarioNoValido.js';\n\nconst estadoInicial = {\n    codigoUsuario : \"\",\n    cuentaUsuario : \"\",\n    nombres : \"\",\n    apellidosPaterno : \"\",\n    apellidosMaterno : \"\",\n    firmaDigital : \"\",\n    grupo : \"\",\n}\n\nexport class Perfil extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = estadoInicial; \n    }\n\n    componentDidMount () {\n        const usuario = verificarGrupoUsuario();\n        if(usuario){ this.setState(usuario) }\n        else{ this.props.history.push('/app') }\n    }\n\n    render() {\n        if(this.state.codigoUsuario){\n            return (\n                <div className=\"contenedor\">\n                    <div className=\"centrado\">\n                        <table style={{width:\"25%\"}}>\n                            <tbody>\n                                <tr className=\"tabla_fila\">\n                                    <td><b>Nombres</b></td>\n                                    <td>{this.state.nombres}</td>\n                                </tr>\n                                <tr className=\"tabla_fila\">\n                                    <td><b>Apellido Paterno</b></td>\n                                    <td>{this.state.apellidosPaterno}</td>\n                                </tr>\n                                <tr className=\"tabla_fila\">\n                                    <td><b>Apellido Materno</b></td>\n                                    <td>{this.state.apellidosMaterno}</td>\n                                </tr>\n                                <tr className=\"tabla_fila\">\n                                    <td><b>Grupo</b></td>\n                                    <td>{obtenerDenominacionGrupoUsuario(this.state.grupo)}</td>\n                                </tr>\n                                <tr className=\"tabla_fila\">\n                                    <td><b>Contraseña</b></td>\n                                    <td><a href=\"/app/cambiocontra\">Actualizar</a></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>        \n            )\n        }else{\n            return(<UsuarioNoValido />)\n        }\n\n    }\n}\n\nexport default Perfil;","var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */\r\nvar chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */\r\nexport function hex_sha1(s){return binb2hex(core_sha1(str2binb(s),s.length * chrsz));}\r\nfunction core_sha1(x, len)\r\n{\r\n  x[len >> 5] |= 0x80 << (24 - len % 32);\r\n  x[((len + 64 >> 9) << 4) + 15] = len;\r\n\r\n  var w = Array(80);\r\n  var a =  1732584193;\r\n  var b = -271733879;\r\n  var c = -1732584194;\r\n  var d =  271733878;\r\n  var e = -1009589776;\r\n\r\n  for(var i = 0; i < x.length; i += 16)\r\n  {\r\n    var olda = a;\r\n    var oldb = b;\r\n    var oldc = c;\r\n    var oldd = d;\r\n    var olde = e;\r\n\r\n    for(var j = 0; j < 80; j++)\r\n    {\r\n      if(j < 16) w[j] = x[i + j];\r\n      else w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\r\n      var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\r\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\r\n      e = d;\r\n      d = c;\r\n      c = rol(b, 30);\r\n      b = a;\r\n      a = t;\r\n    }\r\n\r\n    a = safe_add(a, olda);\r\n    b = safe_add(b, oldb);\r\n    c = safe_add(c, oldc);\r\n    d = safe_add(d, oldd);\r\n    e = safe_add(e, olde);\r\n  }\r\n\r\n  return [a, b, c, d, e];\r\n}\r\n\r\nfunction sha1_ft(t, b, c, d)\r\n{\r\n  if(t < 20) return (b & c) | ((~b) & d);\r\n  if(t < 40) return b ^ c ^ d;\r\n  if(t < 60) return (b & c) | (b & d) | (c & d);\r\n  return b ^ c ^ d;\r\n}\r\n\r\nfunction sha1_kt(t)\r\n{\r\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\r\n         (t < 60) ? -1894007588 : -899497514;\r\n}\r\n\r\nfunction safe_add(x, y)\r\n{\r\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\r\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\r\n  return (msw << 16) | (lsw & 0xFFFF);\r\n}\r\n\r\nfunction rol(num, cnt)\r\n{\r\n  return (num << cnt) | (num >>> (32 - cnt));\r\n}\r\n\r\nfunction str2binb(str)\r\n{\r\n  var bin = [];\r\n  var mask = (1 << chrsz) - 1;\r\n  for(var i = 0; i < str.length * chrsz; i += chrsz)\r\n    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (32 - chrsz - i%32);\r\n  return bin;\r\n}\r\n\r\nfunction binb2hex(binarray)\r\n{\r\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\r\n  var str = \"\";\r\n  for(var i = 0; i < binarray.length * 4; i++)\r\n  {\r\n    str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +\r\n           hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);\r\n  }\r\n  return str;\r\n}\r\n","import React from 'react';\r\n\r\nexport const TAMAGNO_PAGINA = 15; // Numero de resultados por página/pantalla \r\nexport const CANTIDAD_PAGINA = 40; // Numero total de paginas\r\n\r\nconst Paginacion = ({ cantidadElementos, cambiarPagina, paginaActual }) => {\r\n\r\n    function disminuirPagina(){ if(paginaActual > 1){ cambiarPagina(paginaActual - 1) } }\r\n    \r\n    function incrementarPagina(){ if(cantidadElementos === TAMAGNO_PAGINA){ cambiarPagina(paginaActual + 1) } }\r\n\r\n    return(\r\n        <div className=\"centrado\">\r\n            <button className=\"paginado_boton\" onClick={disminuirPagina} title=\"Página anterior\">&larr;</button>\r\n            \r\n            <input style={{textAlign:'center',border:'none'}} size={2} type=\"number\" value={paginaActual} \r\n                    min=\"1\" pattern=\"[0-9]*\" name=\"pagina_\" id=\"pagina_\" title={'Número de Página : ' + paginaActual} \r\n                    onChange={cambiarPagina} \r\n            /> \r\n            \r\n            <button className=\"paginado_boton\" onClick={incrementarPagina} title=\"Página siguiente\">&rarr;</button>                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion\r\n","import React from 'react';\r\nconst CuadroMensaje = ({ tipoCuadro,children,cerrarMensaje }) => {\r\n    return(\r\n    <div className={`cuadro_mensaje ${tipoCuadro}`} style={{/*display:\"grid\",gridTemplateColumns:\"90% 10%\"*/}}>\r\n        <div style={{marginTop:\"auto\"}}>{children}</div>\r\n        {/*cerrarMensaje ? <div className=\"boton_cerrar\" onClick={()=>cerrarMensaje}>&times;</div> : null*/}\r\n    </div>\r\n    );\r\n}\r\nexport default CuadroMensaje;","import React from 'react';\nconst Modal = ( {mostrarModal,controlModal,tituloModal,children} ) => {\n    if(mostrarModal){ return (\n        <div className=\"modal\">\n            <div className=\"modal_ventana\">\n                <div className=\"modal_encabezado\">\n                    <div> {tituloModal} </div>   \n                    <div className=\"boton_cerrar\" onClick={controlModal}>&times;</div>    \n                </div>\n                <hr />\n                { children }\n            </div>\n      </div>\n    )}\n    return null;\n}\nexport default Modal","/*\n-- File:             Usuario.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para Usuario\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\nimport { hex_sha1 } from '../../datos/sha1';\nimport { obtenerDenominacionGrupoUsuario } from '../../datos/funcionesSistema';\nimport { promesaModificarHabilitadoUsuario,\n         promesaListarUsuariosPaginado,\n         modificarUsuarioCuenta,\n         modificarDatosCuenta,\n         agregarNuevoUsuario,\n         verificarGrupoUsuario } from '../../datos/usuarioDB.js';\n\n//IMPORTAR COMPONENTES\nimport Paginacion, { CANTIDAD_PAGINA, TAMAGNO_PAGINA } from \"../../componentes/Paginacion.js\";\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from \"../../componentes/Modal.js\";\n\nconst usuarioInical = { // Estado inicial de Usuario Seleccionado\n    codigoUsuario : \"\",\n    cuentaUsuario : \"\",\n    contrasegnaUsuario : \"****\",\n    nombres : \"\",\n    apellidosPaterno : \"\",\n    apellidosMaterno : \"\",\n    firmaDigital : \"\",\n    grupo : \"1\", // GRUPO 1 POR DEFECTO OPERARIOS\n    habilitado : \"1\", // HABILITADO POR DEFECTO\n}\n\nconst estadoInicial = { // Estado inicial del Componente\n    \n    usuario : verificarGrupoUsuario(),\n    usuarioSeleccion : usuarioInical, // Usuario Seleccionado Para Modificar o Deshabilitar\n    \n    usuarios : [], // Usuarios obtenidos de API\n    sugerenciasUsuarios : [], // Sugerencia de Usuarios a Buscar\n    \n    mostrarModal : false, // Estado para Abrir o Cerrar el Modal\n    mostrarContrasegna : false, // Estado para ver Contraseña al Hacer Reset\n    \n    paginaActual : 1, // Pagina Actual del Paginado\n    usuarioInicioPaginado : 1, // Inicio de Paginado para Usuarios\n    \n    textoUsuarioBuscar : \"\", // Texto a Buscar\n};\n\nexport class Usuario extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n        this.cambiarTextoUsuarioBusqueda = this.cambiarTextoUsuarioBusqueda.bind(this);\n    }\n\n    listarUsuarios = () => {\n        this.setState({ usuarioInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }\n        , () => {\n            promesaListarUsuariosPaginado({inicio : this.state.usuarioInicioPaginado , resultados: TAMAGNO_PAGINA}).then((usuarios) => { // Consumiendo API\n                if(!usuarios.error){ this.setState({ usuarios : usuarios , sugerenciasUsuarios : usuarios }) }// Cambiar estado con Resultado\n            });\n        });\n    }\n\n    cambiarHabilitadoUsuario = (usuario) => {\n        if(usuario.codigoUsuario){\n            const Parametros = { usuario:usuario.codigoUsuario,habilitado:(parseInt(usuario.habilitado)? 0 : 1),quien:this.state.usuario.firmaDigital };\n            promesaModificarHabilitadoUsuario(Parametros).then(_ => this.listarUsuarios());\n        }\n    }\n\n    resetearContrasegna = () => {\n        const numAleatorio = (Math.random()*( 10000 - 900) + 900)|0;\n        const usuarioSeleccion = this.state.usuarioSeleccion;\n        usuarioSeleccion[\"contrasegnaUsuario\"] = numAleatorio + \"\";\n        this.setState({ usuarioSeleccion , mostrarContrasegna : !this.state.mostrarContrasegna});\n    }\n\n    guardarUsuario = (evento) => {\n        evento.preventDefault();\n        var usuario = this.state.usuarioSeleccion;\n        usuario[\"quien\"] = this.state.usuario.firmaDigital;\n\n        if(usuario.contrasegnaUsuario){ usuario[\"contrasegnaUsuario\"] =  hex_sha1(usuario.contrasegnaUsuario) }\n   \n        if(usuario.codigoUsuario !== \"\" && usuario.codigoUsuario !== null){\n            if(usuario.contrasegnaUsuario !== \"\" && usuario.contrasegnaUsuario !== null && usuario.contrasegnaUsuario !== undefined){\n                //usuario[\"contrasegnaUsuario\"] =  hex_sha1(usuario.contrasegnaUsuario);             \n                modificarUsuarioCuenta(usuario).then(()=>{this.listarUsuarios();this.controlModal()})\n            }else{\n                modificarDatosCuenta(usuario).then(()=>{this.listarUsuarios();this.controlModal()});\n            }\n        }else{\n            agregarNuevoUsuario(usuario).then(()=>{this.listarUsuarios();this.controlModal()});\n        }\n    }\n\n    modificarUsuarioEstado = (e) => {\n        const { usuarioSeleccion } = this.state;\n        if(e.target.id === \"habilitado\"){\n            usuarioSeleccion[e.target.id] = ! this.state.usuarioSeleccion.habilitado;\n        }else{\n            usuarioSeleccion[e.target.id] = e.target.value;\n        }\n        this.setState({ usuarioSeleccion });\n    }\n\n    seleccionarUsuario = (usuario) => {\n        if(usuario){\n            this.setState({ \n                usuarioSeleccion : usuario,\n                mostrarModal : !this.state.mostrarModal \n            });\n        }\n    }\n\n    controlModal = () => {\n        if(this.state.mostrarModal){\n            const usuarioInical={  codigoUsuario:\"\",cuentaUsuario:\"\",contrasegnaUsuario:\"\",nombres:\"\",\n                apellidosPaterno:\"\",apellidosMaterno:\"\",firmaDigital:\"\",grupo:\"1\",habilitado:\"1\" }\n            this.setState({mostrarContrasegna:false,usuarioSeleccion:usuarioInical});\n        }\n        this.setState({ \n            mostrarModal : !this.state.mostrarModal,\n            mostrarContrasegna : false\n        });\n    }\n\n    cambiarPagina = (pagina) => {        \n        if(parseInt(pagina) > 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || \"\") }\n        if(pagina <= CANTIDAD_PAGINA){ this.setState({ paginaActual: pagina }, () => this.listarUsuarios()) }\n    }\n\n    cambiarTextoUsuarioBusqueda = (evento) => {\n        const textoUsuarioBuscar =  evento.target.value;\n        let sugerenciasUsuarios = [];\n        var paginaActual = this.state.paginaActual;\n        if(textoUsuarioBuscar.length > 0){\n            const regex = new RegExp(`${textoUsuarioBuscar + \" \"}*`, 'i');     \n            sugerenciasUsuarios = this.state.usuarios.sort().filter( usuario => \n                regex.test(usuario[\"nombres\"] + \" \" + usuario[\"apellidosPaterno\"] + \" \" + usuario[\"apellidosMaterno\"] + usuario[\"cuentaUsuario\"]));\n        }\n        if(textoUsuarioBuscar.length === 0){\n            sugerenciasUsuarios = this.state.usuarios;\n        }\n        paginaActual = 1;\n        this.setState(()=>({ sugerenciasUsuarios , textoUsuarioBuscar , paginaActual }));\n    }\n\n    componentDidMount(){\n        if(this.state.usuario.grupo > 0){\n            this.setState({ usuarioInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA },() => {\n                this.listarUsuarios();\n            });\n        }//else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if(this.state.usuario.grupo > 0){\n        return (\n            <div className=\"contenedor\">\n                <div className=\"centrado\">\n                    <input className=\"cuadro_dato\" type = \"text\"\n                        placeholder = \"Busqueda de Operarios\"\n                        value = { this.state.textoUsuarioBuscar }\n                        onChange = { this.cambiarTextoUsuarioBusqueda }\n                    ></input>\n                </div><br />  \n                <Paginacion\n                    cantidadElementos = {this.state.sugerenciasUsuarios.length}\n                    cambiarPagina = {this.cambiarPagina}\n                    paginaActual = {this.state.paginaActual}\n                ></Paginacion><br />\n                <div className=\"centrado\">\n                <table style={{width:'60%'}}>\n                    <thead>\n                        <tr>                    \n                            <th><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar un Nuevo Usuario\" title=\"Registrar/Agregar un Nuevo Usuario\" onClick={ () => this.controlModal()}/></th>\n                            <th>Celular</th> \n                            <th>Nombres</th>\n                            <th>Apellidos</th>\n                            <th>Grupo</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.sugerenciasUsuarios.map(usuario =>\n                        <tr key={usuario.codigoUsuario} className=\"tabla_fila\">\n                            <td style={{textAlign:'center'}}>\n                                <label className=\"boton_habilitado\">\n                                    <input type=\"checkbox\" onChange={()=>this.cambiarHabilitadoUsuario(usuario)} checked={ parseInt(usuario.habilitado) === 1 ? true : false } value={ parseInt(usuario.habilitado) === 1 ? 1 : 0 } name={ usuario.codigoUsuario } id={'chkBox' + usuario.codigoUsuario } />                                \n                                    <div className=\"boton_deslizar redondo\"></div>\n                                </label>\n                            </td>\n                            <td onClick={() => this.seleccionarUsuario(usuario)}>{usuario.cuentaUsuario.toUpperCase()}</td>\n                            <td onClick={() => this.seleccionarUsuario(usuario)}>{usuario.nombres.toUpperCase()}</td>\n                            <td onClick={() => this.seleccionarUsuario(usuario)}>{(usuario.apellidosPaterno + \" \" + (usuario.apellidosMaterno || \"\")).toUpperCase()}</td>\n                            <td style={{textAlign:'center'}} onClick={() => this.seleccionarUsuario(usuario)}>{obtenerDenominacionGrupoUsuario(usuario.grupo)}</td>\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n                </div>\n                <div className=\"centrado\">\n                    {this.state.sugerenciasUsuarios.length > 0 ? null : <div style={{width:\"60%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                </div>\n                <Modal\n                    mostrarModal = {this.state.mostrarModal}\n                    controlModal = {this.controlModal}\n                    tituloModal = {\"Datos de Usuario\"}\n                >\n                <form noValidate onSubmit={this.guardarUsuario} className=\"una_columna\">\n                    <label> Numero Cuenta </label>\n                    <input id=\"cuentaUsuario\" className=\"cuadro_dato\" maxLength=\"9\" value={this.state.usuarioSeleccion.cuentaUsuario || \"\"} onChange={this.modificarUsuarioEstado}/>\n                    <label> Nombres </label>\n                    <input id=\"nombres\" className=\"cuadro_dato\" value={this.state.usuarioSeleccion.nombres || \"\"} onChange = {this.modificarUsuarioEstado}/>\n                    <label> Apellido Paterno </label>\n                    <input id=\"apellidosPaterno\" className=\"cuadro_dato\" value={this.state.usuarioSeleccion.apellidosPaterno || \"\"} onChange={this.modificarUsuarioEstado}/>\n                    <label> Apellido Materno </label>\n                    <input id=\"apellidosMaterno\" className=\"cuadro_dato\" value={this.state.usuarioSeleccion.apellidosMaterno || \"\"} onChange={this.modificarUsuarioEstado}/>\n                    <label> Grupo </label>\n                    <select id=\"grupo\" className=\"cuadro_dato\" defaultValue={this.state.usuarioSeleccion.grupo} onChange={this.modificarUsuarioEstado}>\n                        <option value=\"0\">Operario</option>\n                        <option value=\"1\">Administrador</option>\n                        <option value=\"2\">Gerente</option>\n                    </select>\n                    <div className=\"\">\n                        <input type='checkbox' id='habilitado' className='' checked={this.state.usuarioSeleccion.habilitado || 0} onChange={this.modificarUsuarioEstado}/>\n                        <label>{this.state.usuarioSeleccion.habilitado ? \"Habilitado\" : \"Deshabilitado\"}</label>\n                    </div>\n                    <div style={{cursor:\"pointer\"}} className=\"cuadro_mensaje peligro\" onClick = {()=>this.resetearContrasegna()}>Generar Nueva Contraseña</div>\n                    <input hidden={!this.state.mostrarContrasegna} disabled className=\"cuadro_dato\" value={ this.state.usuarioSeleccion.contrasegnaUsuario || \"*****\"}/>\n                    <div className=\"centrado\">\n                        <button className=\"boton boton_verde\" type=\"submit\">Guardar</button>\n                    </div>\n                </form>\n                </Modal>  \n            </div>\n        )} else { return <UsuarioNoValido /> }\n    }\n}\n\nexport default Usuario;","/*\n-- File:             sesionDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Server NODE JS EXPRESS y Exportar funciones de Inicio de Sesion.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020     \n*/\n\n//import server from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst Url = urlServidor + '/api/sesion/';\n\n// VERIFICAR CREDENCIALES DE USUARIO PARA EL INGRESO\nexport function promesaVerificarIngreso(Credenciales){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url + \"ingresar\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(Credenciales),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()))// Enviar Respuesta\n        .catch(error => rechazar(error));// Enviar Error\n    });\n}\n\n// MODIFICAR HORA DE SALIDA DE INICIO DE SESION POR MEDIO DE FIRMA DE USUARIO Y FIRMA DE SESION\nexport function promesaModificarFechaSalidaSesion(Firmas){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url + \"salir\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(Firmas),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()))// Enviar Respuesta\n        .catch(error => rechazar(error)); // Enviar Error\n    });\n}\n","import React, { Component } from 'react';\nimport { hex_sha1 } from '../../datos/sha1';\nimport { promesaVerificarIngreso } from '../../datos/sesionDB.js';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB';\n\n/** COMPONENTES **/\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\n\nconst estadoInicial = {  \n    cuentaUsuario : \"\",\n    contrasegna : \"\",\n    mensajeTexto : \"\"\n}\n\nexport class InicioSesion extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    ingresarDatos = (evento) =>{\n        this.setState({ [evento.target.id] : evento.target.value });\n    }\n\n    ingresar = (evento) => {\n        evento.preventDefault();\n        const credenciales = {\n            cuentaUsuario : this.state.cuentaUsuario,\n            contrasegnaUsuario : hex_sha1(this.state.contrasegna) // ENCRIPTAR TEXTO \n        }\n        promesaVerificarIngreso(credenciales).then(respuesta => {\n            if(!respuesta.error){\n                localStorage.setItem('tokenUsuario',respuesta.token);\n                this.props.actualizarUsuario('/app/perfil');\n                //this.redireccionar('/app/perfil')\n            }else{\n                this.setState({mensajeTexto:respuesta.error},()=>{setTimeout(this.setState.bind(this,estadoInicial),5000) });\n            }\n        });\n    }\n\n    redireccionar = (ruta) => { this.props.history.push(ruta) }\n\n    componentDidMount(){\n        if(verificarGrupoUsuario().codigoUsuario){\n            this.redireccionar('/app/perfil')\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"contenedor\">\n                <div className=\"centrado\">\n                    <form noValidate onSubmit={this.ingresar} className=\"cuadro_mensaje una_columna\" style={{padding:\"20px\"}}>\n                        <div className=\"centrado\">\n                            <img src=\"/img/Logo-Seda-Cusco.png\" alt=\"Logo WCS\"/>\n                        </div>\n                        <br />\n                        {this.state.mensajeTexto.length < 1 ? null: \n                        <div className=\"centrado\">\n                            <div style={{width:\"100%\"}}><CuadroMensaje tipoCuadro={\"peligro\"}>{this.state.mensajeTexto}</CuadroMensaje></div>\n                        </div>}\n                        <fieldset><legend align=\"left\">Número Celular</legend>\n                            <input type=\"text\" id=\"cuentaUsuario\" placeholder=\"Ejem: 956789871\" maxLength=\"9\" onChange={this.ingresarDatos}/>\n                        </fieldset>\n                        <fieldset><legend align=\"left\">Contraseña</legend>\n                            <input type=\"password\" id=\"contrasegna\" onChange={this.ingresarDatos}/>        \n                        </fieldset>\n\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_verde\" type=\"submit\">INGRESAR</button>\n                        </div>\n                    </form>\n                </div>\n                <br />\n            </div>\n        )\n    }\n}\n\nexport default InicioSesion","import React , { Component } from 'react';\nimport { promesaModificarFechaSalidaSesion } from '../../datos/sesionDB.js';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB';\n\nexport default class inicioSesion extends Component {\n    constructor(props){\n        super(props);\n        this.state={usuario:verificarGrupoUsuario()}\n    }\n    cerrarSesion = () => {\n        const firma = {\n            firmaSesion : this.state.usuario.firmaSesion,\n            firmaUsuario : this.state.usuario.firmaDigital\n        }       \n        promesaModificarFechaSalidaSesion(firma).then(res => {\n            localStorage.removeItem('tokenUsuario');\n            this.props.actualizarUsuario(\"/app/ingresar\");\n            //this.redireccionar('/app/ingresar');\n        });\n    }\n\n    redireccionar = (ruta) => {this.props.history.push(ruta) }\n\n    componentDidMount(){\n        if(!this.state.usuario.codigoUsuario){\n            this.redireccionar('/app/ingresar');\n        }\n    }\n    \n    render(){\n        if(this.state.usuario.codigoUsuario){\n        return(\n            <div className=\"contenedor\">\n                <div className=\"centrado\">\n                    <div className=\"cuadro_mensaje una_columna\" style={{padding:\"20px\"}}>\n                        <div className=\"centrado\">\n                            <img src=\"/img/Logo-Seda-Cusco.png\" alt=\"Logo WCS\"/>\n                        </div>\n                        <br />\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_rojo\" onClick={this.cerrarSesion}>CONFIRMAR</button>\n                        </div>\n                    </div>\n                </div>\n                <br />\n            </div>\n        )} else { return null }\n    }\n}\n\n\n","import React, { Component } from 'react';\nimport { hex_sha1 } from '../../datos/sha1';\nimport { verificarGrupoUsuario,modificarContrasegnaCuenta } from '../../datos/usuarioDB';\n\nconst estadoInicial = {\n\n    usuario : verificarGrupoUsuario(),\n    mensajeTexto : \"\",\n    mensajeAlerta : \"\",\n\n    codigoUsuario : \"\",\n    actualContrasegna : \"\",\n    nuevaContrasegna : \"\",\n    confiContrasegna : \"\"\n}\nexport class CambioContraseña extends Component{\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    ingresarDatos = (e) => {\n        this.setState({ [e.target.id] : e.target.value });\n    }\n\n    actualizarContrasegna = () => {\n        if(this.state.nuevaContrasegna === this.state.confiContrasegna){\n            const contrasegna = {\n                codigoUsuario : this.state.usuario.codigoUsuario,\n                quien : this.state.usuario.firmaDigital,\n                actualContrasegna : hex_sha1(this.state.actualContrasegna),\n                nuevaContrasegna : hex_sha1(this.state.nuevaContrasegna)\n            }\n            modificarContrasegnaCuenta(contrasegna).then(res => {\n                if(res[0].codigo === \"200\"){ \n                    this.setState({ \n                        mensajeTexto:\"Cambio de contraseña con exito!...\",\n                        mensajeAlerta:\"success\"\n                    }, () => { setTimeout(this.setState.bind(this,estadoInicial),3000) });\n                }else{ \n                    this.setState({ \n                        mensajeTexto:\"Contraseña actual incorrecta!...\",\n                        mensajeAlerta:\"danger\"\n                    }, () => { setTimeout(this.setState.bind(this,estadoInicial),3000) });\n                }\n            });\n        }else{\n            this.setState({ \n                mensajeTexto:\"Contraseña nueva no coincide con la confirmación!...\",\n                mensajeAlerta:\"danger\"\n            }, () => { setTimeout(this.setState.bind(this,estadoInicial),3000) });\n        }\n    }\n\n    componentDidMount(){\n        if(!this.state.usuario){\n            this.props.history.push('/');\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"contenedor\">\n                {this.state.mensajeTexto !==''?( <div>{this.state.mensajeTexto}</div>): '' }\n                <div className=\"centrado\">\n                    <div className=\"una_columna\">\n                        <input className=\"cuadro_dato\" type=\"password\" id=\"actualContrasegna\" placeholder=\"Ingrese su contraseña actual\"\n                            value = {this.state.actualContrasegna} onChange = { (e) => this.ingresarDatos(e) }\n                        />\n                        <input className=\"cuadro_dato\" type=\"password\" id=\"nuevaContrasegna\" placeholder=\"Ingrese su nueva contraseña\"\n                            value = {this.state.nuevaContrasegna} onChange = { (e) => this.ingresarDatos(e) }\n                        />\n                        <input className=\"cuadro_dato\" type=\"password\" id=\"confiContrasegna\" placeholder=\"Repetir contraseña nueva\" \n                            value = {this.state.confiContrasegna} onChange = { (e) => this.ingresarDatos(e) }\n                        />\n                    </div>\n                </div>\n                <br />\n                <div className=\"centrado\">\n                    <button className=\"boton boton_verde\" onClick = { () => this.actualizarContrasegna() }>Actualizar</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CambioContraseña","/*\n-- File:             ActividadAdministrador.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para Administrar las Acitividades de Continuidad y Presion\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nconst estadoInicial = {}\n\nexport class Actividad extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n    componentDidMount(){\n        if(verificarGrupoUsuario().grupo > 0){\n        }// else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if(verificarGrupoUsuario().grupo > 0){ return( \n        <div className=\"contenedor\" style={{marginTop:\"30px\"}}>\n            <div className=\"centrado\">\n                <div className=\"una_columna\">\n                    <a className=\"actividad_boton_link\" href=\"/app/actividad/administrador/presion\">{\"< Módulo de Actividades/Presión >\"}</a>\n                    <a className=\"actividad_boton_link\" href=\"/app/actividad/administrador/continuidad\">{\"< Módulo de Actividades/Continuidad >\"}</a>\n                    <a className=\"actividad_boton_link\" href=\"/app/reporte/presion\">{\"< Módulo de Reporte/Presión >\"}</a>\n                    <a className=\"actividad_boton_link\" href=\"/app/reporte/continuidad\">{\"< Módulo de Reporte/Continuidad >\"}</a>\n                </div>\n            </div>\n        </div>)\n        } else { return( <UsuarioNoValido /> )}\n    }\n}\n\nexport default Actividad;\n\n/*\n            <table>\n                <thead>\n                    <tr>\n                        <th><b>Actividad</b></th>\n                        <th><b>Reporte</b></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td style={{border:'1px solid #ccc',textAlign:'center'}}><div style={{borderRadius:\"10px\"}} className=\"centrado informacion\"><a className=\"actividad_boton_link\" href=\"/app/actividad/administrador/presion\">Presión</a></div></td>\n                        <td style={{border:'1px solid #ccc',textAlign:'center'}}><div style={{borderRadius:\"10px\"}} className=\"centrado informacion\"><a className=\"actividad_boton_link\" href=\"/app/reporte/presion\">Presión</a></div></td>\n                    </tr>\n                    <tr>\n                        <td style={{border:'1px solid #ccc',textAlign:'center'}}><div style={{borderRadius:\"10px\"}} className=\"centrado exito\"><a className=\"actividad_boton_link\" href=\"/app/actividad/administrador/continuidad\">Continuidad</a></div></td>\n                        <td style={{border:'1px solid #ccc',textAlign:'center'}}><div style={{borderRadius:\"10px\"}} className=\"centrado exito\"><a className=\"actividad_boton_link\" href=\"/app/reporte/continuidad\">Continuidad</a></div></td>\n                    </tr>\n                </tbody>\n            </table>\n*/","import React from 'react';\nimport Modal from \"../../componentes/Modal.js\";\nimport { obtenerFecha } from '../../datos/funcionesSistema.js';\nconst ModificarActividad = ( \n    { actividad,usuarios,mostrarModal,controlModalAgregar,seleccionDatosActividad,guardarActividad } ) => {\n    if(mostrarModal){\n        return (\n        <div>\n        <Modal\n            mostrarModal = {mostrarModal}\n            controlModal = {controlModalAgregar}\n            tituloModal = {\"Actividad\"}\n        >     \n            <form noValidate onSubmit={guardarActividad} className=\"una_columna\">\n                <div><b>Periodo: </b> {actividad.agnoPeriodo + \" - \" + actividad.mesPeriodo } </div>\n                <div><b>Bloque Urbano:  </b>{ (actividad.denominacionBloque || \"Todos de la Zona\").toUpperCase()} </div>\n                <div><b>Dirección:</b></div>\n                <input readOnly className=\"cuadro_dato\" defaultValue={actividad.denominacionLote}/>\n                <div><b>Operario:</b></div>\n                <select className=\"cuadro_dato\" onChange={seleccionDatosActividad} value={(actividad.codigoUsuario || \"0\")} id=\"codigoUsuario\">\n                    <option value=\"0\">-- Seleccione Operario --</option>\n                    { usuarios.map((usuario) => ( <option value={usuario.codigoUsuario} key={usuario.codigoUsuario}>{usuario.nombres + \" \" + usuario.apellidosPaterno + \" \" + usuario.apellidosMaterno}</option>))}\n                </select>\n                <div><b>Fecha Entrega:</b></div>\n                <input className=\"cuadro_dato\" type=\"date\" onChange={seleccionDatosActividad} value={(actividad.fechaFinal || obtenerFecha())} id=\"fechaFinal\"/>\n                <div className=\"centrado\">\n                    <button className=\"boton boton_verde\" type=\"submit\">Guardar</button>\n                </div>\n            </form>             \n        </Modal>\n        </div>\n        )\n    }else{ return null}\n}\nexport default ModificarActividad","/*\n-- File:             actividadDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Actividades.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020\n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst Url = urlServidor + '/api/actividad/';\n\n// BUSCAR ACTIVIDADES POR ZONA USUARIO Y FECHA\nexport function promesaListarActividadPaginado(Busqueda){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + \"paginado/\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()))\n        .catch(error => rechazar(error));\n    });\n}\n\n// BUSCAR ACTIVIDADES POR ZONA USUARIO Y FECHA\nexport function promesaListarActividadImpresion(Busqueda){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + \"impresion/\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()))\n        .catch(error => rechazar(error));\n    });\n}\n\n// BUSCAR ACTIVIDADES POR ZONA USUARIO Y FECHA\nexport function promesaListarActividadBloque(Busqueda){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + \"bloque/\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()))\n        .catch(error => rechazar(error));\n    });\n}\n\n// LISTAR ACTIVIDADES DISPONIBLES POR USUARIO\nexport function promesaListarActividadPorUsuario(Busqueda){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + \"usuario\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({ 'Accept': 'application/json', 'Content-type':'application/json'})\n        })\n        .then(actividades => resolver(actividades.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n// GENERAR Y ASIGNAR UN USUARIO A UN BLOQUE DE ACTIVIDADES\nexport function generarBloqueActividad(Bloque){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + \"generar/bloque\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(Bloque),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()))\n        .catch(error => rechazar(error));\n    });\n}\n\n// AGREGAR NUEVA ACTIVIDAD\nexport function agregarActividad(ActividadNuevo){\n    return new Promise((resolver,rechazar) => {\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(ActividadNuevo),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(response => resolver(response) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n//MODIFICAR ACTIVIDAD\nexport function modificarActividad(Actividad){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(Actividad),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(response => resolver(response.json()) )// Enviar Respuesta\n        .catch(error => rechazar(error) );// Enviar Error\n    });\n}\n\n//MODIFICAR ESTADO HABILITADO DE ACTIVIDAD \nexport function cambiarHabilitadoActividad(Actividad){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + \"habilitado/\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(Actividad),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(response => resolver(response.json()) )// Enviar Respuesta\n        .catch(error =>  rechazar(error) ); // Enviar Error\n    });\n}","/*\r\n-- File:             impresionDB.js\r\n-- Project Name:     MediSeda\r\n-- Version:          0.0.1\r\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Bloque de Impresion.\r\n-- Author:           Jorge Muñiz\r\n-- Create Date:      2020-01-01\r\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020\r\n*/\r\n\r\nimport { urlServidor } from './funcionesSistema.js';\r\nconst servidor = urlServidor + '/api/impresion';\r\n\r\n// Lista los Bloques de Impresion por Pagina y tipo Actividad\r\nexport function promesaCantidadPagina() { \r\n    return new Promise((resolver, rechazar) =>{\r\n        fetch(servidor + '/paginas') \r\n        .then(respuesta  => resolver(respuesta.json()) )/* Enviar Fuentes de Agua */\r\n        .catch(error => rechazar(error)) // Enviar Error\r\n    });\r\n}\r\n\r\n// Lista los Bloques de Impresion por Pagina y tipo Actividad\r\nexport function promesaListarBloqueImpresionPaginaActividad( objJSon ) { \r\n    return new Promise((resolver, rechazar) =>{\r\n        fetch(servidor + '/lista', {\r\n            method : 'POST',\r\n            body: JSON.stringify(objJSon),\r\n            headers: new Headers({'Accept': 'application/json','Content-type':'application/json' })\r\n        }) \r\n        .then(respuesta  => resolver(respuesta.json()) )/* Enviar Fuentes de Agua */\r\n        .catch(error => rechazar(error)) // Enviar Error\r\n    });\r\n}\r\n\r\n// Agrega un Bloque de Impresion\r\nexport function promesaAgregarBloqueImpresion( objJSon ) {\r\n    return new Promise( (resolver, rechazar) => {\r\n        fetch(servidor + '/agregar', {\r\n            method : 'POST',\r\n            body: JSON.stringify(objJSon),\r\n            headers: new Headers({\r\n                'Accept': 'application/json',\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then( respuesta => resolver(respuesta.json()) )\r\n        .catch( error => rechazar(error) );\r\n    });\r\n}\r\n\r\n// Elimina un Bloque de Impresion\r\nexport function promesaEliminarBloqueImpresion( objJson ) {\r\n    return new Promise( (resolver, rechazar) => {\r\n        fetch(servidor + '/eliminar', {\r\n            method : 'DELETE',\r\n            body: JSON.stringify(objJson),\r\n            headers: new Headers({ \r\n                'Accept': 'application/json',\r\n                'Content-type':'application/json'\r\n            })\r\n        })\r\n        .then( respuesta => resolver(respuesta.json()) )\r\n        .catch((error)=>{ rechazar(error); });\r\n    });\r\n}","/*\n-- File:             Impresion.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para Imprimir\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\nimport Modal from \"../../componentes/Modal.js\";\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { promesaListarActividadImpresion } from '../../datos/actividadDB';\nimport { promesaListarBloqueImpresionPaginaActividad } from '../../datos/impresionDB.js';\nimport { numeroArabigoEnRomano , obtenerDenominacionTipoAltitud} from '../../datos/funcionesSistema';\n\nconst estadoInicial = {\n    pdf : null,\n    tablasActividad : [],\n    PaginasTabla : []\n}\n\nexport class Impresion extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    agregarTitulos = (pdf, paginas, altoPagina, anchoPagina ) => {\n        if(pdf){\n            var tituloHTML = document.getElementById('tituloActividades').innerHTML;\n            var periodoHTML = document.getElementById('periodoActividades').innerHTML;\n            var piePagina = 'Pagina ' + pdf.internal.getNumberOfPages() + ' de ' + paginas;\n\n            pdf.setFontStyle('normal')\n            pdf.setFontSize(8)\n            pdf.text('EPS. SEDACUSCO S.A GERENCIA DE OPERACIONES', 5, 10)\n            pdf.text('DEPARTAMENTO DE OPERACIONES DISTRIBUCIÓN Y RECOLECCIÓN', (anchoPagina/2)+145, 10)\n            pdf.text(piePagina, 5, altoPagina - 10)\n\n            pdf.setFontSize(15)\n            pdf.text((tituloHTML||'Titulo de Actividades').toUpperCase(), anchoPagina / 2,30,'center');\n            pdf.text((periodoHTML||'Periodo de Actividades').toUpperCase(), anchoPagina / 2,45,'center');\n\n            this.setState({ pdf });\n        }\n    }\n    \n    generarTablas = (pagina) => {\n        /* LISTA PARA LAS PAGINAS INDEPENDIENTES */\n        const PaginasTabla = [];\n        const {cantidadPaginas,tipoActividad,mesPeriodo,agnoPeriodo} = this.props;\n        var paginas = pagina?1:cantidadPaginas;\n        for(var i=0;i<paginas;i++){\n            var paginaAImprimir = pagina||(i+1);\n            // TABLAS A IMPRIMIR\n            promesaListarBloqueImpresionPaginaActividad({pagina:paginaAImprimir}).then(bloques=>{ // PaginaImpresion, Codigourbano, denominaciones\n                if(!bloques.error){\n                    var tablasDePagina = [];\n                    var paginaTabla = {};\n                    (bloques[0]||[]).sort((b1,b2)=>{return parseInt(b1.ordenImpresion)-parseInt(b2.ordenImpresion)}).forEach(bloque=>{\n                        var numPagina = 0;\n                        const Busqueda = {\n                            codigoUrbano: bloque.codigoUrbano, tipoActividad:tipoActividad,\n                            mesPeriodo :mesPeriodo, agnoPeriodo: agnoPeriodo\n                        };\n                        if(numPagina !== bloque.paginaImprimir){ numPagina=bloque.paginaImpresion;}\n                        \n                        promesaListarActividadImpresion(Busqueda).then(actividades => {\n                            if(!actividades.error){\n                                var direcciones = [];\n                                var denominacionZona = bloque.denominacionZona.substring(0,bloque.denominacionZona.indexOf(\"[\"));\n\n                                var operarios = [];\n                                var nombresCompletos= \"\";                    \n                                actividades.forEach(actividad => {\n                                    var existe = false;\n                                    operarios.forEach(codigo=>{if(codigo === actividad.codigoUsuario){existe=true;}});\n                                    var nombre = actividad.nombreCompleto.trim().length>0?actividad.nombreCompleto+\" - \":\"\";\n                                    if(!existe){ operarios.push(actividad.codigoUsuario); nombresCompletos=nombresCompletos+nombre;}\n                                    /*var direccion = {\n                                        codigoUrbano:bloque.codigoUrbano,\n                                        denominacionFuente:bloque.denominacionFuente,\n                                        denominacionZona:denominacionZona,\n                                        altitud:obtenerDenominacionTipoAltitud(actividad.tipoAltitud),\n                                        ordenBloque:actividad.ordenBloque,\n                                        denominacion:actividad.denominacionLote, inscripcion:actividad.codigoInscripcion\n                                    };*/\n                                    var direccion = {\n                                        codigoUrbano:\"\",denominacionFuente:\"\",denominacionZona:\"\",altitud:obtenerDenominacionTipoAltitud(actividad.tipoAltitud),\n                                        ordenBloque1:actividad.ordenBloque,denominacion:actividad.denominacionLote, inscripcion:actividad.codigoInscripcion,\n                                        de1:\"\",a1:\"\",de2:\"\",a2:\"\",horas:\"\",promeio:\"\",ordenBloque:actividad.ordenBloque\n                                    };\n                                    direcciones.push(direccion);\n                                });\n                                direcciones.push({codigoUrbano:\"\",denominacionFuente:\"\",denominacionZona:\"\",altitud:\"\",ordenBloque1:\"\",denominacion:\"PROMEDIO PARCIAL\",\n                                    inscripcion:\"\", de1:\"\",a1:\"\",de2:\"\",a2:\"\",horas:\"\",promeio:\"\",ordenBloque:direcciones.length+1})     \n\n                                var tabla = { \n                                    codigoUrbano:bloque.codigoUrbano,\n                                    denominacionFuente:bloque.denominacionFuente,\n                                    denominacionZona:denominacionZona,\n                                    denominacionBloque:(bloque.denominacionBloque||\"\").toUpperCase(),\n                                    nombresCompletos : nombresCompletos,\n                                    ordenImpresion : bloque.ordenImpresion,\n                                    sector : 'ZONA \\u0020' + numeroArabigoEnRomano(bloque.sector) + (parseInt(bloque.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(bloque.subSector)) + (bloque.microSector === '-' ? '':\" \\u2014 \"+bloque.microSector),\n                                    bloqueUrbano : bloque.denominacionBloque\n                                };\n                                tabla[\"direcciones\"] = direcciones;\n                                tablasDePagina.push(tabla);\n                                paginaTabla[\"numPagina\"] = numPagina;                \n                            }\n                        });\n                    });\n                    paginaTabla[\"tablas\"] = tablasDePagina;\n                    PaginasTabla.push(paginaTabla); \n                };\n            });\n        }\n        setTimeout(()=>this.setState({PaginasTabla},()=>this.generarPdfImpresion()),2000);\n    }\n\n    generarPdfImpresion = () => {\n        const {PaginasTabla} = this.state;\n        const pdf = new jsPDF('l','pt');\n        var paginas = PaginasTabla.length; \n        var altoPagina = pdf.internal.pageSize.height || pdf.internal.pageSize.getHeight();\n        var anchoPagina = pdf.internal.pageSize.width || pdf.internal.pageSize.getWidth();\n        pdf.autoTable({});\n        PaginasTabla.sort((p1,p2)=>{return p1.numPagina-p2.numPagina}).forEach((pagina,i) =>{\n\n            if(i>0){ pdf.addPage() }\n            this.agregarTitulos(pdf,paginas,altoPagina,anchoPagina);          \n                pagina.tablas.sort((t1,t2)=>{return t1.ordenImpresion - t2.ordenImpresion}).forEach((tabla, index)=> {\n                var tablasActividades = [];\n                tabla.direcciones.sort((d1,d2)=>{return d1.ordenBloque-d2.ordenBloque}).forEach(direccion => {\n                    tablasActividades.push(Object.values(direccion));\n                })\n                let finalY = index?pdf.previousAutoTable.finalY:40;\n                let head = [\n                    [\n                        {content: tabla.nombresCompletos, colSpan: 7, styles: {halign: 'left', fillColor: [255, 255, 0]}},\n                        {content: 'HORAS SERVICIO', colSpan: 4, cellWidth: 80, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', colSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                    ],\n                    [\n                        {content: 'Sec', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}}, \n                        {content: 'Fuente', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: tabla.sector, rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'Altitud', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'N°', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'URBANIZACIÓN - CALLE', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'Inscripción', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'MAÑANAS', colSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'TARDES', colSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'TOTAL HRS\\n DE SEVICIO', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'PROMEDIO', rowSpan: 2, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                    ],\n                    [\n                        {content: 'DE', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'A', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'DE', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: 'A', styles: {halign: 'center', fillColor: [255, 255, 255]}}\n                    ],\n                    [\n                        {content: tabla.codigoUrbano, styles: {halign: 'center', fillColor: [255, 255, 255]}}, \n                        {content: tabla.denominacionFuente, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: tabla.denominacionZona, styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: tabla.denominacionBloque,  styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                        {content: '', styles: {halign: 'center', fillColor: [255, 255, 255]}},\n                    ],\n                ];\n                pdf.autoTable({\n                    startY: finalY + 20,\n                    head: head,\n                    body: tablasActividades,\n                    theme: 'plain',\n                    columnStyles:{2:{cellWidth:70},5:{cellWidth:200,halign:'left'},7:{cellWidth:40},8:{cellWidth:40},9:{cellWidth:40},10:{cellWidth:40}},\n                    styles: {\n                        cellPadding: 2,\n                        minCellHeight: 10,\n                        halign: 'center',\n                        valign: 'middle',\n                        lineWidth: 0.5,\n                        fontSize: 6,\n                        textColor: 0\n                    },\n                    tableLineColor: [0, 0, 0],\n                    bodyStyles: {lineColor: [0, 0, 0]},\n                    headStyles: {lineColor: [0, 0, 0]},\n\n                });\n            });\n        });\n        pdf.save('descargaPdf.pdf');\n        this.props.controlModalImpresion();\n        this.setState({ estadoInicial });\n    }\n\n    imprimirPdf = (numeroPagina) => {\n        this.generarTablas(numeroPagina);\n    }\n\n    render() {\n        if(this.props.mostrarModalImpresion){ \n            return(\n            <Modal\n                mostrarModal = {this.props.mostrarModalImpresion}\n                controlModal = {this.props.controlModalImpresion}\n                tituloModal = {\"Imprimir Actividades\"}\n            >\n            <div className=\"centrado\">\n                <div className=\"impresion_actividad_botones\">\n                    <button className=\"boton boton_verde\" onClick={()=>this.imprimirPdf(this.props.paginaActual)}>\n                        Pagina Actual ({this.props.paginaActual})\n                    </button>\n    \n                    <button className=\"boton boton_rojo\" onClick={()=>this.imprimirPdf(0)}>\n                        Todos los Bloques\n                    </button>\n                </div>\n            </div>\n            </Modal>\n        )} else { return null }\n    }\n}\n\nexport default Impresion;","import React from 'react';\nimport Modal from \"../../componentes/Modal.js\";\n\nconst AsignarOperador = ({ usuarios,actividad,tipoActividad,mostrarModalAsignar,controlModalAsignar,asignarOperadorBloque,seleccionarUsuarioActividad } ) => {  \n    return (\n        <div>\n            <Modal\n                mostrarModal = {mostrarModalAsignar}\n                controlModal = {controlModalAsignar}\n                tituloModal = {\"Asignar Operador a \" +( actividad.tipoActividad ? \"Presion\" : \"Continuidad\")}\n            >\n            <form noValidate onSubmit={asignarOperadorBloque} className=\"una_columna\">                              \n                <div><b>Periodo: </b> {actividad.agnoPeriodo + \" - \" + actividad.mesPeriodo } </div>\n                <label> <b>Operario: </b> </label>\n                <select className=\"cuadro_dato\" onChange = { seleccionarUsuarioActividad } value = {actividad.codigoUsuario} id=\"codigoUsuario\">\n                    <option value=\"0\">-- Seleccione Operario --</option>\n                    { (usuarios||[]).map((usuario) => ( <option value={usuario.codigoUsuario} key={usuario.codigoUsuario}>{usuario.nombres + \" \" + usuario.apellidosPaterno + \" \" + usuario.apellidosMaterno}</option>))}\n                </select>\n                <div className=\"centrado\">\n                    <div className=\"dos_columnas\">\n                        <button className=\"boton boton_verde\" type=\"submit\">Asignar</button>\n                        <button className=\"boton boton_rojo\" onClick={()=>controlModalAsignar()}>Cancelar</button>\n                    </div>\n                </div>\n            </form>                    \n            </Modal>\n        </div>\n    )\n}\nexport default AsignarOperador","import React from 'react';\nimport Modal from \"../../componentes/Modal.js\";\n\nconst ModificarActividad = ({ actividad , controlModalObservacion , mostrarModalObservacion } ) => {  \n    return (\n        <Modal\n            mostrarModal = {mostrarModalObservacion}\n            controlModal = {controlModalObservacion}\n            tituloModal = {\"Observación de \" + (actividad.tipoActividad ? \"Presión\" : \"Continuidad\")}\n        >\n        <form noValidate onSubmit={controlModalObservacion} className=\"una_columna\">\n            <div><b>Periodo: </b> {actividad.agnoPeriodo + \" - \" + actividad.mesPeriodo } </div>\n            <div><b>Bloque Urbano:  </b>{(actividad.denominacionBloque||\"\").toUpperCase() } </div>\n            <div><b>Dirección:  </b><input size={\"28\"} defaultValue={actividad.denominacionLote} readOnly/></div>\n            <div><b>Observación: </b></div>\n            <textarea readOnly className=\"cuadro_dato\" id=\"textoObservacion\" value={actividad.textoObservacion || \"\" }/>\n            <div className=\"centrado\">\n                <button className=\"boton boton_rojo\" type=\"submit\">Cerrar</button>\n            </div>\n        </form>\n        </Modal>\n    )\n}\nexport default ModificarActividad","/*\n-- File:             ModalAjusteImpresion.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para Configurar la impresion\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\nimport Modal from \"../../componentes/Modal.js\";\nimport { promesaListarBloqueImpresionPaginaActividad } from '../../datos/impresionDB.js';\n\nconst estadoInicial = {\n    bloquesImpresion : []\n}\n\nexport class ModalAjusteImpresion extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    listarBloquesImpresion = () => {\n        promesaListarBloqueImpresionPaginaActividad({pagina:\"%\"}).then(bloques=>{\n            if(!bloques.error){ this.setState({ bloquesImpresion: bloques[0] }); }\n        });\n    }\n\n    componentDidMount(){\n        this.listarBloquesImpresion();\n    }\n\n    render() {\n        if(this.props.mostrarModalAjusteImpresion){ return(\n        <Modal\n            mostrarModal = {this.props.mostrarModalAjusteImpresion}\n            controlModal = {this.props.controlModalAjusteImpresion}\n            tituloModal = {\"Ajustes de Imprimir\"}\n        >\n        <div className=\"centrado\">\n            <label>Modificar Bloques de Impresión <b>(Mantenimiento).</b></label>\n        </div>\n        </Modal>\n        )} else { return null }\n    }\n}\n\nexport default ModalAjusteImpresion;","/*\n-- File:             observacionDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Observacion de Actividades.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020          \n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst Url = urlServidor + '/api/observacion/';\n\n// LISTAR ACTIVIDADES DISPONIBLES POR ZONA\nexport function buscarObservacion(codigoActividad){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + \"actividad/\" +codigoActividad) // Fetch para consumir API de SERVER NODE JS\n        .then(actividades => resolver( actividades.json()) )// Enviar Actividades\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n// REGISTAR OBERVACION DE UNA ACTIVIDAD\nexport function registrarObservacion(observacion){\n    return new Promise((resolver,rechazar) => {\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(observacion),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n// MODIFICAR TEXTO DE OBSERVACION\nexport function modificarObservacion(observacion){\n    return new Promise((resolver,rechazar) => {\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(observacion),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}","/*\n-- File:             ActividadAdministrador.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para Administrar las Acitividades de Continuidad y Presion\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\n\n//IMPORTAR COMPONENTES\n\nimport ModalAgregar from './ModalAgregar.js';\nimport Impresion from '../impresion/Impresion.js';\nimport ModalAsignar from './ModalAsignarOperador.js';\nimport ModalObservacion from './ModalObservacion.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport ModalAjusteImpresion from '../impresion/ModalAjusteImpresion.js';\n\n//IMPORTAR FUNCIONES\nimport { promesaListarActividadBloque,generarBloqueActividad,agregarActividad,modificarActividad,cambiarHabilitadoActividad } from '../../datos/actividadDB';\nimport { buscarObservacion } from '../../datos/observacionDB.js';\nimport { usuariosDisponibles } from '../../datos/usuarioDB';\nimport { promesaListarBloqueImpresionPaginaActividad, promesaCantidadPagina } from '../../datos/impresionDB.js';\nimport { obtenerFecha,verificarEstadoActividad,verificarFechaEntrega,listaMesesAgno,listaAgnos, dispositivoMovil} from '../../datos/funcionesSistema.js';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\n\nvar fechaHoy = obtenerFecha();\n\nconst bloqueActividadInicial = {\n    codigoActividad : \"\", // Codigo de Actividad Seleccionada\n        \n    codigoZona : \"%\", // Zona seleccionada para busqueda de actividades\n    codigoUrbano : \"%\", // Bloque urbano si es presion\n    codigoUsuario : \"%\", // Usuario seleccionado para busquda de actividades\n    \n    mesPeriodo : fechaHoy.split('-')[1],// Periodo en que se hara la actividad\n    agnoPeriodo : fechaHoy.split('-')[0],// Periodo en que se hara la actividad\n\n    denominacionZona : \"\", // Denominacion de la zona\n    denominacionAreaServicio : \"\", // Denominacion de Area de Servicio\n    denominacionBloque : \"\", // Denominacion del Bloque Urbano\n    denominacionAltitud : \"Alta\", // denominacion de Altitud / Alta Media Baja\n\n    nombres : \"\", // Nombres del Operador asignado\n    apellidosPaterno : \"\", // Apellido Paterno del Operador Asignado\n    apellidosMaterno : \"\", // Apellido Materno del Operador Asignado\n\n    tipoAltitud : \"3\", // Tipo de Altitud 3 - Alta / 2 - Media / 1 - Baja / 0 No definido\n    tipoActividad : 0, // Tipo medicion de actividades a generar -- 0 = Continuidad ... 1 = Presion\n\n    fechaCreacion : fechaHoy, // Fecha de creacion de actividad\n    fechaFinal : obtenerFecha(fechaHoy, 7), // Fecha de entrega de una actividad\n\n    codigoObservacion: \"\", // Codigo de observacion seleccionado\n    textoObservacion: \"\", // Texto de observacion seleccionado\n    \n    habilitado : \"1\",\n\n    quien : verificarGrupoUsuario().firmaDigital // Firma digital quien hace las transacciones\n}\n\nconst actividadInicial = { \n    codigoActividad : \"\",\n    codigoUsuario : \"\",\n    codigoZona : \"\",\n    codigoDireccion : \"\",\n    tipoMedicion : \"0\",\n    fechaCreacion : fechaHoy,\n    fechaFinal : fechaHoy,\n    tipoInscripcion : \"---\",\n    estadoActividad : \"0\",\n    habilitado : \"1\",\n};\n\nconst estadoInicial = {\n\n    // USUARIO\n    usuario : verificarGrupoUsuario(), \n\n    // SELECCIÓN\n    actividadSeleccion : actividadInicial, // Actividad Seleccionada para editar\n\n    // DATOS DE BLOQUE ACTIVIDADES\n    bloqueActividad : bloqueActividadInicial,\n\n    // LISTAS CON DATOS\n    actividades : [], // Lista de actividades encontradas\n    sugerenciasActividades : [], // Sugerencias de busqueda de actividades\n\n    usuarios : [], // Lista de Operarios registrados y habilitados\n    direcciones : [], // Lista de Direcciones habilitados\n    bloques : [], // Lista de Bloques Urbanos habilitados\n\n    textoActividadBuscar : \"\", // Texto de actividad a buscar\n\n    paginaActual : 1, // Pagina Actual del Paginado\n    actividadInicioPaginado : 1, // Inicio de Paginado de Actividades\n\n    cantidadPaginas : 0, // Cantidad de Paginas que tendra la paginacion\n\n    mostrarModal : false, // Indicador para abrir o cerrar el modal\n    mostrarModalObservacion : false, // Indicar para abrir o cerrar el modal de Observacion\n    mostrarModalAsignar : false, // Indicador para abrir o cerrar el Modal para Asignar un Operador\n    mostrarModalImpresion : false, // Indicador para abrir o cerrar el modal de Impresion\n    mostrarModalAjusteImpresion : false // Indicador para abrir o cerrar el modal de Ajuste de Impresion    \n}\n\nexport class Actividad extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    //METODOS DE LLENADO Y LISTADO DE DATOS\n    listarUsuarios = () => {\n        usuariosDisponibles().then( res => {\n            this.setState({ usuarios : res });\n        });\n    }\n\n    listarBloquesPagina = () => {\n        const Buscar={pagina:this.state.paginaActual}\n        const sugerenciasActividades = []; \n        promesaListarBloqueImpresionPaginaActividad(Buscar).then(bloques=>{\n            if(!bloques.error){\n                this.setState({bloques : bloques[0]});\n                bloques[0].forEach(bloque => {\n                    const Busqueda = {\n                        codigoUrbano:bloque.codigoUrbano,tipoActividad:this.props.tipoActividad,\n                        mesPeriodo : this.state.bloqueActividad.mesPeriodo, agnoPeriodo : this.state.bloqueActividad.agnoPeriodo\n                    }\n                    promesaListarActividadBloque(Busqueda).then(actividades=>{\n                        if(!actividades.error && actividades.length > 0){\n                            actividades.forEach(actividad => {\n                                sugerenciasActividades.push(actividad);\n                            });\n                            this.setState({ sugerenciasActividades });\n                        }\n                    })\n                });\n            }\n        })\n    }\n\n    // ========================= ACCIONES EVENTOS ==================================\n    controlModalAgregar = () => {\n        this.setState({ mostrarModal : !this.state.mostrarModal });\n    }\n\n    controlModalObservacion = () => {\n        this.setState({ mostrarModalObservacion : !this.state.mostrarModalObservacion });\n    }\n\n    controlModalImpresion = () => {\n        this.setState({ mostrarModalImpresion : !this.state.mostrarModalImpresion })\n    }\n\n    controlModalAjusteImpresion = () => {\n        this.setState({ mostrarModalAjusteImpresion : !this.state.mostrarModalAjusteImpresion })\n    }\n\n    controlModalAsignar = () => {\n        this.setState({ mostrarModalAsignar : !this.state.mostrarModalAsignar });\n    }\n\n    seleccionarUsuarioActividad = (evento) => {\n        const { bloqueActividad } = this.state;\n        bloqueActividad[\"codigoUsuario\"] = evento.target.value\n        this.setState({ bloqueActividad });\n    }\n\n    seleccionDatosActividad = (evento) => {\n        const { bloqueActividad } = this.state;\n        if(evento.target.id === \"habilitar\"){\n            bloqueActividad[\"habilitado\"] = ! bloqueActividad.habilitado;\n        }else{\n            bloqueActividad[evento.target.id] = evento.target.value\n        }\n        this.setState({ bloqueActividad });\n    }\n\n    seleccionarActividad = (Actividad) => { \n        if(Actividad){\n            const { bloqueActividad } = this.state;\n            bloqueActividad[\"codigoUsuario\"] = Actividad.codigoUsuario;\n            bloqueActividad[\"codigoDireccion\"] = Actividad.codigoDireccion;\n            bloqueActividad[\"codigoActividad\"] = Actividad.codigoActividad;\n            bloqueActividad[\"denominacionLote\"] = Actividad.denominacionLote;\n            bloqueActividad[\"denominacionBloque\"] = Actividad.denominacionBloque;\n            bloqueActividad[\"fechaCreacion\"] = Actividad.fechaCreacion;\n            bloqueActividad[\"habilitado\"] =  Actividad.habilitado;\n            if(Actividad.codigoUsuario === 0){\n                bloqueActividad[\"fechaFinal\"] = obtenerFecha(fechaHoy , 7)\n            }else{ bloqueActividad[\"fechaFinal\"] = Actividad.fechaFinal }\n            this.setState({ bloqueActividad, mostrarModal : !this.state.mostrarModal});    \n        }\n    }\n\n    guardarActividad = (evento) => {\n        evento.preventDefault();\n        // SI NO TIENE CODIGO ACTIVIDAD\n        const { bloqueActividad } = this.state;\n        var nuevaActividad = {\n            codigoActividad:bloqueActividad.codigoActividad,\n            codigoUsuario:(bloqueActividad.codigoUsuario||0),\n            codigoDireccion:bloqueActividad.codigoDireccion,\n            fechaCreacion:fechaHoy,\n            fechaFinal:this.state.bloqueActividad.fechaFinal,\n            habilitado:true,\n            mesPeriodo:this.state.bloqueActividad.mesPeriodo,\n            agnoPeriodo:this.state.bloqueActividad.agnoPeriodo,\n            tipoActividad:this.state.bloqueActividad.tipoActividad,\n            quien:this.state.usuario.firmaDigital\n        };\n\n        if(bloqueActividad.codigoActividad === null || bloqueActividad.codigoActividad === \"\" || bloqueActividad.codigoActividad === undefined ){ // Nueva Actividad\n            agregarActividad(nuevaActividad).then(_ => this.listarBloquesPagina());\n        }else{ // Editar Actividad\n            modificarActividad(nuevaActividad).then(_ => this.listarBloquesPagina());\n        }\n        this.controlModalAgregar();\n    }\n\n    verObservacion = (actividad) => {\n        buscarObservacion(actividad.codigoActividad).then(res => {\n            if(!res.error){\n                actividad[\"codigoObservacion\"] = res.codigoObservacion;\n                actividad[\"textoObservacion\"] = res.textoObservacion;\n                actividad[\"denominacionAreaServicio\"] = this.state.bloqueActividad.denominacionAreaServicio;\n                actividad[\"denominacionBloque\"] = this.state.bloqueActividad.denominacionBloque;\n                this.setState({ actividadSeleccion : actividad });\n                this.controlModalObservacion();\n            }\n        });\n    }\n\n    asignarOperadorBloque = (evento) => {\n        evento.preventDefault();\n        const { bloqueActividad, bloques } = this.state;\n        var bloquesGenerados = 0\n        if(bloqueActividad.codigoUsuario !== \"0\" && bloqueActividad.codigoUsuario !== \"%\"){\n            bloques.forEach((bloque,i)=> {\n                const Bloque = {\n                    codigoUsuario: bloqueActividad.codigoUsuario,\n                    codigoUrbano: bloque.codigoUrbano,\n                    mesPeriodo: bloqueActividad.mesPeriodo,\n                    agnoPeriodo: bloqueActividad.agnoPeriodo,\n                    tipoActividad: bloqueActividad.tipoActividad,\n                    fechaFinal: bloqueActividad.fechaFinal,\n                    quien: this.state.usuario.firmaDigital\n                };\n                setTimeout(()=>{\n                    generarBloqueActividad(Bloque).then(_=>{\n                        if(!_.error){\n                            bloquesGenerados=bloquesGenerados+1\n                            if(bloquesGenerados === bloques.length){this.controlModalAsignar();this.listarBloquesPagina()}\n                        }\n                    });\n                }, i * 100);\n            });\n        }else{ alert(\"Operador no Seleccionado\") }\n    }\n\n    cambiarPeriodo = (evento) => {\n        const { bloqueActividad } = this.state;\n        bloqueActividad[evento.target.id] = evento.target.value;\n        this.setState({ bloqueActividad },() => { this.listarBloquesPagina() });\n    }\n\n    habilitarActividad = (actividad) => {\n        if(actividad.codigoActividad === null){\n            var nuevaActividad = {\n                codigoUsuario:(actividad.codigoUsuario||0),\n                codigoDireccion:actividad.codigoDireccion,\n                fechaCreacion:fechaHoy,\n                fechaFinal:fechaHoy,\n                habilitado:true,\n                mesPeriodo:this.state.bloqueActividad.mesPeriodo,\n                agnoPeriodo:this.state.bloqueActividad.agnoPeriodo,\n                tipoActividad:this.state.bloqueActividad.tipoActividad,\n                quien:this.state.usuario.firmaDigital\n            };\n            agregarActividad(nuevaActividad).then(_=>this.listarBloquesPagina());\n        }else{\n            const actividadHabilitado = { \n                codigoActividad : actividad.codigoActividad, \n                habilitado : !actividad.habilitado,\n                quien : this.state.usuario.firmaDigital }\n            cambiarHabilitadoActividad(actividadHabilitado).then(_=>this.listarBloquesPagina());\n        }\n    }\n\n    cambiarPagina = (pagina) => {\n        if(parseInt(pagina) >= 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || 0) }\n        if(pagina > 0 && pagina <= this.state.cantidadPaginas){\n            this.setState({ paginaActual: pagina },()=>this.listarBloquesPagina());\n        }\n    }\n\n    componentDidMount(){\n        if(this.state.usuario.grupo > 0){\n            const { bloqueActividad } = this.state;\n            var {cantidadPaginas} = this.state;\n            bloqueActividad[\"tipoActividad\"] = this.props.tipoActividad;\n            promesaCantidadPagina().then(paginas=>{if(!paginas.error){cantidadPaginas=paginas.paginas}\n                this.setState({ bloqueActividad, cantidadPaginas },() => {\n                    this.listarUsuarios();\n                    this.listarBloquesPagina();\n                });\n            });\n        }// else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if(this.state.usuario.grupo > 0){\n        return(\n            <div className=\"contenedor\">\n                <div className=\"centrado\">\n                    <br/>\n                    <div id=\"tituloActividades\" className=\"navegador_titulo\">\n                        ENCUESTA DE {this.props.tipoActividad?\"PRESIÓN\":\"CONTINUIDAD\"} DEL SERVICIO POR ZONA DE ABASTECIMIENTO\n                    </div>\n                </div>\n                <br></br>\n                <div className=\"centrado\">\n                    <div>\n                        <select className=\"cuadro_dato\" style={{fontSize:\"20px\"}} onChange={this.cambiarPeriodo} id=\"mesPeriodo\" value={this.state.bloqueActividad.mesPeriodo}>\n                        { listaMesesAgno.map(mes => ( \n                            <option value={mes.letra} key={mes.numero}>{mes.nombre}</option>\n                        ))}\n                        </select>\n                        &nbsp; &mdash; &nbsp;\n                        <select className=\"cuadro_dato\" style={{fontSize:\"20px\"}} onChange={this.cambiarPeriodo} value={this.state.bloqueActividad.agnoPeriodo} id=\"agnoPeriodo\">\n                        {listaAgnos.map((agno,key) => ( \n                            <option value={agno} key={key}>{agno}</option>\n                        ))}\n                        </select>\n                    </div>\n                </div>\n                <div hidden={true}>\n                    <label id=\"periodoActividades\">{(listaMesesAgno[parseInt(this.state.bloqueActividad.mesPeriodo||1)-1].nombre||\"\") + \" - \" + this.state.bloqueActividad.agnoPeriodo}</label> \n                </div>\n                <br/>\n                <div className=\"buscador_actividad\">\n                    <div className=\"buscador_actividad_impresion\">\n                        <div className=\"buscador_actividad_impresion_boton\">\n                            <button className=\"boton boton_azul\" onClick={() => this.controlModalAsignar()}\n                            ><img src=\"/img/agregarUsuario.png\" style={{width:\"40px\",margin:\"3px\"}} alt=\"Asignar Operador\" title=\"Asignar Operador\"/><br/>Asignar Operador</button>\n\n                            <button className=\"boton boton_rojo\" onClick={() => this.controlModalImpresion()}\n                            ><img src=\"/img/pdf.png\" style={{width:\"45px\",margin:\"3px\"}} alt=\"Asignar Operador\" title=\"Asignar Operador\"/><br/>Imprimir Actividades</button>\n                        </div>\n                        <div></div>\n                        <div className=\"paginado_impresion\">\n                            <div className=\"centrado\">\n                                <div className=\"paginado\">\n                                    <button className=\"boton boton_azul\" style={{fontSize:\"15px\"}} onClick={()=>this.cambiarPagina(this.state.paginaActual - 1)} title=\"Página anterior\">&larr;</button>\n                                    <div>\n                                        <input style={{textAlign:'center',border:'none',fontSize:\"1em\",width:\"35px\"}} size={2} type=\"number\" value={this.state.paginaActual} \n                                                min=\"1\" pattern=\"[0-9]*\" name=\"pagina_\" id=\"pagina_\" title={'Número de Página : ' + this.state.paginaActual} \n                                                onChange={(e)=>this.cambiarPagina(e)} \n                                        />/{this.state.cantidadPaginas}\n                                    </div>\n                                    <button className=\"boton boton_azul\" style={{fontSize:\"15px\"}} onClick={()=>this.cambiarPagina(this.state.paginaActual + 1)} title=\"Página siguiente\">&rarr;</button> \n                                </div>     \n                            </div>\n                            <button className=\"boton\" style={{fontSize:\"15px\"}} onClick={()=>this.controlModalAjusteImpresion()}>{\"\\u2699\"}</button>\n                        </div>\n                    </div>\n                </div>\n                <br />           \n                <div className=\"centrado\">\n                <table style={ { width : dispositivoMovil()?'100%':'70%' }} className=\"tabla_actividad\">\n                    <thead>\n                        <tr>\n                            <th hidden={dispositivoMovil()}></th>\n                            <th>Dirección/Lote</th>\n                            <th hidden={dispositivoMovil()}>Codigo Inscripción</th>\n                            <th hidden={dispositivoMovil()}>Fecha de Entrega</th>\n                            <th hidden={dispositivoMovil()}>Estado</th>\n                            <th>Operador</th>\n                            <th>Obs.</th>\n                        </tr>\n                    </thead>\n                    {(this.state.bloques||[]).map(bloque => {\n                        return ( \n                        <tbody key={bloque.codigoUrbano}>\n                            <tr><td colSpan={6} style={{textAlign:'center',padding:\"10px\", fontSize:\"20px\"}}>\n                                <b> { bloque.denominacionBloque.toUpperCase()} - SECTOR ({bloque.codigoUrbano})</b>\n                            </td></tr>\n                            {(this.state.sugerenciasActividades.filter(a=>a.codigoUrbano===bloque.codigoUrbano)\n                            .sort((a1,a2)=>{return a1.ordenBloque-a2.ordenBloque}).map(actividad=>{\n                            var retraso = verificarFechaEntrega(actividad.fechaFinal);\n                            return(\n                                <tr key={actividad.codigoDireccion} style={{cursor:\"pointer\"}} className=\"tabla_fila\">   \n                                    <td hidden={dispositivoMovil()} style={{textAlign:'center'}}>\n                                        <label className=\"boton_habilitado\">\n                                            <input type='checkbox' id='habilitado' checked = { (actividad.habilitado || false) } onChange = { (e) => { this.habilitarActividad( actividad ) }}/>\n                                            <div className=\"boton_deslizar redondo\"></div>\n                                        </label>\n                                    </td>\n                                    <td onClick={() => this.seleccionarActividad(actividad)}>{ actividad.denominacionLote }</td>    \n                                    <td hidden={dispositivoMovil()} style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}>{ actividad.codigoInscripcion }</td>                     \n                                    <td hidden={dispositivoMovil()} style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}> {actividad.fechaFinal? <div className={\"cuadro_mensaje \"+(actividad.estadoActividad===1&&retraso?\"peligro\":\"exito\")} style={{color:actividad.estadoActividad===1&&retraso?\"red\":\"\"}}>{actividad.fechaFinal}</div>:\n                                        <img src=\"/img/vacio.png\" alt=\"Datos sin Programar\" title=\"Datos Sin Programar\"/>}\n                                    </td>       \n                                    <td hidden={dispositivoMovil()} style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}>{actividad.estadoActividad!==null?<div style={{color:actividad.estadoActividad===1&&retraso?\"red\":\"green\"}}>{actividad.estadoActividad===1&&retraso?\"Retraso\":verificarEstadoActividad(actividad.estadoActividad)}</div>:\n                                        <img src=\"/img/vacio.png\" alt=\"Datos sin Programar\" title=\"Datos Sin Programar\"/>}\n                                    </td>\n                                    <td colSpan={actividad.observacion?1:2} style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}><b>{actividad.codigoActividad?(actividad.codigoUsuario ? actividad.nombres + \" \" + actividad.apellidosPaterno : \n                                        <img src=\"/img/agregarUsuario.png\" alt=\"Asignar Operador\" title=\"Asignar Operador\"/>) :\n                                        <img src=\"/img/vacio.png\" alt=\"Datos sin Programar\" title=\"Datos Sin Programar\"/> }</b>\n                                    </td>\n                                    <td style={{textAlign:'center',cursor:'pointer'}}>{ actividad.observacion ?\n                                        <img src=\"/img/lupaVer.png\" alt=\"Ver Observación\" title=\"Ver Observación\" onClick={()=>this.verObservacion(actividad)}/>:null  }\n                                    </td>\n                                </tr>)\n                            }))\n                            }\n                        </tbody>\n                    )})}\n                </table>\n                </div>\n\n\n                <div className=\"centrado\">\n                    {this.state.sugerenciasActividades.length > 0 ? null : <div style={{width:\"70%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                </div>\n                <ModalAgregar\n                    actividad = {this.state.bloqueActividad}\n                    tipoActividad={this.props.tipoActividad}\n                    usuarios = {this.state.usuarios}\n                    direcciones = {this.state.direcciones}\n                    mostrarModal = {this.state.mostrarModal}\n                    controlModalAgregar = {this.controlModalAgregar}\n                    \n                    seleccionDatosActividad = {this.seleccionDatosActividad}\n                    guardarActividad = {this.guardarActividad}\n                ></ModalAgregar>\n                \n                <ModalObservacion\n                    actividad={this.state.actividadSeleccion}\n                    controlModalObservacion={this.controlModalObservacion}\n                    mostrarModalObservacion={this.state.mostrarModalObservacion}\n                ></ModalObservacion>\n\n                <ModalAsignar\n                    usuarios={this.state.usuarios}\n                    actividad={this.state.bloqueActividad}\n                    tipoActividad={this.props.tipoActividad}\n                    mostrarModalAsignar={this.state.mostrarModalAsignar}\n                    controlModalAsignar={this.controlModalAsignar}\n                    asignarOperadorBloque={this.asignarOperadorBloque}\n                    seleccionarUsuarioActividad = {this.seleccionarUsuarioActividad}\n                ></ModalAsignar>\n                \n                <Impresion\n                    controlModalImpresion={this.controlModalImpresion}\n                    mostrarModalImpresion={this.state.mostrarModalImpresion}\n                    paginaActual={this.state.paginaActual}\n                    cantidadPaginas={this.state.cantidadPaginas}\n                    mesPeriodo={this.state.bloqueActividad.mesPeriodo}\n                    agnoPeriodo={this.state.bloqueActividad.agnoPeriodo}\n                    tipoActividad={this.props.tipoActividad}\n                ></Impresion>\n\n                <ModalAjusteImpresion\n                    controlModalAjusteImpresion={this.controlModalAjusteImpresion}\n                    mostrarModalAjusteImpresion={this.state.mostrarModalAjusteImpresion}\n                ></ModalAjusteImpresion>\n            </div>\n        )}else { return <UsuarioNoValido /> }\n    }\n}\n\nexport default Actividad;\n\n\n/*\n\nvar documento = {\ntitulo: document.getElementById('tituloActividades').innerHTML,\ncantidadPaginas:this.state.cantidadPaginas,\nencabezado:[{ id: 'ID', name: 'Name', email: 'Email', city: 'City', expenses: 'Sum' }],\ncontenido:[\n    {id:'1', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'2', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n    {id:'3', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'4', name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'5', name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'6', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'7', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'8', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n    {id:'9', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'10',name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'11',name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'12', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'13', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'14', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n    {id:'15', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'16', name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'17', name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'18', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'19', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'20', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'21', name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'22', name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'23', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'24', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'25', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n    {id:'26', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'27', name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'28', name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'29', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'30', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'31', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n    {id:'32', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'33', name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'34', name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'35', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'36', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'37', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n    {id:'38', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'39', name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'40', name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'41', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'42', name:'Donna', email: 'dmoor@furl.net', city:'China',   expenses:'211.56.242.221'},\n    {id:'43', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n    {id:'44', name:'Ruth',  email: 'rwell@cons.com', city:'Trinidad',expenses:'19.162.133.184',},\n    {id:'45', name:'Jason', email: 'jray3@psu3.edu', city:'Brazil',  expenses:'10.68.11.42'},\n    {id:'46', name:'Jane',  email: 'jstep@goas.com', city:'USS',     expenses:'47.32.129.71'},\n    {id:'47', name:'Adam',  email: 'anich@coma.com', city:'Canada',  expenses:'18.186.38.37'},\n    {id:'48', name:'Janice',email: 'jhen1@thel.com', city:'Ukraine', expenses:'38.36.7.199'},\n],\n}\n\n*/","/*\n-- File:             presionDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Server NODE JS EXPRESS y Exportar funciones de Actividades de Presion.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020\n*/\n\n//import server from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst Url = urlServidor + '/api/presion/';\n\n// BUSCAR ACTIVIDADES POR ZONA USUARIO Y FECHA\nexport function buscarActividadPresion(codigoPresion){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + codigoPresion)\n        .then(actividad => resolver(actividad.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n// REGISTAR DATOS DE LECTURA DE PRESION\nexport function registrarMedicionPresion(presion){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(presion),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n\n// MODIFICAR DATOS DE LECTURA DE PRESION\nexport function modificarLecturasPresion(presion){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(presion),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}","/*\n-- File:             continuidadDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Actividades de continuidad.\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst Url =  urlServidor + '/api/continuidad/';\n\n// BUSCAR ACTIVIDADES POR ZONA USUARIO Y FECHA\nexport function buscarActividadContinuidad(codigoContinuidad){ \n    return new Promise((resolver,rechazar) => {\n        fetch(Url + codigoContinuidad)\n        .then(actividad => resolver(actividad.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n// REGISTAR DATOS DE LECTURA DE CONTINUIDAD\nexport function registrarMedicionContinuidad(continuidad){\n    return new Promise((resolver,rechazar) => {\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(continuidad),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n// MODIFICAR DATOS DE LECTURA DE CONTINUIDAD\nexport function modificarHorasContinuidad(continuidad){\n    return new Promise((resolver,rechazar) => {\n        fetch(Url,{ // Fetch para consumir API de SERVER NODE JS\n            method:'PUT',\n            body: JSON.stringify(continuidad),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()) ) // Enviar Respuesta\n        .catch(error => rechazar(error) ); // Enviar Error\n    });\n}\n\n// CALCULAR EL PROMEDIO DE CONTINUIDAD POR ZONA Y ALTITUD\nexport function totalHoraZonaAltitudContinuidad(busqueda){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url + \"/promediohora\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => { resolver(respuesta.json()) }) // Enviar Respuesta\n        .catch(error => { rechazar(error) }); // Enviar Error\n    });\n}","import React from 'react';\nimport Modal from \"../../componentes/Modal.js\";\n\nconst ModificarActividad = ({ actividad , controlModalMedicion , mostrarModalMedicion , guardarActividad , modificarActividadEstado } ) => {  \n    if(mostrarModalMedicion){\n    return (\n    <Modal\n        mostrarModal = {mostrarModalMedicion}\n        controlModal = {controlModalMedicion}\n        tituloModal = {actividad.tipoActividad ? \"Toma de Presión\" : \"Toma de Continuidad\"}\n    >\n        <form noValidate onSubmit={guardarActividad} className=\"una_columna\">\n            <div><b>Periodo: </b> {actividad.agnoPeriodo + \" - \" + actividad.mesPeriodo } </div>\n            <div><b>Bloque Urbano:  </b>{(actividad.denominacionBloque||\"\").toUpperCase() }</div>\n            <div><b>Dirección:  </b><input size={\"28\"} defaultValue={actividad.denominacionLote} readOnly/></div>\n            <div><b>Inscripcion:  </b>{(actividad.codigoInscripcion||\"null\").toUpperCase() }</div>\n            {actividad.tipoActividad ?\n            <div className=\"una_columna\">\n                <label>Presion Alta Arriba</label>\n                <input className=\"cuadro_dato\" type=\"number\" id=\"lecturaArriba\" onChange = { modificarActividadEstado } value={actividad.lecturaArriba || \"\"}/>\n                <label>Presion Alta Abajo</label>\n                <input className=\"cuadro_dato\" type=\"number\" id=\"lecturaAbajo\" onChange = { modificarActividadEstado } value={actividad.lecturaAbajo || \"\"}/>\n            </div> :\n            <div className=\"una_columna\">\n                <label><b>Mañas</b></label>\n                <div className=\"dos_columnas\">\n                    <input className=\"cuadro_dato\" type=\"time\" id=\"r1HoraDe\" onChange={ modificarActividadEstado } value={actividad.r1HoraDe || \"\" }/>\n                    <input className=\"cuadro_dato\" type=\"time\" id=\"r1HoraA\" onChange={ modificarActividadEstado } value={actividad.r1HoraA || \"\" } />\n                </div>\n                <label><b>Tardes</b></label>\n                <div className=\"dos_columnas\">\n                    <input className=\"cuadro_dato\" type=\"time\" id=\"r2HoraDe\" onChange={ modificarActividadEstado } value={actividad.r2HoraDe || \"\" }/>\n                    <input className=\"cuadro_dato\" type=\"time\" id=\"r2HoraA\" onChange={ modificarActividadEstado } value={actividad.r2HoraA || \"\" }/>\n                </div>\n            </div>}\n            <div className=\"centrado\">\n                <button className=\"boton boton_verde\" type=\"submit\">Guardar</button>\n            </div>\n        </form>\n    </Modal>\n    )} else { return null}\n}\nexport default ModificarActividad","import React from 'react';\nimport Modal from \"../../componentes/Modal.js\";\n\nconst ModificarActividad = ({ actividad , controlModalObservacion , mostrarModalObservacion , guardarObservacion , modificarActividadEstado } ) => {  \n    return (\n        <div>\n            <Modal\n                mostrarModal = {mostrarModalObservacion}\n                controlModal = {controlModalObservacion}\n                tituloModal = {actividad.tipoActividad ? \"Presión\" : \"Continuidad\"}\n            >\n            <form noValidate onSubmit={guardarObservacion} className=\"una_columna\">\n                <div><b>Periodo: </b> {actividad.agnoPeriodo + \" - \" + actividad.mesPeriodo } </div>\n                <div><b>Bloque Urbano:  </b>{(actividad.denominacionBloque||\"\").toUpperCase() }</div>\n                <div><b>Dirección:  </b><input size={\"28\"} defaultValue={actividad.denominacionLote} readOnly/></div>\n                <div><b>Inscripcion:  </b>{(actividad.codigoInscripcion||\"\").toUpperCase() }</div> \n                <div><b>Observación: </b></div>\n                <textarea className=\"cuadro_dato\" id=\"textoObservacion\" onChange={ modificarActividadEstado } value={actividad.textoObservacion || \"\" }/>\n                <div className=\"centrado\">\n                    <button className=\"boton boton_verde\" type=\"submit\">Guardar</button>\n                </div>\n            </form>\n            </Modal>\n        </div>\n    )\n}\nexport default ModificarActividad","/*\n-- File:             ActividadOperario.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para Actividad de Operarios\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n//IMPORTAR FUNCIONES\nimport React, { Component } from 'react'\nimport { promesaListarActividadPorUsuario } from '../../datos/actividadDB';\nimport { buscarActividadPresion,registrarMedicionPresion,modificarLecturasPresion } from '../../datos/presionDB';\nimport { buscarActividadContinuidad,registrarMedicionContinuidad,modificarHorasContinuidad } from '../../datos/continuidadDB';\nimport { buscarObservacion,registrarObservacion,modificarObservacion } from '../../datos/observacionDB.js';\nimport { obtenerFecha, verificarEstadoActividad, verificarFechaEntrega, listaMesesAgno, listaAgnos } from '../../datos/funcionesSistema';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\n\n//IMPORTAR COMPONENTES\nimport ModalMedicion from './ModalMedicion.js';\nimport ModalObservacion from './ModalObservacion.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\n\nvar fechaHoy = obtenerFecha();\n\nconst actividadInicial = {\n\n    codigoContinuidad : \"\",\n    codigoPresion : \"\",\n\n    codigoActividad : \"\",\n    codigoDireccion : \"\",\n    codigoUsuario : \"\",\n    denominacionLote : \"\",\n    estadoActividad : \"\",\n    fechaCreacion : \"\",\n    fechaFinal : \"\",\n    microSector : \"\",\n    sector : \"\",\n    subSector : \"\",\n    tipoInscripcion : \"\",\n    tipoMedicion : \"\",\n    lecturaArriba : \"\",\n    lecturaAbajo : \"\",\n    r1HoraDe : \"\",\n    r1HoraA : \"\",\n    r2HoraDe : \"\",\n    r2HoraA : \"\",\n\n    codigoObservacion : \"\",\n    textoObservacion : \"\",\n}\n\nconst estadoInicial = {\n\n    usuario : verificarGrupoUsuario(), // Usuario registrado\n    codigoZona : \"1\", // Codigo de Zona Seleccionada para filtrado de Actividades\n    codigoUrbano : \"%\", // Codigo de Bloque Urbano para filtrado de Actividades\n    tipoAltitud : \"%\", // Tipo de altitud para filtrado de Actividades\n    tipoActividad : \"1\", // Tipo de Actividad para filtrado de Actividades (Presión - 1) (Continuidad - 0)\n\n    mesPeriodo : fechaHoy.split('-')[1], // Mes del Periodo para filtrar Actividades\n    agnoPeriodo : fechaHoy.split('-')[0], // Agno del Periodo para filtrar Actividades\n\n    actividades : [],\n    sugerenciasActividades : [],\n    paginaActual : 1, // Pagina Actual del Paginado\n    articulosPagina : 10, // Articulos que se mostraran por Pagina\n    cantidadPaginas : 0, // Cantidad de Paginas que tendra la paginacion\n    textoActividadBuscar :\"\",\n\n    mostrarModalMedicion : false,\n    mostrarModalObservacion : false,\n\n    zonas : [], // Lista de Zonas registradas y habilitadas\n    direcciones : [], // Lista de Direcciones habilitados\n    bloques : [], // Lista de Bloques Urbanos habilitados\n\n    actividadSeleccion : actividadInicial,\n}\n\nexport class Actividad extends Component {\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    //METODOS DE LLENADO Y LISTADO DE DATOS\n    listarActividadesPorUsuario = () => {\n        const Busqueda = {\n            codigoUsuario : this.state.usuario.codigoUsuario,\n            codigoUrbano: this.state.codigoUrbano,\n            mesPeriodo : this.state.mesPeriodo,\n            agnoPeriodo : this.state.agnoPeriodo,\n            tipoActividad : this.state.tipoActividad\n        }\n        var { bloques } = this.state;\n        promesaListarActividadPorUsuario(Busqueda).then(actividades => {\n            if(!actividades.error) {\n                if(bloques.length<1){\n                    actividades.forEach(actividad=> {\n                        var existe = false;\n                        if(bloques.length<1){\n                            bloques.push({codigoUrbano:actividad.codigoUrbano,denominacionBloque:actividad.denominacionBloque});\n                        }else{\n                            for(var j=0;j<bloques.length;j++){\n                                if(actividad.codigoUrbano === bloques[j].codigoUrbano){existe=true;}\n                            }\n                            if(!existe){\n                                bloques.push({codigoUrbano:actividad.codigoUrbano,denominacionBloque:actividad.denominacionBloque});\n                            }\n                        }\n                    });\n                }\n                this.setState({ actividades:actividades,sugerenciasActividades:actividades,bloques});\n            };\n        });\n    }\n    \n\n    seleccionarActividad = (Actividad) => {\n        if(Actividad.tipoActividad){ // Si es tipo de mecion presion == 1\n            buscarActividadPresion(Actividad.codigoActividad).then(res => {\n                if(!res.error){ this.setState({actividadSeleccion : res}) }\n                else { this.setState({actividadSeleccion : Actividad}) }\n            });\n        }else{\n            buscarActividadContinuidad(Actividad.codigoActividad).then(res => {\n                if(!res.error){ this.setState({actividadSeleccion : res}) }\n                else { this.setState({actividadSeleccion : Actividad}) }\n            });\n        }\n        this.controlModalMedicion();\n    }\n\n    agregarObservacion = (actividad) => {\n        buscarObservacion(actividad.codigoActividad).then(res => {\n            if(!res.error){\n                actividad[\"codigoObservacion\"] = res.codigoObservacion;\n                actividad[\"textoObservacion\"] = res.textoObservacion;\n                this.setState({ actividadSeleccion : actividad });\n            }else{\n                this.setState({ actividadSeleccion : actividad });\n            }\n        });\n        this.controlModalObservacion();\n    }\n\n    controlModalObservacion = () => {\n        if(this.state.mostrarModalObservacion){\n            this.setState({ actividadSeleccion: actividadInicial });\n        }\n        this.setState({ mostrarModalObservacion : !this.state.mostrarModalObservacion });\n    }\n\n    controlModalMedicion = () => {\n        if(this.state.mostrarModalMedicion){\n            this.setState({ actividadSeleccion: actividadInicial });\n        }\n        this.setState({ mostrarModalMedicion : !this.state.mostrarModalMedicion });\n    }\n\n    modificarActividadEstado = (evento) => {\n        const { actividadSeleccion } = this.state;\n        actividadSeleccion[evento.target.id] = evento.target.value\n        this.setState({ actividadSeleccion });\n        if(evento.target.id === \"codigoZona\"){\n            this.listarDirecciones();\n        }\n    }\n\n    guardarObservacion = (evento) => {\n        evento.preventDefault();\n        const observacion = {\n            codigoObservacion: this.state.actividadSeleccion.codigoObservacion,\n            codigoActividad: this.state.actividadSeleccion.codigoActividad,\n            tipoActividad: this.state.actividadSeleccion.tipoActividad,\n            textoObservacion: this.state.actividadSeleccion.textoObservacion,\n            quien: this.state.usuario.firmaDigital\n        }\n        if(this.state.actividadSeleccion.codigoObservacion > 0){ modificarObservacion(observacion) }\n        else{ registrarObservacion(observacion) }\n        this.controlModalObservacion();\n    }\n\n    guardarActividad = (evento) => {\n        evento.preventDefault();\n        if(this.state.actividadSeleccion.tipoActividad){ // Si es tipo de mecion presion == 1\n            const presion = {\n                codigoActividad:this.state.actividadSeleccion.codigoActividad,\n                lecturaArriba:this.state.actividadSeleccion.lecturaArriba,\n                lecturaAbajo:this.state.actividadSeleccion.lecturaAbajo,\n                quien : this.state.usuario.firmaDigital\n            }\n            if(this.state.actividadSeleccion.codigoPresion === undefined){\n                registrarMedicionPresion(presion).then(res => this.listarActividadesPorUsuario() );\n            }else{\n                modificarLecturasPresion(presion).then(res => this.listarActividadesPorUsuario() );                \n            }\n        }else{ // Si es el tipo de medicion continuidad == 0\n            const continuidad = {\n                codigoActividad : this.state.actividadSeleccion.codigoActividad,\n                r1HoraDe : this.state.actividadSeleccion.r1HoraDe,\n                r1HoraA : this.state.actividadSeleccion.r1HoraA,\n                r2HoraDe : this.state.actividadSeleccion.r2HoraDe,\n                r2HoraA : this.state.actividadSeleccion.r2HoraA,\n                quien : this.state.usuario.firmaDigital\n            }\n            if(this.state.actividadSeleccion.codigoContinuidad === undefined){\n                registrarMedicionContinuidad(continuidad).then(res => this.listarActividadesPorUsuario() );\n            }else{\n                modificarHorasContinuidad(continuidad).then(res => this.listarActividadesPorUsuario() );\n            }\n        }\n        this.controlModalMedicion();\n    }\n\n    cambiarPeriodo = (evento) => this.setState({ [evento.target.id]: evento.target.value },() => this.listarActividadesPorUsuario());\n        \n    cambiarTipoActividad = (evento) => this.setState({ tipoActividad : evento.target.value },() => this.listarActividadesPorUsuario());\n\n    cambiarBloqueUrbano = (evento) => this.setState({ codigoUrbano : evento.target.value },() => this.listarActividadesPorUsuario());\n\n    componentDidMount(){\n        if(this.state.usuario.grupo === 0){\n                this.listarActividadesPorUsuario();\n\n        }//else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if(this.state.usuario.grupo === 0){\n        return(\n            <div className=\"contenedor\">\n                <div className=\"centrado\">\n                    <select style={{width:\"100%\"}} className=\"cuadro_dato\" onChange = { this.cambiarPeriodo} id=\"mesPeriodo\" value={this.state.mesPeriodo}>\n                    { listaMesesAgno.map(mes => ( \n                        <option value={mes.letra} key={mes.numero}>{mes.nombre}</option>\n                    ))}\n                    </select>\n                    &nbsp;\n                    <select style={{width:\"100%\"}} className=\"cuadro_dato\" onChange = { this.cambiarPeriodo } value={this.state.agnoPeriodo} id=\"agnoPeriodo\">\n                        {listaAgnos.map((agno,key) => \n                        ( <option value={agno} key={key}>{agno}</option>))}\n                    </select>\n                    &nbsp;\n                    <select style={{width:\"100%\"}} className=\"cuadro_dato\" onChange = { this.cambiarTipoActividad } id=\"tipoActividad\" value={this.state.tipoActividad}>                    \n                        {/*<option value=\"%\">Actividad</option>*/}\n                        <option value=\"1\">Presión</option>\n                        <option value=\"0\">Continuidad</option>\n                    </select>\n                </div>\n                <br />\n                <div className=\"centrado\">\n                    <select style={{width:\"100%\"}} className=\"cuadro_dato\" onChange={this.cambiarBloqueUrbano} id=\"bloqueUrbano\" value={this.state.codigoUrbano}>\n                        <option value=\"%\">-- Bloque Urbano --</option>\n                        {(this.state.bloques||[]).map(bloque=>\n                        <option key={bloque.codigoUrbano} value={bloque.codigoUrbano}>{(bloque.denominacionBloque||\"\").toUpperCase()}</option>\n                        )}\n                    </select>\n                </div>\n                <br />\n                <div className=\"centrado\">\n                <table style={ { width : '100%' }}>\n                    <thead>\n                        <tr>\n                            <th>Actividad</th>\n                            <th>Obs.</th>\n                        </tr>\n                    </thead>\n                    {(this.state.bloques||[]).filter(b=>{\n                        if(parseInt(this.state.codigoUrbano) === b.codigoUrbano){ return true }\n                        if(this.state.codigoUrbano === '%'){ return true } else { return false; }\n                    })\n                    .map(bloque => {\n                        return ( \n                        <tbody key={bloque.codigoUrbano}>\n                            <tr><td colSpan={6} style={{textAlign:'center',padding:\"10px\", fontSize:\"20px\", borderBottom:\"3px solid #10679E\"}}>\n                                <b> { (bloque.denominacionBloque||\"\").toUpperCase()} - SECTOR ({bloque.codigoUrbano})</b>\n                            </td></tr>\n                            {(this.state.sugerenciasActividades.filter(a=>a.codigoUrbano===bloque.codigoUrbano)\n                            .sort((a1,a2)=>{return a1.ordenBloque-a2.ordenBloque}).map(actividad=>{\n                                var retraso = verificarFechaEntrega(actividad.fechaFinal);\n                                return(\n                                <tr key={actividad.codigoActividad} style={{borderBottom:\"1px solid lightgray\"}}>\n                                    <td style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}>\n                                        <div className=\"item_actividad_operador\">\n                                            <div>\n                                                <b>{actividad.denominacionLote}</b>\n                                                <br/>\n                                                <label style={{fontSize:\"13px\"}}><b>Inscripcción: </b>{actividad.codigoInscripcion}</label>\n                                            </div>\n                                            <div style={{color:actividad.estadoActividad===1&&retraso?\"red\":actividad.estadoActividad<2?\"orange\":\"green\"}}><b>Avance: {actividad.estadoActividad===1&&retraso?\"Retraso\":verificarEstadoActividad(actividad.estadoActividad)}</b></div>\n                                            <div className={\"cuadro_mensaje \"+(actividad.estadoActividad===1&&retraso?\"peligro\":\"exito\")} style={{color:actividad.estadoActividad===1&&retraso?\"red\":\"\"}}><b>Entrega: {actividad.fechaFinal}</b></div>\n                                        </div>\n                                    </td>\n                                    <td style={{textAlign:'center'}} onClick={() => this.agregarObservacion(actividad)}>\n                                        <img src=\"/img/agregarObservacion.png\" alt=\"Agregar Observacion\" title=\"Agregar Observacion\"/>\n                                    </td>\n                                </tr>\n                                )\n                            }))}\n                        </tbody>\n                    )})}\n                </table> \n                </div>\n                <div className=\"centrado\">\n                    {this.state.sugerenciasActividades.length > 0 ? null : <div style={{width:\"100%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                </div>\n                <ModalMedicion\n                    actividad = {this.state.actividadSeleccion}\n                    controlModalMedicion = {this.controlModalMedicion}\n                    mostrarModalMedicion = {this.state.mostrarModalMedicion}\n                    guardarActividad = {this.guardarActividad}\n                    modificarActividadEstado = {this.modificarActividadEstado}\n                ></ModalMedicion>\n                <ModalObservacion\n                    actividad={this.state.actividadSeleccion}\n                    controlModalObservacion={this.controlModalObservacion}\n                    mostrarModalObservacion={this.state.mostrarModalObservacion}\n                    guardarObservacion={this.guardarObservacion}\n                    modificarActividadEstado={this.modificarActividadEstado}\n                ></ModalObservacion>\n            </div>\n        )} else { return <UsuarioNoValido /> }\n    }\n}\n\nexport default Actividad;\n\n/*\n\n<table style={ { width : '80%' }}>\n    <thead>\n        <tr>\n            <th>Zona</th> \n            <th>Dirección</th> \n            <th>Actividad</th>\n            <th>Fecha Fin</th>\n            <th>Estado</th>\n            <th>Observacion</th>\n        </tr>\n    </thead>\n    <tbody>\n    {this.state.sugerenciasActividades.map(actividad =>\n        <tr key={actividad.codigoActividad}>\n            <td style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}>{ \"Zona \\u00A0\" + numeroArabigoEnRomano(actividad.sector) + (parseInt(actividad.subSector) === 0 ? '' : \" \\u2014 \" + numeroArabigoEnRomano(actividad.subSector)) +   (actividad.microSector === '-' ? '' : \" \\u2014 \" + actividad.microSector) } </td>                                                                 \n            <td onClick={() => this.seleccionarActividad(actividad)}>{actividad.denominacionLote}</td>\n            <td style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}>{actividad.tipoActividad ? \"Presión\" : \"Continuidad\"}</td>\n            <td style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}>{actividad.fechaFinal}</td>\n            <td style={{textAlign:'center'}} onClick={() => this.seleccionarActividad(actividad)}>{verificarEstadoActividad(actividad.estadoActividad)}</td>\n            <td style={{textAlign:'center'}} onClick={() => this.agregarObservacion(actividad)}>Agregar</td>\n        </tr>\n    )}\n    </tbody>\n</table> \n\n*/","/*\n-- File:             zonaDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Server NODE JS EXPRESS y Exportar funciones de Zonas Comerciales.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020           \n*/\n\n//import servidor from '../servidorDatos.js';\nimport { urlServidor } from './funcionesSistema.js';\nconst servidor = urlServidor;\n\n// Lista las zonas para un generar un COMPONENTE (comboBox/selectBox)\nexport function promesaListarZonasComponente() { \n    return new Promise((resolver, rechazar) =>{\n        fetch(servidor + '/api/zona/') \n            .then( respuesta  => respuesta.json() )\n            .then( datos => { \n                resolver(datos);\n            })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\nexport function promesaListarZonasReporte() { \n    return new Promise((resolver, rechazar) =>{\n        fetch(servidor + '/api/zona/sectorReporte') \n            .then( respuesta  => respuesta.json() )\n            .then( datos => { \n                resolver(datos);\n            })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\nexport function promesaListarZonas( jsonConsultada ) { \n    return new Promise((resolver, rechazar) =>{\n        fetch(servidor + '/api/zona/paginado/', {\n           method : 'POST',\n           body: JSON.stringify( jsonConsultada ),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n                })\n            }) \n            .then( respuesta  => respuesta.json() )\n            .then( datos => { \n                resolver(datos);\n            })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\nexport function promesaAgregarZona( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/zona/', {\n            method : 'POST',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\nexport function promesaDeshabilitarZona( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/zona/deshabilitar', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\nexport function promesaHabilitarZona( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/zona/habilitar', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\nexport function promesaModificarZona( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/zona/', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\nexport function promesaDeshabilitarUnaZonaComoSector( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/zona/sector', {\n            method : 'DELETE',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\nexport function promesaHabilitarUnaZonaComoSector( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/zona/sector', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}","/*\n-- File:             bloqueDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Bloques Urbanos.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020\n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst servidor = urlServidor;\n\n// Lista los BLOQUES URBANOS POR PAGINADO\nexport function promesaListarBloquesPaginado(objJson) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/bloque/paginado/', {\n            method : 'POST',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta  => resolver(respuesta.json()))\n        .catch(error => rechazar(error));\n    });\n} \n\n// Trae todos los bloques\nexport function promesaListarBloquesRegistrados() {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/bloque/')\n           .then( respuesta  => respuesta.json() )\n           .then( datos => { resolver(datos); })\n       .catch((error) => {\n           rechazar(error);\n       });\n   });\n}\n\n// Trae todos los bloques\nexport function promesaListarBloquesPorZona(Busqueda) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/bloque/zona', {\n            method : 'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({ 'Accept': 'application/json','Content-type':'application/json' })\n        })\n        .then( respuesta  => resolver(respuesta.json()))\n        .catch(error => rechazar(error));\n    });\n }\n\n// Deshabilita un BLOQUE\nexport function promesaDeshabilitarBloque( objJson ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/bloque/', {\n           method : 'DELETE',\n           body: JSON.stringify(objJson),\n           headers: new Headers({ \n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => respuesta )\n       .then( datos => { resolver(datos); })\n       .catch((error)=>{ rechazar(error); });\n   });\n}\n\n// Habilitar un BLOQUE\nexport function promesaHabilitarBloque( objJSon ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/bloque/habilitar', {\n           method : 'PUT',\n           body: JSON.stringify(objJSon),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => respuesta )\n       .then( datos => { resolver(datos); })\n       .catch((error)=>{ rechazar(error); });\n   });\n}\n\n// Agregar un Bloque Urbano\nexport function promesaAgregarBloqueUrbano( objJSon ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/bloque/', {\n           method : 'POST',\n           body: JSON.stringify(objJSon),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => respuesta )\n       .then( datos => { resolver(datos); })\n       .catch((error)=>{ rechazar(error); });\n   });\n}\n\n// Modificar los datos (denominacion) de un BLOQUE URBANO\nexport function promesaModificarNombreBloque( objJSon ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/bloque/denominacion', {\n           method : 'PUT',\n           body: JSON.stringify(objJSon),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => respuesta )\n       .then( datos => { resolver(datos); })\n       .catch((error)=>{ rechazar(error); });\n   });\n}\n\n// Modificar los datos (ZONA) de un BLOQUE URBANO\nexport function promesaModificarZonaBloque( objJSon ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/bloque/zona', {\n           method : 'PUT',\n           body: JSON.stringify(objJSon),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => respuesta )\n       .then( datos => { resolver(datos); })\n       .catch((error)=>{ rechazar(error); });\n   });\n}","import React, { Component } from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { promesaListarZonasComponente } from '../../datos/zonaDB.js';\nimport { promesaListarBloquesPaginado, \n         promesaDeshabilitarBloque, \n         promesaHabilitarBloque, \n         promesaAgregarBloqueUrbano, \n         promesaModificarNombreBloque, \n         promesaModificarZonaBloque } from '../../datos/bloqueDB.js';\n\n// ---- COMPONENTES -----\nimport Paginacion, { CANTIDAD_PAGINA, TAMAGNO_PAGINA } from \"../../componentes/Paginacion.js\";\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from \"../../componentes/Modal.js\";\n\nexport class Bloque extends Component {\n\n    constructor(propiedades) { \n        super(propiedades); \n        this.state = { \n            usuario: verificarGrupoUsuario(),\n            zonas : [],    \n            bloquesUrbanos : [],\n            paginaActual : 1,\n            urbanoInicioPaginado : 1,\n            indiceBloqueSeleccionado : 0,\n            denominacionBloqueSeleccionado : '',\n            mostrarVentanaModalAgregar : false,\n            mostrarVentanaModalEditar : false\n        };\n    }\n\n    listarZonas = () => {\n        promesaListarZonasComponente().then( respuesta => { \n            this.setState({ zonas : respuesta }); \n        });\n    }\n \n    listarBloquesUrbanos = () => {\n        this.setState({ urbanoInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }\n        , () => {  \n            promesaListarBloquesPaginado({ inicio : this.state.urbanoInicioPaginado, resultados : TAMAGNO_PAGINA }).then( respuesta => { \n                this.setState({ bloquesUrbanos : respuesta }); \n            });\n        }); \n    }\n\n    controlarVentanaModalAgregar = () => {\n        this.setState({ \n            mostrarVentanaAgregarModal : !this.state.mostrarVentanaAgregarModal \n        });\n    }\n\n    seleccionarBloqueUrbano = (indiceBloque, nombreBloque) => {\n        this.setState({\n            indiceBloqueSeleccionado : indiceBloque,\n            denominacionBloqueSeleccionado : nombreBloque,\n            mostrarVentanaEditarModal : !this.state.mostrarVentanaEditarModal\n        });\n    }\n\n    cambiarEstadoBloque = (evento) => {\n        const estaHabilitado = parseInt(evento.target.value);\n        this.setState({indiceBloqueSeleccionado:parseInt(evento.target.dataset.bloque)},()=>{\n            const objetoEnviado = {\n                codigo : this.state.indiceBloqueSeleccionado,\n                firma : this.state.usuario.firmaDigital\n            };\n            if (estaHabilitado === 1) {\n                promesaDeshabilitarBloque(objetoEnviado).then(_=>this.listarBloquesUrbanos())\n            }else {        \n                promesaHabilitarBloque(objetoEnviado).then(_=>this.listarBloquesUrbanos());\n            }\n        });\n    }\n\n    controlarVentanaModalEditar = () => {\n        this.setState({ \n            mostrarVentanaEditarModal : !this.state.mostrarVentanaEditarModal \n        });\n    }\n\n    alterarDenominacionBloque = (evento) => {\n        this.setState ({ \n            denominacionBloqueSeleccionado : evento.target.value  \n        });\n    }\n\n    agregarBloque = (evento) => {\n        evento.preventDefault();\n        let zonaParaAgregar = document.getElementById('zona_agregar_');\n        let nombreBloqueParaAgregar = document.getElementById('bloque');\n        let zonaTemporalAgregar = zonaParaAgregar.options[zonaParaAgregar.selectedIndex].value;\n        this.setState({ mostrarVentanaAgregarModal:false }, () => {\n            const objetoNuevo = { \n                zona : zonaTemporalAgregar,\n                denominacion : nombreBloqueParaAgregar.value, \n                firma : this.state.usuario.firmaDigital\n            };\n            promesaAgregarBloqueUrbano( objetoNuevo ).then( respuesta => { \n                this.listarBloquesUrbanos();\n            });\n        });\n    }\n    \n    actualizarDenominacionBloque = (evento) => {\n        evento.preventDefault();\n        this.setState({ mostrarVentanaEditarModal:false }, () => {\n            const objetoModificado = {\n                codigo : this.state.indiceBloqueSeleccionado, \n                denominacion: this.state.denominacionBloqueSeleccionado,\n                firma : this.state.usuario.firmaDigital\n            };\n            promesaModificarNombreBloque( objetoModificado ).then ( respuesta => { \n                this.listarBloquesUrbanos(); \n            });\n        } );\n    }\n    \n    cambiarZona = (evento) => {\n        const jsonModificado = {\n            codigo : evento.target.dataset.urbano,\n            zona : evento.target.options[evento.target.selectedIndex].value,\n            firma :  this.state.usuario.firmaDigital\n        }\n        promesaModificarZonaBloque( jsonModificado ).then( respuesta => {\n            this.listarBloquesUrbanos();\n        }); \n    }\n\n    cambiarPagina = (pagina) => {\n        if(parseInt(pagina) > 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || \"\") }\n        if(pagina <= CANTIDAD_PAGINA){ this.setState({ paginaActual: pagina }, () => this.listarBloquesUrbanos()) }\n    }\n\n    redireccionar = (ruta) => { this.props.history.push(ruta) }\n\n    componentDidMount() {\n        if (this.state.usuario.grupo > 0) {\n            this.listarZonas();  \n            this.listarBloquesUrbanos();\n        }// else{ this.props.history.push('/') }\n    }\n        \n    render() {\n        /* SI ES ADMINISTRADOR O GERENTE */\n        if (this.state.usuario.grupo > 0) {\n            return (\n                <div className=\"contenedor\">\n                    <Paginacion\n                        cantidadElementos = {this.state.bloquesUrbanos.length}\n                        cambiarPagina = {this.cambiarPagina}\n                        paginaActual = {this.state.paginaActual}\n                    ></Paginacion><br />\n                    <div className=\"centrado\">\n                    <table style={{width:\"50%\"}}>\n                        <thead>\n                            <tr>\n                                <th><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar un Nuevo Bloque Urbano\" title=\"Registrar/Agregar un Nuevo Bloque Urbano\" onClick={ () => this.controlarVentanaModalAgregar()}/></th>\n                                <th style={{textAlign:'center'}}>Zona</th>\n                                <th>Denominación</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.bloquesUrbanos.map( elemento => (\n                            <tr key={elemento.codigoUrbano} className=\"tabla_fila\">\n                                <td style={{textAlign:'center'}}>\n                                    <label className=\"boton_habilitado\">\n                                        <input type=\"checkbox\" onChange={this.cambiarEstadoBloque} checked={ parseInt(elemento.habilitado) === 1 ? true : false } value={ parseInt(elemento.habilitado) === 1 ? 1 : 0 } data-bloque={elemento.codigoUrbano} name={'chkBox'+elemento.codigoUrbano} id={'chkBox'+elemento.codigoUrbano } />                                        \n                                        <div className=\"boton_deslizar redondo\"></div>\n                                    </label>\n                                </td>\n                                <td style={{textAlign:'center'}}>\n                                    <select className=\"cuadro_dato\" name={'zona_' + elemento.codigoUrbano} id={'zona_' + elemento.codigoUrbano} value={elemento.codigoZona} data-urbano={elemento.codigoUrbano} onChange={this.cambiarZona}>\n                                        <option value=\"0\"> Seleccione la zona </option>\n                                        {this.state.zonas.map((pZona, nIndice)  => (\n                                            <option key={'z' + nIndice} value={pZona.codigoZona}> {\"Zona \\u00A0\" + numeroArabigoEnRomano(pZona.sector) + (parseInt(pZona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(pZona.subSector)) + (pZona.microSector === '-' ? '':\" \\u2014 \"+pZona.microSector)}\n                                            </option>\n                                        ))}\n                                    </select>                \n                                </td>\n                                <td onClick={() => { this.seleccionarBloqueUrbano( elemento.codigoUrbano, elemento.denominacionBloque)}}>\n                                    {elemento.denominacionBloque.toUpperCase()}\n                                </td>\n                            </tr>\n                        ))} \n                        </tbody>  \n                    </table>\n                    </div>\n                    <div className=\"centrado\">\n                        {this.state.bloquesUrbanos.length > 0 ? null : <div style={{width:\"50%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                    </div>\n                    <Modal\n                        mostrarModal = {this.state.mostrarVentanaAgregarModal}\n                        controlModal = {this.controlarVentanaModalAgregar}\n                        tituloModal = {\"Nueva Fuente de Agua\"}\n                    >\n                    <form noValidate onSubmit={this.agregarBloque} className=\"una_columna\">\n                        <label htmlFor=\"zona_agregar_\"> Zona Comercial : &nbsp;\n                            <select className=\"cuadro_dato\" name=\"zona_agregar_\" id=\"zona_agregar_\" required>\n                                <option value=\"0\"> Seleccione la zona </option>\n                                {this.state.zonas.map((pZona, nIndice)  => (\n                                    <option key={'z' + nIndice} value={pZona.codigoZona}> {\"Zona \\u00A0\" + numeroArabigoEnRomano(pZona.sector) + (parseInt(pZona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(pZona.subSector)) + (pZona.microSector === '-' ? '':\" \\u2014 \"+pZona.microSector)}</option>\n                                ))}\n                            </select>\n                        </label>\n                        <label htmlFor=\"bloque\">Denominación del Bloque Urbano</label>\n                        <input className=\"cuadro_dato\" type=\"text\" size=\"40\" required name=\"bloque\" id=\"bloque\" placeholder=\"Nombre de la fuente de agua\" />\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_verde\" type=\"submit\">Agregar</button>\n                        </div>                        \n                    </form>\n                    </Modal>\n                    \n                    <Modal\n                        mostrarModal = {this.state.mostrarVentanaEditarModal}\n                        controlModal = {this.controlarVentanaModalEditar}\n                        tituloModal = {\"Editar Fuente de Agua\"}\n                    >\n                    <form noValidate onSubmit={this.actualizarDenominacionBloque} className=\"una_columna\">\n                        <label htmlFor=\"bloqueModificado\">Nueva denominación de la Fuente de Agua</label>\n                        <input className=\"cuadro_dato\" type=\"text\" required name=\"bloqueModificado\" id=\"bloqueModificado\" placeholder=\"Nombre del BloqueUrbano\" onChange={this.alterarDenominacionBloque} value={ this.state.denominacionBloqueSeleccionado } />\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_verde\" type=\"submit\">Actualizar</button>\n                        </div>\n                    </form>\n                    </Modal>\n                </div>\n            ); // Final del RENDER\n        } else { return <UsuarioNoValido /> }  \n    }\n}\n\nexport default Bloque","/*\n-- File:             conexionDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Conexiones Activas.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020\n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst servidor = urlServidor;\n\n// Lista el Total de conexiones por Zona y Agno\nexport function promesaListarTotalConexionesPorZona( objJSon ) { \n    return new Promise((resolver, rechazar) =>{\n        fetch(servidor + '/api/conexion/total/zonaperiodo/', {\n            method : 'POST',\n            body: JSON.stringify(objJSon),\n            headers: new Headers({'Accept': 'application/json','Content-type':'application/json' })\n        }) \n        .then( respuesta  => resolver(respuesta.json()) )/* Enviar Fuentes de Agua */\n        .catch(error => rechazar(error)) // Enviar Error\n    });\n}\n\n// Busca un registro de total de Conexiones para verificar su existencia\nexport function promesaVerificarExistenciaTotalConexiones(Busqueda){\n    return new Promise( (resolverr, rechazar) => {\n        fetch(servidor + '/api/conexion/buscar', {\n            method : 'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then(respuesta => { resolverr(respuesta.json()) }) // Enviar Respuesta\n        .catch(error => { rechazar(error) }); // Enviar Error\n    });\n};\n\n// Calcula el numero de conexiones Activas por Zona Altitud Mes y Agno\nexport function promesaTotalConexionesActivasZonaAltitud(Busqueda){\n    return new Promise( (resolverr, rechazar) => {\n        fetch(servidor + '/api/conexion/activas', {\n            method : 'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then(respuesta => { resolverr(respuesta.json()) }) // Enviar Respuesta\n        .catch(error => { rechazar(error) }); // Enviar Error\n    });\n};\n\n// Registra un total de conexiones \nexport function promesaRegistrarTotalConexiones( objJSon ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/conexion/', {\n            method : 'POST',\n            body: JSON.stringify(objJSon),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => resolver(respuesta.json()) )\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// Modificar Datos de Total de Conexiones\nexport function promesaModificarTotalConexiones( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/conexion/', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => resolver(respuesta.json()) )\n        .catch((error)=>{ rechazar(error); });\n    });\n}","import React, { Component } from 'react'\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { numeroArabigoEnRomano , obtenerFecha } from '../../datos/funcionesSistema';\nimport { promesaListarZonasComponente } from '../../datos/zonaDB.js';\nimport { promesaListarTotalConexionesPorZona,\n         promesaRegistrarTotalConexiones,\n         promesaModificarTotalConexiones } from '../../datos/conexionDB.js';\n\n// COMPONENTES\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from \"../../componentes/Modal.js\";\nvar fechaHoy = obtenerFecha();\nconst estadoInicial = {\n    usuario : verificarGrupoUsuario(),\n    zonas : [],\n    fechaTotalConexiones : [],\n    \n    identificadorZona : 3, // La primera ZONA por defecto\n    tieneConexiones : 1, // La primera ZONA tiene conexiones\n\n    mesesAgno : ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre' ,'diciembre'],\n    agnoPeriodo : fechaHoy.split('-')[0],// Periodo en que se hara la actividad\n    agnos : [\"2018\",\"2019\",\"2020\",\"2021\",\"2022\",\"2023\",\"2024\",\"2025\"], // Lista de agnos del Periodo por Defecto \n\n\n    codigoTotalConexion : 0,\n    mesSeleccionado : parseInt(new Date().getMonth()) + 1,\n    agnoSeleccionado : parseInt(new Date().getFullYear()),\n    totalConexionesSeleccionado : 0, \n\n    mostrarVentanaModalRegistrar : false,  \n    mensajeTexto : ''\n}\nexport class Conexion extends Component {\n\n    constructor(props) { \n        super(props);\n        this.state = estadoInicial;\n    }\n    \n    listarZonas = () => {\n        promesaListarZonasComponente().then( respuesta => this.setState({ zonas : respuesta }));\n    }\n\n    listarTotalConexiones = () => {\n        const Busqueda = { zona : this.state.identificadorZona, agno : this.state.agnoPeriodo  }\n        promesaListarTotalConexionesPorZona( Busqueda ).then(respuesta => this.setState({ fechaTotalConexiones : respuesta }));\n    }\n\n    cambiarCodigoZona = (evento) => {\n        this.state.zonas.filter(zona => zona.codigoZona === parseInt(evento.target.value)).map(zona => {\n            this.setState({ identificadorZona : zona.codigoZona, tieneConexiones : zona.tieneConexiones }, () => this.listarTotalConexiones());\n            return 0;\n        })\n    }\n\n    controlVentanaModalRegistrar = () => {\n        if(this.state.mostrarVentanaModalRegistrar){ // SI LA VENTANA ESTA ACTIVA\n            this.setState({ \n                codigoTotalConexion : 0,\n                mesSeleccionado : parseInt(new Date().getMonth()) + 1,\n                agnoSeleccionado : parseInt(new Date().getFullYear()),\n                totalConexionesSeleccionado : 0,\n                mostrarVentanaModalRegistrar : false\n            });\n        }else{\n            if(this.state.tieneConexiones){ this.setState({ mostrarVentanaModalRegistrar : true }) }\n            else{ alert(\"NO SE PUEDE AGREGAR DATOS (Zona NO habilitada para registrar Conexiones)\") }\n        }\n    }\n    \n    controlAlertaModalRegistrar = (texto) => {\n        this.setState({mensajeTexto:texto},()=>{setTimeout(this.setState.bind(this,estadoInicial),5000) });\n    }\n\n    registrarTotalConexion = (evento) => {\n        evento.preventDefault();\n        const nuevoTotalConexion = {\n            codigo : this.state.codigoTotalConexion,\n            zona : this.state.identificadorZona,\n            mes : document.getElementById('mesSeleccionado').value,\n            agno : document.getElementById('agnoSeleccionado').value,\n            conexiones : document.getElementById('totalConexionesSeleccionado').value,\n            quien : this.state.usuario.firmaDigital\n        }\n        if(this.state.codigoTotalConexion > 0){ //SI EXISTE REGISTRO, SE MODIFICARA\n            promesaModificarTotalConexiones(nuevoTotalConexion).then(respuesta => {\n                if(!respuesta[0].error){ this.setState({ mostrarVentanaModalRegistrar : false }, () => this.listarTotalConexiones())}\n                else { this.controlAlertaModalRegistrar(\"Registros Existente\") }\n            });\n        }else { //NO EXISTE REGISTRO, SE REGISTRARA\n            promesaRegistrarTotalConexiones(nuevoTotalConexion).then(respuesta => {\n                if(!respuesta[0].error){ this.setState({ mostrarVentanaModalRegistrar : false }, () => this.listarTotalConexiones())}\n                else { this.controlAlertaModalRegistrar(\"Registro Existente\") }\n            });\n        }\n    }\n\n    modificarTotalConexiones = (codigo, mes, agno, conexiones) => {\n        if(this.state.tieneConexiones){\n            this.setState({\n                codigoTotalConexion : codigo,\n                mesSeleccionado : mes,\n                agnoSeleccionado : agno,\n                totalConexionesSeleccionado : conexiones,\n                mostrarVentanaModalRegistrar : !this.state.mostrarVentanaModalRegistrar\n            });\n        } else { alert(\"NO SE PUEDE MODIFICAR LOS DATOS\") }\n    }\n\n    redireccionar = (ruta) => {\n        this.props.history.push(ruta);\n    }\n\n    cambiarAgno = (evento) => this.setState({ [evento.target.id]: evento.target.value },() => this.listarTotalConexiones());\n\n    componentDidMount() {\n        if (this.state.usuario.grupo > 0) { \n            this.listarZonas();      \n            this.listarTotalConexiones();\n        }// else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if (this.state.usuario.grupo > 0) { \n            return (\n            <div className=\"contenedor\">                \n                <div className=\"centrado\" style={{alignItems:'center'}}>\n                    <select className=\"cuadro_dato\" onChange = { this.cambiarAgno } id=\"agnoPeriodo\" value={this.state.agnoPeriodo}>\n                        { this.state.agnos.map(agno => <option value={agno} key={agno}>{agno}</option>)}\n                    </select>\n                    &nbsp; &mdash; &nbsp;\n                    <select className=\"cuadro_dato\" name={'zona_'} id={'zona_'} value={this.state.identificadorZona} onChange={this.cambiarCodigoZona} data-sector={\"sies\"}>\n                        <option value=\"0\"> Seleccione la zona </option>\n                        {\n                            this.state.zonas.map(zona  => (\n                                <option key={zona.codigoZona} value={zona.codigoZona} data-sector={zona}> {\"Zona \\u00A0\" + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                </option>\n                            ))\n                        }\n                    </select> \n                </div>\n                <br /><br />\n                <div className=\"centrado\">\n                <table style={{width:\"30%\"}}>      \n                    <thead>\n                        <tr style={{textAlign:'center'}}>\n                            <th><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar Numero de conexiones Activas\" title=\"Registrar/Agregar Numero de conexiones Activas\" onClick={ () => this.controlVentanaModalRegistrar()}/></th>\n                            <th>Mes</th>\n                            <th>Número de Conexiones<br />(TOTALES)</th>\n                        </tr> \n                    </thead>                         \n                    <tbody>\n                    {this.state.fechaTotalConexiones.map ( (conexion, indice ) => (\n                        <tr key={indice} className=\"tabla_fila\">\n                            <td></td>\n                            <td style={{textAlign:'center'}}>{ (this.state.mesesAgno[parseInt(conexion.mes)-1]).toUpperCase() }</td> \n                            <td style={{textAlign:'center', fontSize:'20pt'}} onClick={() => this.modificarTotalConexiones(conexion.codigoTotalConexion,conexion.mes,conexion.agno,conexion.numeroConexiones)}>\n                                {conexion.numeroConexiones }\n                            </td> \n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                </div>\n                <div className=\"centrado\">\n                    {this.state.fechaTotalConexiones.length > 0 ? null : <div style={{width:\"30%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                </div>\n                {/* Inicio seccion para --- REGISTAR --- */}\n                <Modal\n                    mostrarModal = {this.state.mostrarVentanaModalRegistrar}\n                    controlModal = {this.controlVentanaModalRegistrar}\n                    tituloModal = {\"Registrar Total de Conexiones\"}\n                >\n                <form noValidate onSubmit={this.registrarTotalConexion}>\n                    { this.state.mensajeTexto.length < 1 ? null:\n                    <div className=\"centrado\">\n                        <div style={{width:\"100%\"}}><CuadroMensaje tipoCuadro={\"peligro\"}>{this.state.mensajeTexto}</CuadroMensaje></div>\n                    </div>}\n                    <br/>\n                    <label htmlFor=\"mesSeleccionado\">Mes/año de Registro :</label>&nbsp; \n                    <select className=\"cuadro_dato\" name=\"mesSeleccionado\" id=\"mesSeleccionado\" defaultValue={this.state.mesSeleccionado}>\n                        {this.state.mesesAgno.map( (mes, mIndice) => (\n                            <option key={mIndice} value={(mIndice+1) < 10 ? '0'+(mIndice+1) : (mIndice+1)}>{mes}</option> \n                        ))}\n                    </select> / <input className=\"cuadro_dato\" type=\"number\" name=\"agnoSeleccionado\" id=\"agnoSeleccionado\" pattern=\"[0-9]*\" min=\"2018\" style={{ width:\"4em\" }} defaultValue={parseInt(this.state.agnoSeleccionado)}/><br /><br />\n                    <label htmlFor=\"conexiones\">Total de Conexiones :</label>&nbsp;\n                    <input className=\"cuadro_dato\" type=\"number\" min=\"0\" name=\"totalConexionesSeleccionado\" id=\"totalConexionesSeleccionado\" defaultValue={ this.state.totalConexionesSeleccionado }/>\n                    <br /> <br />\n                    <div className=\"centrado\">\n                        <button className=\"boton boton_verde\" type=\"submit\">Registrar</button>\n                    </div>\n                </form>\n                </Modal>\n                {/* Final de seccion para --- REGISTRAR --- */}\n            </div>  \n            )\n        } else { return <UsuarioNoValido /> } \n    }\n}\n\nexport default Conexion","/*\n-- File:             conexionProdAguaDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Conexiones De Produccion de agua.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020\n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst servidor = urlServidor;\n\n// Lista el Total de Conexiones de Producción de Agua por Zona y Altitud\nexport function promesaListarTotalConexionesPorZonaAltitud( objJSon ) { \n    return new Promise((resolver, rechazar) =>{\n        fetch(servidor + '/api/conexionprod/total/zonaaltitud/', {\n            method : 'POST',\n            body: JSON.stringify(objJSon),\n            headers: new Headers({'Accept': 'application/json','Content-type':'application/json' })\n        }) \n        .then( respuesta  => resolver(respuesta.json()) )/* Enviar Fuentes de Agua */\n        .catch(error => rechazar(error)) // Enviar Error\n    });\n}\n\n// Registra un Total de Conexiones de Producción de Agua \nexport function promesaRegistrarTotalConexionesProdAgua( objJSon ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/conexionprod/', {\n            method : 'POST',\n            body: JSON.stringify(objJSon),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => resolver(respuesta.json()) )\n        .catch( error => rechazar(error) );\n    });\n}\n\n// Modificar Datos de Total de Conexiones De Producción de Agua\nexport function promesaModificarTotalConexionesProdAgua( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/conexionprod/', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => resolver(respuesta.json()) )\n        .catch((error)=>{ rechazar(error); });\n    });\n}","import React, { Component } from 'react';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { numeroArabigoEnRomano , obtenerDenominacionTipoAltitud} from '../../datos/funcionesSistema';\nimport { promesaListarZonasComponente } from '../../datos/zonaDB.js';\nimport { promesaListarTotalConexionesPorZonaAltitud,\n         promesaRegistrarTotalConexionesProdAgua,\n         promesaModificarTotalConexionesProdAgua } from '../../datos/conexionProdAguaDB.js';\n\n/* COMPONENTES */\nimport Paginacion, { CANTIDAD_PAGINA, TAMAGNO_PAGINA } from \"../../componentes/Paginacion.js\";\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from \"../../componentes/Modal.js\";\nconst estadoInicial = {\n    usuario : verificarGrupoUsuario(),\n    zonas : [],\n    totalConexionesProdAgua : [],\n\n    zonaSeleccionado : \"%\",\n    altitudSeleccionado : \"%\",\n\n    paginaActual : 1,\n    conexionInicioPaginado : 1,\n\n    codigoProdConexion : 0,\n    zonaRegistro : 0,\n    altitudRegistro : 0,\n    conexionesRegistro : 0,\n\n    mostrarVentanaModalRegistrar : false,\n    mensajeTexto : ''\n}\nexport class ConexionProdAgua extends Component {\n\n    constructor(props) { \n        super(props);\n        this.state = estadoInicial;\n    }\n    \n    listarZonas = () => {\n        promesaListarZonasComponente().then( respuesta => { this.setState({ zonas : respuesta }) });\n    }\n\n    listarTotalConexionesProdAgua = () => {\n        this.setState({conexionInicioPaginado:(parseInt(this.state.paginaActual)-1)*TAMAGNO_PAGINA},()=>{\n            const Busqueda={ zona:this.state.zonaSeleccionado,altitud:this.state.altitudSeleccionado,\n                inicio:this.state.conexionInicioPaginado,resultados:TAMAGNO_PAGINA };\n            promesaListarTotalConexionesPorZonaAltitud(Busqueda).then(res=>{if(!res.error){this.setState({totalConexionesProdAgua:res})}});\n        });\n    }\n\n    controlVentanaModalRegistrar = () => {\n        this.setState({ mostrarVentanaModalRegistrar : !this.state.mostrarVentanaModalRegistrar });\n    }\n\n    controlVentanaModalRegistrar = () => {\n        if(this.state.mostrarVentanaModalRegistrar){ // SI LA VENTANA ESTA ACTIVA\n            this.setState({ zonaRegistro : 0, altitudRegistro : 0, conexionesRegistro : 0  });\n        }\n        this.setState({ mostrarVentanaModalRegistrar :  !this.state.mostrarVentanaModalRegistrar});\n    }\n    \n    controlAlertaModalRegistrar = (texto) => {\n        this.setState({mensajeTexto:texto},()=>{setTimeout(this.setState.bind(this,estadoInicial),5000) });\n    }\n\n    cambiarZonaSeleccionado = (evento) => {\n        this.setState({ zonaSeleccionado : evento.target.value }, () => this.listarTotalConexionesProdAgua());\n    }\n\n    cambiarAltitudSeleccionado = (evento) => {\n        this.setState({ altitudSeleccionado : evento.target.value }, () => this.listarTotalConexionesProdAgua());\n    }\n\n    registrarTotalConexiones = (evento) => {\n        evento.preventDefault();\n        const nuevoTotalConexion = {\n            codigo : this.state.codigoProdConexion,\n            zona : document.getElementById('zonaRegistro').value,\n            altitud : document.getElementById('altitudRegistro').value,\n            conexiones : document.getElementById('conexionesRegistro').value,\n            quien : this.state.usuario.firmaDigital\n        }\n        if(this.state.codigoProdConexion > 0){ // SI EXISTE REGISTRO, SE EDITARA\n            promesaModificarTotalConexionesProdAgua(nuevoTotalConexion).then(respuesta => {\n                if(!respuesta[0].error){ this.setState({ mostrarVentanaModalRegistrar : false }, () => this.listarTotalConexionesProdAgua())}\n                else { this.controlAlertaModalRegistrar(\"Registro Existente\") }\n            });\n        }else{ // NO EXISTE REGISTRO, SE REGISTRARA\n            promesaRegistrarTotalConexionesProdAgua(nuevoTotalConexion).then(respuesta => {\n                if(!respuesta[0].error){ this.setState({ mostrarVentanaModalRegistrar : false }, () => this.listarTotalConexionesProdAgua())}\n                else { this.controlAlertaModalRegistrar(\"Registro Existente\") }\n            });\n        }\n    }\n\n    modificarTotalConexiones = (conexion) => {\n        this.setState({\n            codigoProdConexion : conexion.codigoProdConexion,\n            zonaRegistro : conexion.codigoZona,\n            altitudRegistro : conexion.tipoAltitud,\n            conexionesRegistro : conexion.numeroConexiones,\n            mostrarVentanaModalRegistrar : !this.state.mostrarVentanaModalRegistrar\n        });\n    }\n\n    cambiarPagina = (pagina) => {\n        if(parseInt(pagina) > 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || \"\") }\n        if(pagina <= CANTIDAD_PAGINA){ this.setState({ paginaActual: pagina }, () => this.listarTotalConexionesProdAgua()) }\n    }\n\n    redireccionar = (ruta) => { this.props.history.push(ruta) }\n\n    componentDidMount() { \n        if (this.state.usuario.grupo > 0) { \n            this.listarZonas();      \n            this.listarTotalConexionesProdAgua();\n        }// else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if (this.state.usuario.grupo > 0) { \n            return (\n            <div className=\"contenedor\">\n                <div className=\"centrado\" style={{alignItems:'center'}}>\n                    <select className=\"cuadro_dato\" value={this.state.zonaSeleccionado} onChange={this.cambiarZonaSeleccionado}>\n                        <option value=\"%\"> Seleccione la zona </option>\n                        {this.state.zonas.filter(zona => zona.esSector).map(zona  => (\n                            <option key={zona.codigoZona} value={zona.codigoZona}> {\"Zona \\u00A0\" + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}</option>\n                        ))}\n                    </select>\n                    &nbsp; &mdash; &nbsp;\n                    <select className=\"cuadro_dato\" id=\"altitudSeleccionado\" value={this.state.altitudSeleccionado} onChange={ this.cambiarAltitudSeleccionado }>\n                        <option value=\"%\"> Seleccione la altitud </option>\n                        <option value=\"3\">Alta</option>\n                        <option value=\"2\">Media</option>\n                        <option value=\"1\">Baja</option>\n                        <option value=\"0\">SNES</option>\n                    </select>\n                </div> \n                <br /><br />\n                <Paginacion\n                    cantidadElementos = {this.state.totalConexionesProdAgua.length}\n                    cambiarPagina = {this.cambiarPagina}\n                    paginaActual = {this.state.paginaActual}\n                ></Paginacion><br />\n                <div className=\"centrado\">\n                <table style={{width:\"40%\"}}>      \n                    <thead>\n                        <tr style={{textAlign:'center'}}>\n                            <th style={{width:\"1%\"}}><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar Datos de conexiones de la Ofi. Producción de Agua\" title=\"Registrar/Agregar Datos de conexiones de la Ofi. Producción de Agua\" onClick={ () => this.controlVentanaModalRegistrar()}/></th>\n                            <th>Zona</th>\n                            <th>Altitud</th>\n                            <th>Número de<br />Conexiones</th>\n                        </tr> \n                    </thead>                         \n                    <tbody>\n                    {this.state.totalConexionesProdAgua.map ((conexion, indice ) => (\n                        <tr key={indice} className=\"tabla_fila\">\n                            <td></td>\n                            <td style={{textAlign:'center'}}>\n                                { \"Zona \\u00A0\" + numeroArabigoEnRomano(conexion.sector) + (parseInt(conexion.subSector) === 0 ? '' : \" \\u2014 \" + numeroArabigoEnRomano(conexion.subSector)) +   (conexion.microSector === '-' ? '' : \" \\u2014 \" + conexion.microSector) } \n                            </td>\n                            <td style={{textAlign:'center'}}> {obtenerDenominacionTipoAltitud(conexion.tipoAltitud)} </td>\n                            <td style={{textAlign:'center', fontSize:'20pt'}} onClick={() => this.modificarTotalConexiones(conexion)}> \n                                {conexion.numeroConexiones } \n                            </td> \n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                </div>\n                <div className=\"centrado\">\n                    {this.state.totalConexionesProdAgua.length > 0 ? null : <div style={{width:\"40%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                </div>\n                {/* Inicio seccion para --- REGISTAR --- */}\n\n                <Modal\n                    mostrarModal = {this.state.mostrarVentanaModalRegistrar}\n                    controlModal = {this.controlVentanaModalRegistrar}\n                    tituloModal = {\"Registrar Total de Conexiones\"}\n                >\n                <form noValidate onSubmit={this.registrarTotalConexiones} className=\"una_columna\">\n                    {this.state.mensajeTexto.length < 1 ? null:\n                    <div className=\"centrado\">\n                        <div style={{width:\"100%\"}}><CuadroMensaje tipoCuadro={\"peligro\"}>{this.state.mensajeTexto}</CuadroMensaje></div>\n                    </div>}\n\n                    <label htmlFor=\"zonaRegistro\">Zona : &nbsp; \n                    <select className=\"cuadro_dato\" name=\"zonaRegistro\" id=\"zonaRegistro\" defaultValue={this.state.zonaRegistro}>\n                        <option value=\"0\">Seleccione Zona</option>\n                        {this.state.zonas.filter(zona => zona.esSector).map(zona  => (\n                            <option key={zona.codigoZona} value={zona.codigoZona}> {\"Zona \\u00A0\" + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}</option>\n                        ))}\n                    </select></label>\n\n                    <label htmlFor=\"altitudRegistro\">Altitud : &nbsp; \n                    <select className=\"cuadro_dato\" id=\"altitudRegistro\" defaultValue={this.state.altitudRegistro}>\n                        <option value=\"0\">Seleccione Altitud</option>\n                        <option value=\"3\">Alta</option>\n                        <option value=\"2\">Media</option>\n                        <option value=\"1\">Baja</option>\n                    </select></label>\n\n                    <label htmlFor=\"conexionesRegistro\">Conexiones : &nbsp;\n                        <input className=\"cuadro_dato\" type=\"number\" min=\"0\" name=\"conexionesRegistro\" id=\"conexionesRegistro\" defaultValue={ this.state.conexionesRegistro }/>\n                    </label>\n                    <div className=\"centrado\">\n                        <button className=\"boton boton_verde\" type=\"submit\">Registrar</button>\n                    </div>\n                </form>\n                </Modal>\n                {/* Final de seccion para --- REGISTRAR --- */}\n            </div>  \n            )\n        } else {\n            return ( <UsuarioNoValido /> );\n        } \n    }\n}\n\nexport default ConexionProdAgua","/*\n-- File:             direccionDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Direcciones.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020        \n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor, obtenerFecha } from './funcionesSistema.js';\nconst servidor = urlServidor;\n\n// trae todas las zonas registradas en la Aplicacion (SIN USO)\nexport function direccionesPorZona( indiceZonal ) { \n    return new Promise((resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/zona/' + indiceZonal) \n        .then( respuesta  => respuesta.json() )\n        .then( datos => { resolver(datos); })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\n// trae todas las zonas registradas en la Aplicacion\nexport function promesaListarDirecciones( indiceZonal ) { \n    return new Promise((resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/zona/' + indiceZonal) \n        .then( respuesta  => respuesta.json() )\n        .then( datos => { resolver(datos); })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\n// trae todas las zonas registradas en la Aplicacion\nexport function promesaListarDireccionesPaginado( jsonConsulta ) { \n    return new Promise((resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/paginado/', {\n           method : 'POST',\n           body: JSON.stringify( jsonConsulta ),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n        })\n        .then( respuesta  => respuesta.json() )\n        .then( datos => { resolver(datos); })\n        .catch((error) => {\n            rechazar(error);\n        });\n        \n    });\n}\n\n// Registra un total de conexiones \nexport function promesaAgregarDireccion( objJSon ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/direccion/', {\n           method : 'POST',\n           body: JSON.stringify(objJSon),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => respuesta )\n       .then( datos => { resolver(datos); })\n       .catch((error)=>{ rechazar(error); });\n   });\n}\n\n// deshabilita el registro de una Fuente de Agua\nexport function promesaDeshabilitarDireccion( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/', {\n            method : 'DELETE',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// deshabilita el registro de una Fuente de Agua\nexport function promesaHabilitarDireccion( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/habilitar', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// Modificar el nombre de una Direccion/lote\nexport function promesaModificarNombreDireccion( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// Modificar la ZONA de una Direccion/lote\nexport function promesaModificarZonaDireccion( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/actualizarZona', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\nexport function promesaModificarBloqueUrbanoDireccion( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/actualizarBloqueUrbano', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\nexport function promesaModificarAltitudDireccion( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/direccion/actualizarAltitud', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// Busca las direcciones por zona bloque urbano y area de servicio\nexport function promesaBuscarDireccionesActividad(Busqueda){\n    return new Promise((resolver,rechazar)=>{\n        fetch(servidor + \"/api/direccion/buscar/\",{ // Fetch para consumir API de servidor NODE JS\n            method:'POST',\n            body: JSON.stringify(Busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => resolver(respuesta.json()))\n        .catch(error => resolver({ error : error.message }));\n    });\n}\n\n// SUBIR ARCHIVO MS EXCEL .CSV\nexport function promesaImportarArchivo(archivo){\n    const fd = new FormData();\n    const nombre = archivo.name.split('.')[0] + \"-\" + obtenerFecha() + \".csv\";\n    fd.append('archivo', archivo, nombre);\n    return new Promise((resolver, rechazar)=>{\n        fetch(servidor + '/api/direccion/importar',{\n            method:'POST',\n            body: fd\n        })\n        .then(response => resolver(response.json()))\n        .catch(error => rechazar(error));\n    });\n}","import React, { Component } from 'react';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\nimport { promesaListarZonasComponente } from '../../datos/zonaDB.js';\nimport { promesaListarBloquesRegistrados, promesaListarBloquesPorZona } from '../../datos/bloqueDB.js';\n\nimport { promesaListarDireccionesPaginado, \n         promesaAgregarDireccion,\n         promesaDeshabilitarDireccion,\n         promesaHabilitarDireccion, \n         promesaModificarNombreDireccion, \n         promesaModificarZonaDireccion,\n         promesaModificarBloqueUrbanoDireccion,\n         promesaModificarAltitudDireccion,\n         promesaImportarArchivo } from '../../datos/direccionDB.js';\n\n// ---- COMPONENTES -----\nimport Paginacion, { CANTIDAD_PAGINA, TAMAGNO_PAGINA } from \"../../componentes/Paginacion.js\";\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from \"../../componentes/Modal.js\";\n\nexport class Direccion extends Component {\n\n    constructor(propiedades) { \n        super(propiedades); \n        this.state = {\n            usuario : verificarGrupoUsuario(),\n            zonas : [],\n            direcciones : [],\n            bloques : [],\n            bloquesZona : [],\n\n            zonaConsultada : 1,   // Zona con el codigoZona 1 ???\n            nombreZonaConsultada : '',\n            \n            paginaActual : 1,\n            direccionInicioPaginado : 1,\n            \n            codigoDireccionSeleccionada : 0,\n            denominacionDireccionSeleccionada : '',\n            inscripcionDireccionSeleccionada : '',\n\n            mostrarVentanaModalAgregar : false,\n            mostrarVentanaModalEditar : false,\n\n            mostrarVentanaModalArchivo : false,\n\n            archivoCSV : null,\n            nombreArchivo : \"Seleccione un archivo (.csv)\",\n        };\n    }\n\n    listarZonas = () => {\n        promesaListarZonasComponente().then( respuesta => { \n            this.setState({ zonas : respuesta }); \n        });\n    }\n\n    listarBloquesUrbanos = () => {\n        promesaListarBloquesRegistrados().then(bloques=>this.setState({ bloques }));     \n    }\n\n    listarBloquesPorZona = (codigoZona) => {\n        promesaListarBloquesPorZona({zona:codigoZona}).then(bloquesZona => {\n            if(!bloquesZona.error){ this.setState({bloquesZona}) }\n        });\n    }\n\n    listaDirecciones = ( ) => {\n        this.setState({ direccionInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }\n        , () => {\n            promesaListarDireccionesPaginado({ \n                inicio : this.state.direccionInicioPaginado, \n                resultados : TAMAGNO_PAGINA\n            }).then( respuesta => { this.setState({ direcciones : respuesta }); } )\n        });\n    }\n\n    cambiarZonaRegistro = (evento) => {\n        this.listarBloquesPorZona(evento.target.value);\n    }\n\n    cambiarZona = (evento) => {\n        this.setState({ zonaConsultada : evento.target.value }, () => {\n            this.listaDirecciones();    \n        });        \n    }\n    \n    controlarVentanaModalAgregar = () => {\n        this.setState({\n            mostrarVentanaModalAgregar : !this.state.mostrarVentanaModalAgregar\n        });\n    }\n    \n    controlarVentanaModalEditar = () => {\n        this.setState({\n            mostrarVentanaModalEditar : !this.state.mostrarVentanaModalEditar\n        });\n    }\n\n    controlVentanaModalArchivo = () => {\n        if(this.state.mostrarVentanaModalArchivo){\n            this.setState({ archivoCSV : null , nombreArchivo : \"Seleccione un archivo (.csv)\" });\n        }\n        this.setState({ mostrarVentanaModalArchivo: !this.state.mostrarVentanaModalArchivo });\n    }\n    \n    seleccionarDireccion = (indiceDireccion, nombreDireccion, inscripcionDireccion) => {\n        this.setState({\n            codigoDireccionSeleccionada : indiceDireccion,\n            denominacionDireccionSeleccionada : nombreDireccion,\n            inscripcionDireccionSeleccionada : inscripcionDireccion, \n            mostrarVentanaModalEditar : !this.state.mostrarVentanaModalEditar\n        });\n    }\n\n    seleccionarArchivo = (evento) => {\n        const archivo = evento.target.files[0];\n        if(archivo.type === \"text/csv\"){\n            this.setState({ archivoCSV: archivo , nombreArchivo: archivo.name });\n        }else{ alert(\"Solo archivos MicroSoft Excel (.csv)\") }\n    }\n\n    importarArchivo = (evento) => {\n        evento.preventDefault();\n        if(this.state.archivoCSV !== null){\n            promesaImportarArchivo(this.state.archivoCSV).then(respuesta => {\n                if(respuesta){ \n                    this.listaDirecciones();\n                    this.controlVentanaModalArchivo()\n                }else{ alert(\"Error al importar Archivo...\") }\n            });\n        }else{ alert(\"Seleccione un archivo\") }\n    }\n    \n    agregarNuevaDireccion = (evento) => {\n        evento.preventDefault();\n        const objetoNuevo = {\n            zona : document.getElementById('zn_Agregar_').value,\n            bloque : document.getElementById('bu_Agregar_').value, \n            denominacion : document.getElementById('nmbZn_Agregar_').value,\n            altitud : document.getElementById('alt_Agregar_').value,\n            inscripcion : document.getElementById('cdI_Agregar_').value,\n            firma : this.state.usuario.firmaDigital\n        };\n        promesaAgregarDireccion( objetoNuevo ).then(_ => {\n            this.setState({ mostrarVentanaModalAgregar : false });\n            this.listaDirecciones();  \n        });\n    }   \n\n    cambiarEstadoDireccion = (evento) => {\n        const estaHabilitado = parseInt(evento.target.value);\n        this.setState( { codigoDireccionSeleccionada : parseInt(evento.target.name) }, () => { \n            const objetoEnviado = {\n                codigo : this.state.codigoDireccionSeleccionada,\n                firma : this.state.usuario.firmaDigital\n            };\n            if (estaHabilitado === 1) {\n                promesaDeshabilitarDireccion( objetoEnviado ).then( respuesta => { \n                    this.listaDirecciones();\n                });\n            } else {        \n                promesaHabilitarDireccion( objetoEnviado ).then( respuesta => { \n                    this.listaDirecciones();\n                });\n            }\n        });\n    }\n    \n    modificarNombreDireccion = (evento) => {\n        evento.preventDefault();\n        this.setState({ mostrarVentanaModalEditar : false }, () => {\n            const objetoModificado = {\n                codigo : this.state.codigoDireccionSeleccionada, \n                denominacion : this.state.denominacionDireccionSeleccionada,\n                inscripcion : this.state.inscripcionDireccionSeleccionada,\n                firma : this.state.usuario.firmaDigital\n            };\n            promesaModificarNombreDireccion( objetoModificado ).then( respuesta => { \n                this.listaDirecciones();  \n            }); \n        });\n    }\n\n    cambiarZonaDireccion = (evento) => {\n        const jsonModificado = {\n            codigo : evento.target.dataset.direccion,\n            zona : evento.target.options[evento.target.selectedIndex].value,\n            firma :  this.state.usuario.firmaDigital\n        }\n        promesaModificarZonaDireccion( jsonModificado ).then( respuesta => {\n            this.listaDirecciones();\n        }); \n    }\n\n    cambiarBloqueUrbano = (evento) => {\n        const jsonModificado = {\n            codigo : evento.target.dataset.direccion,\n            bloque : evento.target.options[evento.target.selectedIndex].value,\n            firma :  this.state.usuario.firmaDigital\n        }\n        promesaModificarBloqueUrbanoDireccion( jsonModificado ).then( respuesta => {\n            this.listaDirecciones();\n        }); \n    } \n\n    cambiarAltitud = (evento) => {\n        const jsonModificado = {\n            codigo : evento.target.dataset.direccion,\n            altitud : evento.target.options[evento.target.selectedIndex].value,\n            firma :  this.state.usuario.firmaDigital\n        }\n        promesaModificarAltitudDireccion( jsonModificado ).then( respuesta => {\n            this.listaDirecciones();\n        }); \n    }\n\n    cambiarPagina = (pagina) => {\n        if(parseInt(pagina) > 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || \"\") }\n        if(pagina <= CANTIDAD_PAGINA){ this.setState({ paginaActual: pagina }, () => this.listaDirecciones()) }\n    }\n\n    redireccionar = (ruta) => { this.props.history.push(ruta) }\n\n    componentDidMount() { \n        if (this.state.usuario.grupo > 0) {\n            this.setState({ direccionInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }, () => { \n                this.listarZonas();\n                this.listarBloquesUrbanos();\n                this.listaDirecciones();\n            });\n        }// else{ this.props.history.push('/') }\n    }\n    \n    render() {\n        /* SI ES ADMINISTRADOR O GERENTE */\n        if (this.state.usuario.grupo > 0) {\n            return (\n                <div className=\"contenedor\">\n                    <Paginacion\n                        cantidadElementos = {this.state.direcciones.length}\n                        cambiarPagina = {this.cambiarPagina}\n                        paginaActual = {this.state.paginaActual}\n                    ></Paginacion><br />\n                    <div className=\"centrado\">\n                        <button className=\"boton boton_verde\" onClick={this.controlVentanaModalArchivo}>Importar</button>\n                    </div>\n                    <br />\n                    <div className=\"centrado\">\n                        <table style={{width:'90%'}}>\n                            <thead>\n                                <tr>\n                                    <th><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar una Nueva Dirección\" title=\"Registrar/Agregar una Nueva Dirección\" onClick={ () => this.controlarVentanaModalAgregar()}/></th>\n                                    <th> Zona Comercial</th>\n                                    <th> Bloque Urbano </th>\n                                    <th> Denominación relativa a una dirección </th>\n                                    <th> Altitud </th>\n                                    <th> Código de inscripción </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.direcciones.map(elemento=> (\n                                <tr key={elemento.codigoDireccion} data-id={elemento.codigoDireccion} className=\"tabla_fila\">\n                                    <td style={{textAlign:'center'}}>\n                                        <label className=\"boton_habilitado\">\n                                            <input type=\"checkbox\" onChange={this.cambiarEstadoDireccion} \n                                            checked={ parseInt(elemento.habilitado) === 1 ? true : false } value={ parseInt(elemento.habilitado) === 1 ? 1 : 0 } \n                                            name={ elemento.codigoDireccion } id={'chkBox' + elemento.codigoDireccion } />\n                                            <div className=\"boton_deslizar redondo\"></div>\n                                        </label>\n                                    </td>\n                                    <td style={{textAlign:'center'}}>\n                                        <select className=\"cuadro_dato\" name={'zona_' + elemento.codigoDireccion} id={'zona_'+elemento.codigoDireccion} value={elemento.codigoZona} data-direccion={elemento.codigoDireccion} onChange={this.cambiarZonaDireccion}>\n                                            <option value=\"0\"> Seleccionar Zona </option>\n                                            {(this.state.zonas || []).map( (elemento, indice) => ( \n                                                <option key={indice} value={elemento.codigoZona}> {\"Zona \\u00A0\" + numeroArabigoEnRomano(elemento.sector) + (parseInt(elemento.subSector) === 0 ? '' : \" \\u2014 \" + numeroArabigoEnRomano(elemento.subSector)) + (elemento.microSector === '-' ? '' : \" \\u2014 \" + elemento.microSector)} </option> \n                                            ))}\n                                        </select>\n                                    </td>\n                                    <td style={{textAlign:'center'}}>\n                                        <select className=\"cuadro_dato\" value={elemento.codigoUrbano} name={'bloque_'+elemento.codigoDireccion} id={'bloque_'+elemento.codigoDireccion} data-direccion={elemento.codigoDireccion} onChange={this.cambiarBloqueUrbano}>\n                                            <option value=\"0\"> Seleccionar Bloque Urbano</option>\n                                            {(this.state.bloques || []).map(bloque => (\n                                                <option key={bloque.codigoUrbano} value={bloque.codigoUrbano}> { bloque.denominacionBloque.toUpperCase() } </option>\n                                            ))}\n                                        </select>\n                                    </td>\n                                    <td onClick={() => {this.seleccionarDireccion(elemento.codigoDireccion, elemento.denominacionLote, elemento.codigoInscripcion)}}>\n                                        {elemento.denominacionLote}\n                                    </td>\n                                    <td style={{textAlign:'center'}}>\n                                        <select className=\"cuadro_dato\" value={elemento.tipoAltitud} name={'altitud_'+elemento.codigoDireccion } id={'altitud_'+elemento.codigoDireccion } data-direccion={elemento.codigoDireccion} onChange={this.cambiarAltitud}>\n                                            <option value=\"0\">Altitud</option>\n                                            <option value=\"3\">Alta</option>\n                                            <option value=\"2\">Media</option>\n                                            <option value=\"1\">Baja</option>\n                                        </select>\n                                    </td>\n                                    <td style={{textAlign:'center'}} onClick={() => {this.seleccionarDireccion(elemento.codigoDireccion, elemento.denominacionLote, elemento.codigoInscripcion)}}>\n                                        {elemento.codigoInscripcion}\n                                    </td>\n                                </tr>\n                            ))}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"centrado\">\n                        {this.state.direcciones.length > 0 ? null : <div style={{width:\"90%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                    </div>\n                    <Modal\n                        mostrarModal = {this.state.mostrarVentanaModalAgregar}\n                        controlModal = {this.controlarVentanaModalAgregar}\n                        tituloModal = {\"Nueva Dirección\"}\n                    >\n                    <form noValidate onSubmit={this.agregarNuevaDireccion} className=\"una_columna\">\n                        <label htmlFor=\"bu_Agregar_\">Zona Asignada:</label>\n                        <select className=\"cuadro_dato\" name=\"zn_Agregar_\" id=\"zn_Agregar_\" onChange={this.cambiarZonaRegistro}>\n                            <option value=\"0\"> Seleccionar Zona </option>\n                            {(this.state.zonas || []).map( (elemento, indice) => ( \n                                <option key={indice} value={elemento.codigoZona}> {\"Zona \\u00A0\" + numeroArabigoEnRomano(elemento.sector) + (parseInt(elemento.subSector) === 0 ? '' : \" \\u2014 \" + numeroArabigoEnRomano(elemento.subSector)) + (elemento.microSector === '-' ? '' : \" \\u2014 \" + elemento.microSector)}</option>\n                            ))}\n                        </select>\n\n                        <label htmlFor=\"bu_Agregar_\">Bloque Urbano:</label>\n                        <select className=\"cuadro_dato\" name=\"bu_Agregar_\" id=\"bu_Agregar_\" required>\n                            <option value=\"0\"> Seleccionar Bloque Urbano</option>\n                            {(this.state.bloquesZona || []).map( (bloque, indice_n1) => (\n                                <option key={indice_n1} value={bloque.codigoUrbano}> { bloque.denominacionBloque } </option>\n                            ))}\n                        </select>\n                        <label htmlFor=\"alt_Agregar_\">Tipo de Altitud:</label>\n                        <select className=\"cuadro_dato\" name=\"alt_Agregar_\" id=\"alt_Agregar_\" required>\n                                <option value=\"0\">Seleccionar Altitud</option>\n                                <option value=\"3\">Alta</option>\n                                <option value=\"2\">Media</option>\n                                <option value=\"1\">Baja</option>\n                        </select>   \n                        <label htmlFor=\"nmbZn_Agregar_\">Denominación de Dirección:</label>\n                        <input className=\"cuadro_dato\" type=\"text\" size={40} name=\"nmbZn_Agregar_\" id=\"nmbZn_Agregar_\" />\n                        <label htmlFor=\"cdI_Agregar_\">Código de Inscripción:</label>\n                        <input className=\"cuadro_dato\" type=\"text\" size={40} name=\"cdI_Agregar_\" id=\"cdI_Agregar_\" />\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_verde\" type=\"submit\">Agregar</button>\n                        </div>                          \n                    </form>\n                    </Modal>\n                                                            \n                    <Modal\n                        mostrarModal = {this.state.mostrarVentanaModalEditar}\n                        controlModal = {this.controlarVentanaModalEditar}\n                        tituloModal = {\"Modificar la Denominación de la Dirección\"}\n                    >\n                    <form noValidate onSubmit={this.modificarNombreDireccion} className=\"una_columna\">\n                        <label htmlFor=\"nombreZonaModificado_\">Denominación de una dirección</label>\n                        <input className=\"cuadro_dato\" type=\"text\" size={50} name=\"nombreZonaModificado_\" id=\"nombreZonaModificado_\" value={ this.state.denominacionDireccionSeleccionada } onChange={ evento => this.setState({ denominacionDireccionSeleccionada : evento.target.value })}/>\n                        <label htmlFor=\"inscripcion_edtr_\">Código de Inscripción</label>\n                        <input className=\"cuadro_dato\" type=\"text\" size={50} name=\"inscripcion_edtr_\" id=\"inscripcion_edtr_\" value={this.state.inscripcionDireccionSeleccionada} onChange={evento => this.setState({ inscripcionDireccionSeleccionada : evento.target.value }) }/>\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_verde\" type=\"submit\">Actualizar</button>\n                        </div>\n                    </form>\n                    </Modal>\n                    \n                    <Modal\n                        mostrarModal = {this.state.mostrarVentanaModalArchivo}\n                        controlModal = {this.controlVentanaModalArchivo}\n                        tituloModal = {\"Importar MS Excel CSV\"}\n                    >\n                    <form noValidate onSubmit={this.importarArchivo} className=\"una_columna\">\n                        <div className=\"cuadro_archivo\">\n                            <input style={{opacity:\"0\"}} type=\"file\" id=\"archivoDireccion\" lang=\"es\"onChange = { e => this.seleccionarArchivo(e) }/>\n                            <label className=\"cuadro_archivo_nombre\" htmlFor=\"archivoDireccion\">{ this.state.nombreArchivo}</label>\n                        </div>\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_verde\" type=\"submit\">Importar</button>\n                        </div>\n                    </form>\n                    </Modal>\n                </div>\n            ); // Final del Render\n        } else { return <UsuarioNoValido /> }\n    }\n}\n\nexport default Direccion","/*\n-- File:             fuenteDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Fuentes de Agua.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-01\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020          \n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst servidor = urlServidor;\n\n// Lista las fuentes de agua REGISTRADAS independientemente si están habilitadas o no\nexport function promesaListarFuentesAguaParaComponente() {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuente')\n            .then( respuesta  => respuesta.json() )\n            .then( datos => { resolver(datos); })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\n// Lista los Fuentes de Agua POR PAGINADO\nexport function promesaListarFuentesAguaPaginado(objJson) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuente/paginado/', {\n            method : 'POST',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta  => resolver(respuesta.json()))\n        .catch(error => rechazar(error));\n    });\n} \n\n// Lista las fuentes de agua REGISTRADAS independientemente si están habilitadas o no\nexport function promesaListarFuentesAgua() {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuente/registradas')\n            .then( respuesta  => respuesta.json() )\n            .then( datos => { resolver(datos); })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\n// Lista las ZONAS REGISTRADAS para todas las FUENTES\nexport function promesaListarZonasPorFuentesDeAgua() {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/zona/fuentes/registradas/')\n            .then( respuesta  => respuesta.json() )\n            .then( datos => { resolver(datos); })\n        .catch((error) => {\n            rechazar(error);\n        });\n    });\n}\n\n// Deshabilitar el registro de una Fuente de Agua\nexport function promesaDeshabilitarFuenteAgua( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuente/', {\n            method : 'DELETE',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// Habilitar una Fuente de agua previamente deshabilitada\nexport function promesaHabilitarFuenteAgua( objJSon ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuente/habilitar', {\n            method : 'PUT',\n            body: JSON.stringify(objJSon),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// Insertar una nueva Fuente de agua\nexport function promesaAgregarFuenteAgua( objJSon ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuente/', {\n            method : 'POST',\n            body: JSON.stringify(objJSon),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}\n\n// Cambiar la denominacion de una Fuente de agua registrada\nexport function promesaModificarDenominacionFuenteAgua( objJSon ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuente/', {\n            method : 'PUT',\n            body: JSON.stringify(objJSon),\n            headers: new Headers({\n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => respuesta )\n        .then( datos => { resolver(datos); })\n        .catch((error)=>{ rechazar(error); });\n    });\n}","import React, { Component } from 'react'\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema.js';\nimport { promesaListarFuentesAguaPaginado, \n         promesaListarZonasPorFuentesDeAgua,\n         promesaAgregarFuenteAgua, \n         promesaDeshabilitarFuenteAgua, \n         promesaHabilitarFuenteAgua, \n         promesaModificarDenominacionFuenteAgua } from '../../datos/fuenteDB.js';\n\n// ---- COMPONENTES -----\nimport Paginacion, { CANTIDAD_PAGINA, TAMAGNO_PAGINA } from \"../../componentes/Paginacion.js\";\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from \"../../componentes/Modal.js\";\n\nexport class FuenteAgua extends Component {\n   \n    constructor(props) {\n        super(props);\n        this.state = {\n            usuario: verificarGrupoUsuario(),\n            fuentesAgua : [],\n            zonasFuentes : [],\n            paginaActual : 1,\n            fuenteAguaInicioPaginado : 1,            \n            indiceFuenteAguaSeleccionada : 0,\n            denominacionFuenteAguaSeleccionada : \"\",            \n            mostrarVentanaAgregarModal : false,\n            mostrarVentanaEditarModal : false\n        };\n    }\n\n    listarFuentesAgua = () => {\n        this.setState({ fuenteAguaInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }\n        , () => {\n            promesaListarFuentesAguaPaginado({ inicio : this.state.fuenteAguaInicioPaginado, resultados : TAMAGNO_PAGINA })\n            .then( respuesta => { this.setState({ fuentesAgua : respuesta }) });\n        });\n    }\n\n    listarZonasFuente = () => {\n        promesaListarZonasPorFuentesDeAgua().then( respuesta => {\n            if (respuesta.length > 0) { \n                this.setState({ zonasFuentes : respuesta });\n            }\n        });\n    }\n\n    alterarDenominacionFuenteAgua = (evento) => {\n        this.setState({ \n            denominacionFuenteAguaSeleccionada : evento.target.value\n        });\n    }\n\n    seleccionarFuenteAgua = (indiceFuente, nombreFuente) => {\n        this.setState({\n            indiceFuenteAguaSeleccionada : indiceFuente,\n            denominacionFuenteAguaSeleccionada : nombreFuente,\n            mostrarVentanaEditarModal : !this.state.mostrarVentanaEditarModal\n        });\n    }\n\n    cambiarEstadoFuenteAgua = (evento) => {\n        const estaHabilitado = parseInt(evento.target.value);\n        this.setState({ \n            indiceFuenteAguaSeleccionada: parseInt(evento.target.dataset.fuente)\n        }, () => {\n            const objetoEnviado = {\n                codigo : this.state.indiceFuenteAguaSeleccionada,\n                firma : this.state.usuario.firmaDigital\n            };\n            if (estaHabilitado === 1) {        \n                promesaDeshabilitarFuenteAgua( objetoEnviado ).then( respuesta => { this.listarFuentesAgua();  } );\n            } else {        \n                promesaHabilitarFuenteAgua( objetoEnviado ).then( respuesta => { this.listarFuentesAgua();  });\n            }\n        });\n    }\n\n    controlModalAgregar = () => {\n        this.setState({ \n            mostrarVentanaAgregarModal : !this.state.mostrarVentanaAgregarModal \n        });\n    }\n\n    controlModalEditar = () => {\n        this.setState({\n            mostrarVentanaEditarModal : !this.state.mostrarVentanaEditarModal\n        });\n    }\n\n    agregarFuente = (evento) =>  {\n        evento.preventDefault();\n        const objetoNuevo = {\n            denominacion : document.getElementById('nombreFuente').value,\n            firma : this.state.usuario.firmaDigital\n        };\n         \n        promesaAgregarFuenteAgua( objetoNuevo ).then(_ => {\n            this.setState({ mostrarVentanaAgregarModal:false });\n            this.listarFuentesAgua(); \n        }); \n    }\n    \n    redireccionar = (ruta) => { this.props.history.push(ruta) }\n\n    enviarModificacion = (evento) => {\n        evento.preventDefault();\n        const objetoModificado = {\n            codigo : this.state.indiceFuenteAguaSeleccionada,\n            denominacion : document.getElementById('fuenteModificada').value,\n            firma : this.state.usuario.firmaDigital\n        };\n        promesaModificarDenominacionFuenteAgua(objetoModificado).then (_ => {\n            this.setState({ mostrarVentanaEditarModal: false });\n            this.listarFuentesAgua(); \n        });\n    }\n\n    mostrarOcultarZonas = (codigoData) => {\n        let ventana_ = document.getElementById('zInfo' + codigoData);\n        ventana_.hidden = (ventana_.hidden === true) ? false : true;\n    }\n\n    cambiarPagina = (pagina) => {\n        if(parseInt(pagina) > 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || \"\") }\n        if(pagina <= CANTIDAD_PAGINA){ this.setState({ paginaActual: pagina }, () => this.listarFuentesAgua()) }\n    }\n\n    componentDidMount() {\n        if (this.state.usuario.grupo > 0) {\n            this.setState({ fuenteAguaInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }, () => {\n                this.listarFuentesAgua();\n                this.listarZonasFuente();\n            });\n        }// else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if (this.state.usuario.grupo > 0) {\n            return (\n            <div className=\"contenedor\">\n                <Paginacion\n                    cantidadElementos = {this.state.fuentesAgua.length}\n                    cambiarPagina = {this.cambiarPagina}\n                    paginaActual = {this.state.paginaActual}\n                ></Paginacion><br />\n                <div className=\"centrado\">\n                <table style={{width:\"40%\"}}>\n                    <thead>\n                        <tr>\n                            <th><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar una Nueva Fuente de Agua\" title=\"Registrar/Agregar una Nueva Fuente de Agua\" onClick={ () => this.controlModalAgregar()}/></th>\n                            <th> Denominación/Nombre<br />Fuente de Agua</th>\n                            <th> Zonas </th>\n                        </tr>  \n                    </thead>\n                    <tbody>\n                    {this.state.fuentesAgua.map( (elemento, indice ) => ( \n                        <tr key={indice} className=\"tabla_fila\"> \n                            <td style={{textAlign:'center'}}>\n                                <label className=\"boton_habilitado\">\n                                    <input type=\"checkbox\" onChange={this.cambiarEstadoFuenteAgua} checked={ parseInt(elemento.habilitado) === 1 ? true : false } data-fuente={elemento.codigoFuente} value={ parseInt(elemento.habilitado) === 1 ? 1 : 0 } name={'chkBox'+elemento.codigoFuente} id={'chkBox'+elemento.codigoFuente } title=\"Habilitar/Deshabilitar la Fuente de Agua\" />\n                                    <div className=\"boton_deslizar redondo\"></div>\n                                </label>\n                            </td>\n                            <td onClick={ () => { this.seleccionarFuenteAgua(elemento.codigoFuente, elemento.denominacionFuente )}}>\n                                { elemento.denominacionFuente.toUpperCase() || \"\\u2699\" }\n                                <div style={{marginLeft:'6%'}} id={'zInfo' + elemento.codigoFuente} hidden>\n                                {this.state.zonasFuentes.filter( (pZona) => { return pZona.codigoFuente === parseInt(elemento.codigoFuente) }).map((pZona, nIndice) => (\n                                    <div key={nIndice}>\n                                        <label style={{fontSize:'11pt'}}>{\"Zona \\u00A0\" + numeroArabigoEnRomano(pZona.sector) + (parseInt(pZona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(pZona.subSector)) + (pZona.microSector === '-' ? '':\" \\u2014 \"+ pZona.microSector)}\n                                        </label>\n                                    </div>\n                                ))}\n                                </div>\n                            </td>\n                            <td style={{textAlign:'center',cursor:'pointer'}}>  \n                                <img src=\"/img/lupaVer.png\" alt=\"zona comercial coberturada\" title=\"Ver zonas comerciales coberturas\" onClick={ () => this.mostrarOcultarZonas(elemento.codigoFuente)}/>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                </div>\n\n                <div className=\"centrado\">\n                    {this.state.fuentesAgua.length > 0 ? null : <div style={{width:\"40%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                </div>\n\n                {/* Inicio seccion para --- AGREGAR --- */}\n                <Modal\n                    mostrarModal = {this.state.mostrarVentanaAgregarModal}\n                    controlModal = {this.controlModalAgregar}\n                    tituloModal = {\"Registrar Fuente de Agua\"}\n                >\n                <form noValidate onSubmit={this.agregarFuente} className=\"una_columna\">\n                    <label htmlFor=\"nombreFuente\">Denominación de la Fuente de Agua</label>\n                    <input className=\"cuadro_dato\" type=\"text\" required name=\"nombreFuente\" id=\"nombreFuente\" placeholder=\"Denominación\" />\n                    <div className=\"centrado\">\n                        <button className=\"boton boton_verde\" type=\"submit\">Agregar </button>\n                    </div>\n                </form>\n                </Modal>\n\n                {/* Inicio de seccion para EDITAR */}\n                <Modal\n                    mostrarModal = {this.state.mostrarVentanaEditarModal}\n                    controlModal = {this.controlModalEditar}\n                    tituloModal = {\"Modificar la denominación\"}\n                >\n                <form noValidate onSubmit={this.enviarModificacion} className=\"una_columna\">\n                    <label htmlFor=\"fuenteModificada\">Nueva denominación de la Fuente de Agua</label>\n                    <input className=\"cuadro_dato\" type=\"text\" required name=\"fuenteModificada\" id=\"fuenteModificada\" placeholder=\"Nombre de la fuente de agua\" onChange={this.alterarDenominacionFuenteAgua} value={ this.state.denominacionFuenteAguaSeleccionada } />\n                    <div className=\"centrado\">\n                        <button className=\"boton boton_verde\" type=\"submit\">Actualizar</button>\n                    </div>\n                </form>\n                </Modal>\n            </div>\n            );\n        } else {\n            return ( <UsuarioNoValido /> );\n        }\n    }\n}\n\nexport default FuenteAgua","/*\n-- File:             fuenteZonaDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Servidor NODE JS EXPRESS y Exportar funciones de Fuentes Zona.\n-- Author:           Jorge Muñiz\n-- Create Date:      2020-01-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2020          \n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\nimport { urlServidor } from './funcionesSistema.js';\nconst servidor = urlServidor;\n\n// Lista las Relaciones de Zona Fuentes de Agua para Paginado\nexport function promesaListarFuenteZonaPaginado(objJson) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuentezona/paginado/', {\n            method : 'POST',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta  => resolver(respuesta.json()))\n        .catch( error => rechazar(error));\n    });\n} \n\n// Registra una RELACIÓN entre una fuente de Agua y una ZONA COMERCIAL \nexport function promesaRelacionarFuenteAguaConZona( objJSon ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/fuentezona/', {\n           method : 'POST',\n           body: JSON.stringify(objJSon),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => resolver(respuesta.json()) )\n       .catch( error => rechazar(error) );\n   });\n}\n\n// Cambiar Fuente de Agua a Relacionde Fuente Zona\nexport function promesaCambiarFuenteAguaDeRelacion( objJson ) {\n    return new Promise( (resolver, rechazar) => {\n        fetch(servidor + '/api/fuentezona/', {\n            method : 'PUT',\n            body: JSON.stringify(objJson),\n            headers: new Headers({ \n                'Accept': 'application/json',\n                'Content-type':'application/json'\n            })\n        })\n        .then( respuesta => resolver(respuesta.json()) )\n        .catch( error => rechazar(error) );\n    });\n}\n\n// Habilita una RELACIÓN entre una fuente de Agua y una ZONA COMERCIAL previamente deshabilitada\nexport function promesaEliminarRelacionFuenteAguaZona( objJSon ) {\n   return new Promise( (resolver, rechazar) => {\n       fetch(servidor + '/api/fuentezona/', {\n           method : 'DELETE',\n           body: JSON.stringify(objJSon),\n           headers: new Headers({\n               'Accept': 'application/json',\n               'Content-type':'application/json'\n           })\n       })\n       .then( respuesta => respuesta )\n       .then( datos => { resolver(datos); })\n       .catch((error)=>{ rechazar(error); });\n   });\n}","import React, { Component } from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { promesaListarZonasComponente } from '../../datos/zonaDB.js'; \nimport { promesaListarFuentesAguaParaComponente } from '../../datos/fuenteDB.js';\nimport { promesaListarFuenteZonaPaginado,\n         promesaRelacionarFuenteAguaConZona, \n         promesaCambiarFuenteAguaDeRelacion,\n         promesaEliminarRelacionFuenteAguaZona } from '../../datos/fuenteZonaDB.js';\n\nimport Paginacion, { CANTIDAD_PAGINA, TAMAGNO_PAGINA } from \"../../componentes/Paginacion.js\";\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from \"../../componentes/Modal.js\";\n\nexport class FuenteZona extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            usuario : verificarGrupoUsuario(),\n            zonas : [],\n            fuentesAgua : [],\n            zonasPorFuenteAgua : [],\n            paginaActual : 1,\n            fuenteZonaInicioPaginado : 1, \n            mostrarVentanaAgregarModal : false,\n            alertaTexto : '', \n            alertaColor : '',\n        };\n    }\n\n    controlarVentanaModalAgregar = () => {\n        this.setState({ mostrarVentanaAgregarModal : !this.state.mostrarVentanaAgregarModal });\n    }\n\n    listarZonas = () => {\n        promesaListarZonasComponente().then( respuesta => {\n            this.setState({ zonas : respuesta }); \n        });\n    }\n\n    listarZonaPorFuenteAgua = () => {\n        this.setState({ fuenteZonaInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }\n        , () => {\n            promesaListarFuenteZonaPaginado({ inicio : this.state.fuenteZonaInicioPaginado, resultados : TAMAGNO_PAGINA })\n            .then( respuesta => { this.setState({ zonasPorFuenteAgua : respuesta }) });\n        });\n    }\n\n    listarFuentesDeAgua = () => {\n        promesaListarFuentesAguaParaComponente().then( respuesta => { \n            this.setState({ fuentesAgua : respuesta }); \n        });\n    }\n\n    agregarRelacionZonaFuente = () => {\n        let fuenteSeleccionada = document.getElementById('lFuentes');\n        let zonaSeleccionada = document.getElementById('lZonas');\n        const objetoNuevo = { \n            fuente : fuenteSeleccionada.options[fuenteSeleccionada.selectedIndex].value,\n            zona : zonaSeleccionada.options[zonaSeleccionada.selectedIndex].value, \n            firma : this.state.usuario.firmaDigital\n        };\n        promesaRelacionarFuenteAguaConZona( objetoNuevo ).then( respuesta => { \n            if(!respuesta[0].error){\n                this.setState({ mostrarVentanaAgregarModal : false }, () => this.listarZonaPorFuenteAgua())\n            }else {\n                this.setState({ \n                    alertaTexto : \"Relación Existente\",\n                    alertaColor : \"danger\"\n                }, () => { setTimeout(this.setState.bind(this,{\n                    alertaTexto : '',\n                    alertaColor : ''}),5000) \n                });\n            }\n        });\n    }\n\n    cambiarRelacionZonaFuenteAgua = (evento) => {\n        const objetoEnviado = {\n            codigo : evento.target.dataset.codigo,\n            fuente : evento.target.value,\n            zona : evento.target.dataset.zona,\n            firma : this.state.usuario.firmaDigital\n        };\n        promesaCambiarFuenteAguaDeRelacion( objetoEnviado ).then( respuesta => {\n            if(!respuesta[0].error){ this.listarZonaPorFuenteAgua() }\n        });\n    }\n\n    eliminarRelacionFuenteZona = (evento) => {\n        const removerObjeto = {\n            fuente : evento.target.dataset.fuente,\n            zona : evento.target.dataset.zona,\n            firma : this.state.usuario.firmaDigital\n        };\n        promesaEliminarRelacionFuenteAguaZona( removerObjeto ).then( respuesta => { \n            this.listarZonaPorFuenteAgua(); \n        });\n    }\n\n    cambiarPagina = (pagina) => {\n        if(parseInt(pagina) > 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || \"\") }\n        if(pagina <= CANTIDAD_PAGINA){ this.setState({ paginaActual: pagina }, () => this.listarZonaPorFuenteAgua()) }\n    }\n\n    redireccionar = (ruta) => { this.props.history.push(ruta) }\n\n    componentDidMount = () => {\n        if (this.state.usuario.grupo > 0) { \n            this.setState({ fuenteZonaInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }, () => {\n                this.listarZonas();\n                this.listarFuentesDeAgua();\n                this.listarZonaPorFuenteAgua();\n            });\n        }// else{ this.props.history.push('/') }\n    }\n\n    render() {\n        if (this.state.usuario.grupo > 0) {  \n            return (\n            <div className=\"contenedor\">               \n                <Paginacion\n                    cantidadElementos = {this.state.zonasPorFuenteAgua.length}\n                    cambiarPagina = {this.cambiarPagina}\n                    paginaActual = {this.state.paginaActual}\n                ></Paginacion><br />\n\n                <div className=\"centrado\">\n                <table style={{width:'50%'}}>\n                    <thead>\n                        <tr>\n                            <th><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar una Relación de Zona y Fuente\" title=\"Registrar/Agregar una Relación de Zona y Fuente\" onClick={ () => this.controlarVentanaModalAgregar()}/></th>\n                            <th>Fuente de Agua&nbsp;</th>\n                            <th>Zona Comercial</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.zonasPorFuenteAgua.map( (elemento, indice ) => (\n                        <tr key={indice} className=\"tabla_fila\">\n                            <td style={{textAlign:'center'}}>\n                                <img src=\"/img/borrarRegistro.png\" onClick={this.eliminarRelacionFuenteZona} data-fuente={elemento.codigoFuente} data-zona={elemento.codigoZona} alt=\"Eliminar Registro\" title=\"Elminar la relación entre una Fuente de Agua y una Zona Comercial\"/>  \n                            </td>\n                            <td>\n                                <select className=\"cuadro_dato\" name={'fSel'+elemento.codigoFuente} id={'fSel'+elemento.codigoFuente} value={elemento.codigoFuente} onChange={this.cambiarRelacionZonaFuenteAgua} data-zona={elemento.codigoZona} data-codigo={elemento.codigoFuenteZona}>\n                                {this.state.fuentesAgua.map( (fuente, nfIndice) => (\n                                    <option key={nfIndice} value={fuente.codigoFuente}>{fuente.denominacionFuente}</option>\n                                ))}\n                                </select>\n                            </td>\n                            <td> \n                                { \"Zona \\u00A0\" + numeroArabigoEnRomano(elemento.sector) + (parseInt(elemento.subSector) === 0 ? '' : \" \\u2014 \" + numeroArabigoEnRomano(elemento.subSector)) + (elemento.microSector === '-' ? '' : \" \\u2014 \" + elemento.microSector) } \n                            </td>\n                        </tr>   \n                    ))}\n                    </tbody>\n                </table>             \n                </div>\n                <div className=\"centrado\">\n                    {this.state.zonasPorFuenteAgua.length > 0 ? null : <div style={{width:\"50%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                </div>\n                {/* Inicio seccion para --- AGREGAR --- */}\n                <Modal\n                    mostrarModal = {this.state.mostrarVentanaAgregarModal}\n                    controlModal = {this.controlarVentanaModalAgregar}\n                    tituloModal = {\"Registrar Fuente de Agua/Zona Comercial\"}\n                >\n                <form noValidate onSubmit={this.agregarRelacionZonaFuente} className=\"una_columna\">\n                    { this.state.alertaTexto !==''?( <div color={this.state.alertaColor}>\n                    { this.state.alertaTexto} </div> ): '' }\n                    <label htmlFor=\"lFuentes\">Fuentes de Agua</label>\n                    <select name=\"lFuentes\" id=\"lFuentes\" required>\n                        <option value=\"0\">Seleccione una FUENTE de AGUA</option>\n                        {this.state.fuentesAgua.map( (fuente, fIndice) => (\n                            <option key={fIndice} value={fuente.codigoFuente}>{fuente.denominacionFuente}</option>\n                        ))}\n                    </select>\n                    <label htmlFor=\"lZonas\">Zonas Comerciales</label>\n                    <select name=\"lZonas\" id=\"lZonas\" required>\n                        <option value=\"0\">Seleccione una ZONA COMERCIAL</option>\n                        {this.state.zonas.map ( (zona, zIndice) => (        \n                            <option key={zIndice} value={zona.codigoZona}>\n                                {\"Zona \\u00A0\" + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '' : \" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '' : \" \\u2014 \" + zona.microSector)}\n                            </option>\n                        ))}                    \n                    </select>\n                    <div className=\"centrado\">\n                        <button className=\"boton boton_verde\" type=\"submit\">Agregar</button>\n                    </div>\n                </form>\n                </Modal>\n                {/* Final de seccion para --- AGREGAR --- */}   \n            </div>\n            ); // Final del RETURN\n        } else { return <UsuarioNoValido /> }\n    }\n}\n\nexport default FuenteZona","import React, { Component } from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { promesaModificarZona,\n         promesaListarZonas, \n         promesaAgregarZona, \n         promesaDeshabilitarZona, \n         promesaHabilitarZona,\n         promesaDeshabilitarUnaZonaComoSector,\n         promesaHabilitarUnaZonaComoSector } from '../../datos/zonaDB.js';\n\n// ---- COMPONENTES -----\nimport Paginacion, { CANTIDAD_PAGINA, TAMAGNO_PAGINA } from \"../../componentes/Paginacion.js\";\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport CuadroMensaje from '../../componentes/CuadroMensaje.js';\nimport Modal from '../../componentes/Modal';\nconst zonaSeleccionInicial={codigoZona:0,sector:0,subSector:0,microSector:\"-\",denominacionZona:\"\",esSector:0,tieneConexiones:0,habilitado:0};\n\nexport class Zona extends Component {\n    \n    constructor(props) { \n        super(props);\n        this.state = { \n            usuario : verificarGrupoUsuario(),\n            zonaSeleccion: zonaSeleccionInicial,\n            zonas : [],\n            paginaActual : 1,\n            zonaInicioPaginado : 1,\n            mostrarVentanaModal : false,\n\n            anchoModal: 0, // El ancho que tendra la ventana del Modal expresado en Porcentaje\n            altoModal: 0, // La altura que tendra la ventana del Modal expresado en Porcentaje\n        };\n    }\n\n    listarZonas = () => {\n        this.setState({ zonaInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA }\n        , () => {  \n            promesaListarZonas({ inicio : this.state.zonaInicioPaginado, resultados : TAMAGNO_PAGINA }).then( respuesta => { \n                this.setState({ zonas : respuesta });\n            });\n        });\n    }\n        \n    modificarZona = () => {\n        let zonaModificada = { \n            zona : this.state.zonaSeleccion.codigoZona,\n            sector : document.getElementById('sector').value,\n            subsector : document.getElementById('subSector').value, \n            microsector : document.getElementById('microSector').value,\n            denominacion : document.getElementById('denominacionZona').value,\n            esSector : (document.getElementById('esSector').checked ? 1 : 0),\n            tieneConexiones :  (document.getElementById('tieneConexiones').checked ? 1 : 0),\n            quien: this.state.usuario.firmaDigital\n        }\n        if(zonaModificada.sector !== \"0\"){ promesaModificarZona(zonaModificada).then(respuesta => {\n            if(!respuesta.error){\n                this.listarZonas();\n                this.controlarVentanaModal();\n            }else{ alert(\"No se pudo guardar los datos\") }\n        })} else { alert(\"Ingrese un identificador de Sector\") }\n    }\n\n    agregarZona = () => {\n        const zonaNuevo = {\n            sector : document.getElementById('sector').value,\n            subsector : document.getElementById('subSector').value, \n            microsector : document.getElementById('microSector').value,\n            denominacion : document.getElementById('denominacionZona').value,\n            esSector : (document.getElementById('esSector').checked ? 1 : 0),\n            tieneConexiones :  (document.getElementById('tieneConexiones').checked ? 1 : 0),\n            quien : this.state.usuario.firmaDigital\n        };\n        if(zonaNuevo.sector !== \"0\"){ promesaAgregarZona(zonaNuevo).then(respuesta => {\n            if(!respuesta.error){\n                this.listarZonas();\n                this.controlarVentanaModal();\n            }else{ alert(\"No se pudo registrar\") }\n        })} else { alert(\"Ingrese un identificador de Sector\") }\n    }\n\n    cambiarEstadoZona = (evento) => {\n        const { zonaSeleccion } = this.state;\n        var habilitar = evento.target.checked;\n        zonaSeleccion[\"codigoZona\"] = parseInt(evento.target.dataset.zona)\n        this.setState({ zonaSeleccion }, () => { \n            const objetoEnviado = { zona : this.state.zonaSeleccion.codigoZona,firma : this.state.usuario.firmaDigital };\n            if (!habilitar) { promesaDeshabilitarZona(objetoEnviado).then(_ => this.listarZonas()) } \n            else { promesaHabilitarZona(objetoEnviado).then(_ => this.listarZonas())}\n        });\n    }\n\n    cambiarSiEsSector = (evento) => {\n        const { zonaSeleccion } = this.state;\n        var habilitar = evento.target.checked;\n        zonaSeleccion[\"codigoZona\"] = parseInt(evento.target.dataset.zona)\n        this.setState({ zonaSeleccion }, () => {\n            const objetoEnviadoSector = { zona : this.state.zonaSeleccion.codigoZona,firma : this.state.usuario.firmaDigital };\n            if ( !habilitar) { promesaDeshabilitarUnaZonaComoSector(objetoEnviadoSector).then(_ => this.listarZonas())} \n            else { promesaHabilitarUnaZonaComoSector(objetoEnviadoSector).then(_ => this.listarZonas()) }\n        });\n    }\n\n    seleccionarEditarDenominacionZona = (elemento) => {\n        this.setState({ zonaSeleccion : elemento,  mostrarVentanaModal : true });\n    }\n\n    registrarZona = (evento) => {\n        evento.preventDefault();\n        if(this.state.zonaSeleccion.codigoZona > 0){ this.modificarZona() }\n        else { this.agregarZona() }\n    }\n\n    controlarVentanaModal = () => {\n        if(this.state.mostrarVentanaModal){ this.setState({ zonaSeleccion: zonaSeleccionInicial}) }\n        this.setState({ mostrarVentanaModal : !this.state.mostrarVentanaModal });\n    }\n\n    cambiarPagina = (pagina) => {\n        if(parseInt(pagina) > 0 ){ pagina = parseInt(pagina) }\n        else { pagina = (parseInt(pagina.target.value) || \"\") }\n        if(pagina <= CANTIDAD_PAGINA){ this.setState({ paginaActual: pagina }, () => this.listarZonas()) }\n    }\n  \n    componentDidMount() {\n        if (this.state.usuario.grupo > 0) {\n            this.setState({ zonaInicioPaginado : (parseInt(this.state.paginaActual) - 1) * TAMAGNO_PAGINA },() => {\n                this.listarZonas();\n            });\n        }// else{ this.props.history.push('/') }\n    }\n\n    render() {\n        /* SI ES ADMINISTRADOR O GERENTE */\n        if (this.state.usuario.grupo > 0) {\n            let sectoresTemporales = new Array(30).fill(1).map( (_, i) => i+1 );\n            let numeros = sectoresTemporales.map(numero => { return ( <option key={numero} value={numero}>{numeroArabigoEnRomano(numero)}</option> )});\n            return (\n                <div className=\"contenedor\">\n                    <Paginacion\n                        cantidadElementos = {this.state.zonas.length}\n                        cambiarPagina = {this.cambiarPagina}\n                        paginaActual = {this.state.paginaActual}\n                    ></Paginacion><br />\n                    <div className=\"centrado\">\n                        <table style={{width:\"70%\"}}>\n                            <thead>\n                                <tr>       \n                                    <th><img src=\"/img/agregarRegistro.png\" alt=\"Registrar/Agregar una Nueva Zona\" title=\"Registrar/Agregar una Nueva Zona\" onClick={ () => this.controlarVentanaModal()}/></th>\n                                    <th>Zona Comercial</th>\n                                    <th>Área de Servicio</th>\n                                    <th>Sector</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.zonas.map(elemento => ( \n                                <tr key={elemento.codigoZona} className=\"tabla_fila\">\n                                    <td style={{textAlign:'center'}}>\n                                        <label className=\"boton_habilitado\">\n                                            <input onChange={this.cambiarEstadoZona} checked={ parseInt(elemento.habilitado) === 1 ? true : false } value={ parseInt(elemento.habilitado) === 1 ? 1 : 0 } data-zona={elemento.codigoZona} name={'chkBox'+elemento.codigoZona} id={'chkBox'+elemento.codigoZona} title=\"Habilitar/Deshabilitar la Zona Comercial\" type=\"checkbox\"/>\n                                            <div className=\"boton_deslizar redondo\"></div>\n                                        </label>\n                                    </td>\n                                    <td onClick={() => this.seleccionarEditarDenominacionZona(elemento)}>\n                                        {\"Zona \\u00A0\" + numeroArabigoEnRomano(elemento.sector) + (parseInt(elemento.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(elemento.subSector)) +   (elemento.microSector === '-' ? '':\" \\u2014 \"+elemento.microSector)} \n                                    </td>\n                                    <td onClick={() => this.seleccionarEditarDenominacionZona(elemento)}> \n                                        {elemento.denominacionZona || \"\\u2699\" }\n                                    </td>\n                                    <td style={{textAlign:'center'}}> \n                                        <input type=\"checkbox\" onChange={this.cambiarSiEsSector} checked={ parseInt(elemento.esSector) === 1 ? true : false } value={ parseInt(elemento.esSector) === 1 ? 1 : 0 } data-zona={elemento.codigoZona} name={'chkSS'+elemento.codigoZona} id={'chkSS'+elemento.codigoZona} title=\"Habilitar/Deshabilitar Si la Zona Comercial debe SER un SECTOR\" />\n                                    </td>   \n                                </tr> \n                            ))}\n                            </tbody>      \n                        </table>\n                    </div>\n                    <div className=\"centrado\">\n                        {this.state.zonas.length > 0 ? null : <div style={{width:\"70%\"}}><CuadroMensaje tipoCuadro={\"basico\"}>No EXISTEN datos para mostrar</CuadroMensaje></div>  }\n                    </div>\n                    <Modal\n                        mostrarModal = {this.state.mostrarVentanaModal}\n                        controlModal = {this.controlarVentanaModal}\n                        tituloModal = {\"Datos de Zona Comercial\"}\n                    >\n                    <form noValidate onSubmit={this.registrarZona} className=\"una_columna\">\n                        <label htmlFor=\"zona\">{'Datos de Sector'}&nbsp;</label>\n                        <div htmlFor=\"zona\">\n                            <select className=\"cuadro_dato\" required name=\"sector\" id=\"sector\" defaultValue={this.state.zonaSeleccion.sector}>\n                                <option value=\"0\">Sector</option>{ numeros }\n                            </select>\n                            &nbsp;{'\\u2014'}&nbsp; \n                            <select className=\"cuadro_dato\" name=\"subSector\" id=\"subSector\" defaultValue={this.state.zonaSeleccion.subSector}>\n                                <option value=\"0\">Sub-Sector</option>{ numeros }\n                            </select>\n                            &nbsp;{'\\u2014'}&nbsp; \n                            <select className=\"cuadro_dato\" name=\"microSector\" id=\"microSector\" defaultValue={this.state.zonaSeleccion.microSector}>\n                                <option value=\"-\">Micro-Sector</option>\n                                <option value=\"A\">A</option>\n                                <option value=\"B\">B</option>\n                                <option value=\"C\">C</option>\n                                <option value=\"D\">D</option>\n                                <option value=\"E\">E</option>\n                            </select>\n                        </div>\n                        <label htmlFor=\"esSector\">Comportarse como un SECTOR &nbsp;\n                            <input type=\"checkbox\" name=\"esSector\" id=\"esSector\" \n                                defaultChecked = { this.state.zonaSeleccion.esSector || 0}\n                            />\n                        </label>\n                        <label htmlFor=\"tieneConexiones\">Habilitar para registrar Conexiones &nbsp;\n                            <input type=\"checkbox\" name=\"tieneConexiones\" id=\"tieneConexiones\" \n                                defaultChecked = { this.state.zonaSeleccion.tieneConexiones || 0}\n                            />\n                        </label>\n                        <label htmlFor=\"denominacionZona\">Nombre/Denominación de Zona Comercial</label>\n                        <input className=\"cuadro_dato\" type=\"text\" name=\"denominacionZona\" id=\"denominacionZona\" maxLength=\"50\" placeholder=\"Nombre de la Zona Comercial\" \n                            defaultValue={this.state.zonaSeleccion.denominacionZona}\n                        />\n                        <div></div>\n                        <div className=\"centrado\">\n                            <button className=\"boton boton_verde\" type=\"submit\">Registrar</button>\n                        </div>\n                    </form>                 \n                    </Modal>\n                </div>\n            ); // final del RETURN\n        } else { return <UsuarioNoValido /> }  \n    }\n}\n\nexport default Zona","import React, { Component } from 'react';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\n\nexport class Mapa extends Component {\n  render() {\n    const usuarioPermitido = verificarGrupoUsuario(); \n    if (usuarioPermitido.grupo > 0) { return (\n      <div className=\"centrado\">\n        <img style={{width:\"80%\"}} src=\"/img/provCusco.jpg\" alt=\"Cusco\" />\n      </div>\n    )} else { return ( <UsuarioNoValido /> ) }  \n  }\n}\nexport default Mapa","import React from 'react';\nimport Modal from \"./Modal.js\";\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport { exportarArchivoPdf, exportarArchivoTexto, obtenerFecha } from '../datos/funcionesSistema';\n\nconst generarArchivoPdf = ( documento ) => {\n    const html = document.getElementById(documento.idTabla);\n    if(documento){ exportarArchivoPdf(`${html.outerHTML}`, documento.orientacion, documento.nombreArchivo + \"-\" + obtenerFecha() + \".pdf\" ) }\n}\n\nconst generarArchivoTxt = ( documento ) => {\n    if(documento){ exportarArchivoTexto(documento.contenido, documento.nombreArchivo + \"-\" + obtenerFecha() + \".txt\") }\n}\n\nconst DescargaArchivo = ({ titulo,mensaje,mostrarDescargaArchivo,controlDescargaArchivo,documento,tipoReporte }) => {\n    if(!mostrarDescargaArchivo){ return null }\n    else{ return (\n    <Modal\n        mostrarModal = {mostrarDescargaArchivo}\n        controlModal = {controlDescargaArchivo}\n        tituloModal = {titulo || \"Tipo de Descagar del Archivo\"}\n    >\n    <div className=\"una_columna\">\n        <div className=\"centrado\">{mensaje}</div>\n        <div className={tipoReporte !== \"8\" ? \"dos_columnas\":\"tres_columnas\"}>\n            <div className=\"centrado\">\n                <img style={{cursor:\"pointer\"}} src=\"/img/pdf.png\" alt=\"Descargar Archivo Pdf\" title=\"Descargar Archivo Pdf\" onClick={()=>generarArchivoPdf(documento)}/>\n            </div>\n            <div className=\"centrado\">\n                <ReactHTMLTableToExcel\n                    className = \"boton_excel_descarga\"\n                    table = {documento.idTabla}\n                    filename = {documento.nombreArchivo}\n                    sheet = \"hoja 1\"\n                    buttonText = \" \"\n                />\n                <img src=\"/img/excel.png\" alt=\"Descargar Archivo Excel\" title=\"Descargar Archivo Excel\"/> \n            </div>\n            <div hidden={tipoReporte !== \"8\"}>\n                <div className=\"centrado\">\n                <img style={{cursor:\"pointer\"}} src=\"/img/txt.png\" alt=\"Descargar Archivo Txt\" title=\"Descargar Archivo Txt\" onClick={()=>generarArchivoTxt(documento)}/>\n                </div>\n            </div>\n        </div>\n        <div className=\"centrado\">\n            <button className=\"boton boton_rojo\" onClick={()=>controlDescargaArchivo()}>Cancelar</button>\n        </div>\n    </div>\n    </Modal>\n    )}\n}\n\nexport default DescargaArchivo;","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud } from '../../datos/funcionesSistema';\n\nconst TablaReporteContinuidadEncuesta = ( \n    { mostrarReporte, actividadContinuidades, zonas, tiposAltitud, zonaReporte, altitudReporte, tipoReporteContinuidad } ) => {\n        \n    if(mostrarReporte && tipoReporteContinuidad === \"1\"){ \n        return (\n        <div id=\"reporteContinuidadEncuesta\">\n            <div style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id=\"tablaReporteContinuidadEncuesta\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Zona&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Urbanización - Calle&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Mañanas<br />DE&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Mañanas<br />A&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Tardes<br />DE&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Tardes<br />A&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Total&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Promedio<br />Ponderado&nbsp;</th>\n                </tr>\n                </thead>\n                { \n                    zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {                   \n                        const cantidadRegistrosZona = actividadContinuidades.filter(actividad =>\n                            actividad.codigoZonaReporte === zona.codigoZona\n                        ).length;\n                        if(cantidadRegistrosZona > 0){\n                            return(\n                                <tbody key={zona.codigoZona}>\n                                    <tr>\n                                        <td rowSpan={cantidadRegistrosZona + 4} style={{border:'1px solid black',textAlign:'center'}}>\n                                        { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                        </td>\n                                    </tr>\n                                    { \n                                        tiposAltitud\n                                        .filter(altitud => {\n                                            if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                                            else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                                        })\n                                        .map(altitud  => {\n                                            const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                                            const cantidadRegistrosZonaAltitud = actividadContinuidades.filter(actividad => {\n                                                return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                                            }).length;\n                                            if(cantidadRegistrosZonaAltitud > 0){\n                                                return(\n                                                    <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                                    <tr>\n                                                        <td rowSpan={cantidadRegistrosZonaAltitud + 1} style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                                    </tr>\n                                                    {\n                                                    actividadContinuidades.filter( actividad => {\n                                                        return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                                                    }).map((actividad,indice) => {\n                                                        return (\n                                                        <tr key={indice}>\n                                                            <td style={{border: '1px solid black', textAlign:'left', paddingLeft:'8px'}}>\n                                                                {actividad.denominacionLote}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {actividad.r1HoraDe}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {actividad.r1HoraA}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {actividad.r2HoraDe}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {actividad.r2HoraA}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {actividad.horaServicio}\n                                                            </td>\n                                                            { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}>{ (actividad.promedioHora || \"00:00\").substring(0,5)}</td> : null }\n                                                        </tr>\n                                                        )\n                                                    }) \n                                                    }\n                                                    </React.Fragment>\n                                                )\n                                            }else { return null} \n                                        })\n                                    }\n                                </tbody>\n                            )\n                        } else{ return  null }               \n                    })\n                }\n            </table>\n            </div>\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteContinuidadEncuesta\n","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud } from '../../datos/funcionesSistema';\n\nconst TablaReporteContinuidadPonderado = ( \n    { mostrarReporte, promedioPonderados, zonas, tiposAltitud, zonaReporte, altitudReporte, tipoReporteContinuidad } ) => {\n        \n    if(mostrarReporte  && tipoReporteContinuidad === \"2\"){\n        var promedioConexionesReporte = 0;\n        var promedioProductoReporte = 0;\n        return (\n        <div id=\"reporteContinuidadPonderado\">\n            <div style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id=\"tablaReporteContinuidadPonderado\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Zona&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;prom&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Hora&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Minuto&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Representa&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONT. PROM&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEX. ACT.&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>PRODUCTO&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CONT POND. <br/>SECTOR &nbsp;</th>\n                </tr>\n                </thead>\n                { \n                    zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {\n                        var promedioConexionesZona = 0;\n                        var promedioProductoZona = 0;\n                        return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td rowSpan={5} style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                </tr>\n                                { \n                                    tiposAltitud\n                                    .filter(altitud => {\n                                        if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                                        else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                                    })\n                                    .map((altitud,indiceAltitud)  => {\n                                        const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                                        return(\n                                            <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                            <tr>\n                                                <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                            {\n                                            promedioPonderados.filter( promedio => {\n                                                return promedio.codigoZona === zona.codigoZona && promedio.tipoAltitud === tipoAltitud;\n                                            }).map(promedio => {\n\n                                                promedioConexionesZona = promedioConexionesZona + promedio.conexionesActivas;\n                                                promedioConexionesReporte = promedioConexionesReporte + promedio.conexionesActivas;\n                                                \n                                                promedioProductoZona = promedioProductoZona + promedio.producto;\n                                                promedioProductoReporte = promedioProductoReporte + promedio.producto;\n\n                                                return (\n                                                <React.Fragment key={zona.codigoZona+\"-\"+tipoAltitud}>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {(promedio.promedioHora || \"-\").substring(0,5)}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {(promedio.hora || \"-\")}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {(promedio.minuto || \"-\")}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {(promedio.representa || \"-\")}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {(promedio.contProm || \"-\")}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {(promedio.conexionesActivas || \"-\")}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {(promedio.producto || \"-\")}\n                                                    </td>\n                                                    <td style={{ borderRight : '1px solid black'}}>&nbsp;</td>\n                                                </React.Fragment>\n                                                )\n                                            })\n                                            }\n                                            </tr>\n                                        </React.Fragment>\n                                        )\n                                    })\n                                }\n                                <tr>\n                                    <td colSpan={6} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO</td>\n                                    <td style={{border:'1px solid black', textAlign:'center'}}>{ (promedioConexionesZona || 0).toFixed(0)}</td>\n                                    <td style={{border:'1px solid black', textAlign:'center'}}>{ (promedioProductoZona || 0).toFixed(4)}</td>\n                                    <td style={{border:'1px solid black', textAlign:'center'}}>{ ((promedioProductoZona / promedioConexionesZona) || 0).toFixed(2)}</td>\n                                </tr>\n                            </tbody>\n                        )             \n                    })\n                    \n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={7} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO PONDERADO</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{(promedioConexionesReporte).toFixed(0)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{(promedioProductoReporte).toFixed(5)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}></td>\n                    </tr>\n                    <tr >\n                        <td colSpan={9} style={{border:'1px solid black', textAlign:'center'}}>CONTINUIDAD PROMEDIO PONDERADO</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{ (promedioProductoReporte/promedioConexionesReporte).toFixed(4) }</td>                    \n                    </tr>\n                    <tr>\n                        <td colSpan={9} style={{border:'1px solid black', textAlign:'center'}}>INDICE DE CUMPLIMIENTO INDIVIDUAL (ICI) CONTINUIDAD</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{(((promedioProductoReporte/promedioConexionesReporte)/20)*100).toFixed(0)}</td>\n                    </tr>\n                </tbody>\n            </table>\n            </div>\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteContinuidadPonderado\n","import React from 'react';\nimport { numeroArabigoEnRomano, convertirNumeroAHora } from '../../datos/funcionesSistema';\n\nconst TablaReporteContinuidadServicio = ( \n    { mostrarReporte, promedioPonderados, zonas, zonaReporte, tipoReporteContinuidad} ) => {\n        \n    if(mostrarReporte  && tipoReporteContinuidad === \"3\"){\n        var promedioTotalConexiones = 0;\n        var promedioPesoPonderado = 0;\n        var promedioGeneralHora = 0;\n        return (\n        <div id = \"reporteContinuidadServicio\">\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id = \"tablaReporteContinuidadServicio\">\n                <thead>\n                    <tr>\n                        <th colSpan={5} style={{border:'1px solid black',textAlign:'center'}}>&nbsp;SEGÚN PROCESO OPRATIVO&nbsp;</th>\n                    </tr>\n                    <tr>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;ZONA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;AREA DE SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;NUMERO DE<br />CONEXIONES&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;HORAS&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PESO(1)<br /> PONDERADO&nbsp;</th>\n                    </tr>\n                </thead>\n                { \n                    zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {\n                        var promedioConexionesZona = 0, promedioProductoZona = 0, promedioHoraZona = 0, promedioPesoPonderadoZona = 0;       \n                        \n                        promedioPonderados.map(promedio => {\n                            if(zona.codigoZona === promedio.codigoZona){\n                                promedioConexionesZona = promedioConexionesZona + promedio.conexionesActivas;\n                                promedioTotalConexiones = promedioTotalConexiones + promedio.conexionesActivas;\n                                promedioProductoZona = promedioProductoZona + promedio.producto;\n                            }\n                            return 0;\n                        });\n                        promedioHoraZona = parseFloat(promedioProductoZona / promedioConexionesZona).toFixed(2);\n                        promedioHoraZona = promedioHoraZona === \"NaN\" ? 0 : promedioHoraZona;\n                        promedioPesoPonderadoZona = parseFloat(promedioHoraZona * promedioConexionesZona).toFixed(2);\n                        promedioPesoPonderado = promedioPesoPonderado + parseFloat(promedioPesoPonderadoZona);\n                        promedioGeneralHora = promedioPesoPonderado / promedioTotalConexiones;\n                        return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                    <td style={{border: '1px solid black'}}> {zona.denominacionZona} </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> { promedioConexionesZona } </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> { promedioHoraZona } </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> { promedioPesoPonderadoZona } </td>                                        \n                                </tr>\n                            </tbody>\n                        )              \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{promedioTotalConexiones}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}></td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioPesoPonderado.toFixed() }</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>&nbsp; </td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>CONTINUIDAD</td>\n                    </tr>\n                    <tr>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO GENERAL</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioGeneralHora.toFixed(2) } &nbsp; (Horas)</td>\n                    </tr>\n                    <tr>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO GENERAL</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{ convertirNumeroAHora(promedioGeneralHora,\"hh:mm:ss\")} &nbsp; (Hr:Min:Seg)</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <br />\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteContinuidadServicio\n","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud, convertirNumeroAHora } from '../../datos/funcionesSistema';\n\nconst TablaReporteContinuidadMenor6Hrs=({mostrarReporte,tipoReporteContinuidad,actividadContinuidades,promedioPonderados,zonas,tiposAltitud,zonaReporte,altitudReporte})=>{\n    if(mostrarReporte  && tipoReporteContinuidad === \"4\"){\n        var sumaConexionesActivas = 0;\n        var sumaConexionesMenor6Hrs = 0;\n        var sumaContConex = 0;\n\n        function sumarConexionesMenor6Hrs (continuidadMenor6Hrs, conexionesMenor6Hrs){\n            sumaContConex = sumaContConex + (continuidadMenor6Hrs / 24 * conexionesMenor6Hrs);\n            sumaConexionesMenor6Hrs = sumaConexionesMenor6Hrs + conexionesMenor6Hrs;\n        }\n\n        return (\n        <div id=\"reporteContinuidadMenor6Hrs\">\n            <div className=\"centrado\">\n            <table id=\"tablaReporteContinuidadMenor6Hrs\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Zona&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Urbanización - Calle&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Horas<br/>Servicio</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CANT.</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones<br/>Activas</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones<br/>Menor 6 Hrs</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Continuidad<br/>Menor 6 Hrs</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CONTx CONEX</th>\n                </tr>\n                </thead>\n                {zonas.filter(zona => {\n                    if(zonaReporte === \"%\" ){ return zona.esSector }\n                    else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                }).map(zona => {\n                    const cantidadRegistrosZona = actividadContinuidades.filter(actividad=>actividad.codigoZonaReporte===zona.codigoZona).length;\n                    var conexionesActivas = 0;\n                    var conexionesMenor6hrs = 0;\n                    var cant = 0;\n\n                    if(cantidadRegistrosZona > 0){ return (\n                    <tbody key={zona.codigoZona}>\n                        <tr>\n                            <td rowSpan={cantidadRegistrosZona + 4} style={{border:'1px solid black',textAlign:'center'}}>\n                            { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                            </td>\n                        </tr>\n                        {tiposAltitud.filter(altitud => {\n                            if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                            else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                        }).map(altitud  => {\n\n                            var horasAcumulado = 0;\n                            var cantAcumulado = 0;\n                            var continuidadMenor6Hrs = 0;\n\n                            const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                            const cantidadRegistrosZonaAltitud = actividadContinuidades.filter(actividad => {\n                                return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                            }).length;\n                            \n                            promedioPonderados.filter(promedio => promedio.codigoZona === zona.codigoZona && promedio.tipoAltitud ===tipoAltitud)\n                            .forEach(promedio => conexionesActivas = promedio.conexionesActivas);\n                            sumaConexionesActivas = sumaConexionesActivas + conexionesActivas;\n                            \n                            if(cantidadRegistrosZonaAltitud > 0){\n                                return(\n                                    <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                    <tr>\n                                        <td rowSpan={cantidadRegistrosZonaAltitud + 1} style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                    </tr>\n                                    {actividadContinuidades.filter(actividad=>{return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud})\n                                    .forEach(actividad => {\n                                        var hora = parseInt(actividad.horaServicio.substring(0,2));\n                                        var minuto = parseInt(((actividad.horaServicio.substring(3,5)*100)/60).toFixed(2));\n                                        var totalHora = hora + (minuto/100);\n                                        cant = totalHora < 6 ? 1 : 0;\n                                        cantAcumulado = cant + cantAcumulado;\n                                        conexionesMenor6hrs = conexionesActivas / cantidadRegistrosZonaAltitud * cantAcumulado; // CONEXIONES\n                                        if(conexionesMenor6hrs !== 0){horasAcumulado = horasAcumulado + (cant === 1 ? totalHora : 0)}\n                                        continuidadMenor6Hrs = ((horasAcumulado/cantAcumulado)||0).toFixed(2); // CONTINUIDAD\n                                    })}\n                                    {actividadContinuidades.filter(actividad=>{return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud})\n                                    .map((actividad,indice) => {\n                                        return (\n                                        <tr key={indice}>\n                                            <td style={{border: '1px solid black', textAlign:'left', paddingLeft:'8px'}}>\n                                                {actividad.denominacionLote}\n                                            </td>\n                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                {actividad.horaServicio}\n                                            </td>\n                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                { cant }\n                                            </td>\n                                            { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesActivas } </td> : null }\n                                            { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesMenor6hrs.toFixed(2) } </td> : null }\n                                            { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { convertirNumeroAHora(continuidadMenor6Hrs,\"hh:mm\")} </td> : null }\n                                            { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { (continuidadMenor6Hrs / 24 * conexionesMenor6hrs).toFixed(2)} </td> : null }\n                                        </tr>\n                                        )\n                                    })}\n                                    {sumarConexionesMenor6Hrs(continuidadMenor6Hrs, conexionesMenor6hrs)}\n                                    </React.Fragment>\n                                )\n                            }else { return null} \n                        })}\n                    </tbody>)\n                    } else{ return  null }               \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>SUMATORIA</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesActivas}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesMenor6Hrs.toFixed(2)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaContConex.toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Continuidad Promedio Menor a 6 Horas</td>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>{ convertirNumeroAHora((sumaContConex/sumaConexionesMenor6Hrs)*24,\"hh:mm\")}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Porcentaje de Usuarios con Continuidad menor a 6 Horas</td>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>{((sumaConexionesMenor6Hrs/sumaConexionesActivas)*100).toFixed(2)} %</td>\n                    </tr>\n                </tbody>\n            </table>\n            </div>\n        </div>\n    )} else { return null}\n}\nexport default TablaReporteContinuidadMenor6Hrs","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud, convertirNumeroAHora } from '../../datos/funcionesSistema';\nconst TablaReporteContinuidadMenor18Hrs = ({mostrarReporte,tipoReporteContinuidad,actividadContinuidades,promedioPonderados,zonas,tiposAltitud,zonaReporte,altitudReporte})=>{\n    var sumaConexionesActivas = 0;\n    var sumaConexionesMenor18Hrs = 0;\n    var sumaContConex = 0;\n    \n    function sumarConexionesMenor18Hrs (continuidadMenor18Hrs, conexionesMenor18Hrs){\n        sumaContConex = sumaContConex + (continuidadMenor18Hrs / 24 * conexionesMenor18Hrs);\n        sumaConexionesMenor18Hrs = sumaConexionesMenor18Hrs + conexionesMenor18Hrs;\n    }\n\n    if(mostrarReporte  && tipoReporteContinuidad === \"6\"){ \n    return (\n    <div id=\"reporteContinuidadMenor18Hrs\">\n        <div className=\"centrado\">\n            <table id=\"tablaReporteContinuidadMenor18Hrs\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Zona&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Urbanización - Calle&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Horas<br/>Servicio</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CANT.</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones<br/>Activas</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones<br/>Menor 18 Hrs</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Continuidad<br/>Menor 18 Hrs</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CONTx CONEX</th>\n                </tr>\n                </thead>\n                {(zonas||[]).filter(zona => {\n                    if(zonaReporte === \"%\" ){ return zona.esSector }\n                    else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                }).map(zona => {\n                    var conexionesActivas = 0;\n                    var cant = 0;\n                    var conexionesMenor18hrs = 0;\n\n                    const cantidadRegistrosZona = (actividadContinuidades||[]).filter(actividad =>\n                        actividad.codigoZonaReporte === zona.codigoZona).length;\n                        if(cantidadRegistrosZona > 0){\n                            return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td rowSpan={cantidadRegistrosZona + 4} style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                </tr>\n                                {(tiposAltitud||[]).filter(altitud => {\n                                    if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                                    else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                                }).map(altitud  => {\n                                    var horasAcumulado = 0;\n                                    var cantAcumulado = 0;\n                                    var continuidadMenor18Hrs = 0;\n\n                                    const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                                    const cantidadRegistrosZonaAltitud = actividadContinuidades.filter(actividad => {\n                                        return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                                    }).length;\n                                    \n                                    (promedioPonderados||[]).filter(promedio => promedio.codigoZona === zona.codigoZona && promedio.tipoAltitud ===tipoAltitud)\n                                    .forEach(promedio => conexionesActivas = promedio.conexionesActivas);\n                                    sumaConexionesActivas = sumaConexionesActivas + conexionesActivas;\n                                    if(cantidadRegistrosZonaAltitud > 0){\n                                        return(\n                                            <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                            <tr>\n                                                <td rowSpan={cantidadRegistrosZonaAltitud + 1} style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                            </tr>\n                                            {(actividadContinuidades||[]).filter(actividad=>{return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud})\n                                            .forEach(actividad => {\n                                                var hora = parseInt(actividad.horaServicio.substring(0,2));\n                                                var minuto = parseInt(((actividad.horaServicio.substring(3,5)*100)/60).toFixed(2));\n                                                var totalHora = hora + (minuto/100);\n                                                cant = totalHora < 18 ? 1 : 0;\n                                                cantAcumulado = cant + cantAcumulado;\n                                                conexionesMenor18hrs = conexionesActivas / cantidadRegistrosZonaAltitud * cantAcumulado; // CONEXIONES\n                                                continuidadMenor18Hrs = ((horasAcumulado/cantAcumulado)||0).toFixed(2);\n                                                if(conexionesMenor18hrs !== 0){horasAcumulado = horasAcumulado + (cant === 1 ? totalHora : 0)}\n                                            })}\n                                            {(actividadContinuidades||[]).filter(actividad=>{return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud})\n                                            .map((actividad,indice) => {\n                                                return (\n                                                <tr key={indice}>\n                                                    <td style={{border: '1px solid black', textAlign:'left', paddingLeft:'8px'}}>\n                                                        {actividad.denominacionLote}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        {actividad.horaServicio}\n                                                    </td>\n                                                    <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                        { cant }\n                                                    </td>\n                                                    { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesActivas } </td> : null }\n                                                    { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesMenor18hrs.toFixed(2) } </td> : null }\n                                                    { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { convertirNumeroAHora(continuidadMenor18Hrs,\"hh:mm\")} </td> : null }\n                                                    { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { (continuidadMenor18Hrs / 24 * conexionesMenor18hrs).toFixed(2)} </td> : null }\n                                                </tr>\n                                                )\n                                            })}\n                                            {sumarConexionesMenor18Hrs(continuidadMenor18Hrs, conexionesMenor18hrs)}\n                                            </React.Fragment>\n                                        )\n                                    }else { return null} \n                                })}\n                            </tbody>)\n                        } else{ return  null }               \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>SUMATORIA</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesActivas}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesMenor18Hrs.toFixed(2)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaContConex.toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Continuidad Promedio Menor a 6 Horas</td>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>{ convertirNumeroAHora((sumaContConex/sumaConexionesMenor18Hrs)*24,\"hh:mm\")}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Porcentaje de Usuarios con Continuidad menor a 6 Horas</td>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>{((sumaConexionesMenor18Hrs/sumaConexionesActivas)*100).toFixed(2)} %</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    )} else { return null}\n}\nexport default TablaReporteContinuidadMenor18Hrs","import React from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\n\nconst TablaReporteResumenContinuidad6Hrs=({mostrarReporte,tipoReporteContinuidad,zonas,zonaReporte})=>{\n    if(mostrarReporte  && tipoReporteContinuidad === \"5\"){\n        return (\n        <div id = \"reporteResumenContinuidad6Hrs\">\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id = \"tablaReporteResumenContinuidad6Hrs\">\n                <thead>\n                    <tr>\n                        <th colSpan={5} style={{border:'1px solid black',textAlign:'center'}}>&nbsp;SECTORES DE DISTRIBUCIÓN CON CONTINUIDAD MENOR A 06 HRS&nbsp;</th>\n                    </tr>\n                    <tr>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;ZONA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;AREA DE SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PROMEDIO HORAS<br/>Servicio&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEXIONES CON SERVICIO<br />MENOR A 6Hrs&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;POBLACION&nbsp;</th>\n                    </tr>\n                </thead>\n                {zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {     \n                        return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                    <td style={{border: '1px solid black'}}> {zona.denominacionZona} </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 04:46 </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 1302 </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 7436 </td>                                        \n                                </tr>\n                            </tbody>\n                        )              \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>TOTAL</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}></td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>4961</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>28325</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={3} style={{border:'1px solid black', textAlign:'center'}}>TOTAL USUARIOS</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>86135</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={3} style={{border:'1px solid black', textAlign:'center'}}>Porcentaje de Usuarios con Continuidad menor a 6 horas</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>5.76%</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <br />\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteResumenContinuidad6Hrs\n","import React from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\n\nconst TablaReporteResumenContinuidad18Hrs=({mostrarReporte,tipoReporteContinuidad,zonas,zonaReporte})=>{\n    if(mostrarReporte  && tipoReporteContinuidad === \"7\"){\n        return (\n        <div id = \"reporteResumenContinuidad18Hrs\">\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id = \"tablaReporteResumenContinuidad18Hrs\">\n                <thead>\n                    <tr>\n                        <th colSpan={5} style={{border:'1px solid black',textAlign:'center'}}>&nbsp;SECTORES DE DISTRIBUCIÓN CON CONTINUIDAD MENOR A 06 HRS&nbsp;</th>\n                    </tr>\n                    <tr>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;ZONA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;AREA DE SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PROMEDIO HORAS<br/>Servicio&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEXIONES CON SERVICIO<br />MENOR A 6Hrs&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;POBLACION&nbsp;</th>\n                    </tr>\n                </thead>\n                {zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {     \n                        return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                    <td style={{border: '1px solid black'}}> {zona.denominacionZona} </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 04:46 </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 1302 </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 7436 </td>                                        \n                                </tr>\n                            </tbody>\n                        )              \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>TOTAL</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}></td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>4961</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>28325</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={3} style={{border:'1px solid black', textAlign:'center'}}>TOTAL USUARIOS</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>86135</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={3} style={{border:'1px solid black', textAlign:'center'}}>Porcentaje de Usuarios con Continuidad menor a 6 horas</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>5.76%</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <br />\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteResumenContinuidad18Hrs\n","import React from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\n\nconst TablaReporteResumenContinuidad=({mostrarReporte,tipoReporteContinuidad,zonas,zonaReporte})=>{\n    if(mostrarReporte  && tipoReporteContinuidad === \"8\"){\n        return (\n        <div id = \"reporteResumenContinuidad\">\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id = \"tablaReporteResumenContinuidad\">\n                <thead>\n                    <tr>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;DESCRIPCIÓN ZONA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;SECTOR&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CODF&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;FUENTE&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEX&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;HORA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;ESTADO&nbsp;</th>\n\n                    </tr>\n                </thead>\n                {zonas.filter(zona => { return zona.tieneConexiones }).map(zona => {  \n                return(\n                <tbody key={zona.codigoZona}>\n                    <tr>\n                        <td style={{border:'1px solid black',textAlign:'center'}}>\n                        { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                        </td>\n                        <td style={{border: '1px solid black', textAlign:'center'}}> 1 </td>\n                        <td style={{border: '1px solid black', textAlign:'center'}}> 1 </td>\n                        <td style={{border: '1px solid black', textAlign:'center'}}> KORKOR </td>     \n                        <td style={{border: '1px solid black', textAlign:'center'}}> 1109 </td>     \n                        <td style={{border: '1px solid black', textAlign:'center'}}> 06:40 </td>     \n                        <td style={{border: '1px solid black', textAlign:'center'}}> 1 </td>     \n                    </tr>\n                </tbody>)              \n                })}\n            </table>\n        </div>\n        <br />\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteResumenContinuidad\n","\n/*\n-- File:             reporteDB.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Consumir API de Server NODE JS EXPRESS y Exportar funciones de Reporte.\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\n//import servidor from '../ServerDatos.js'; // Obtener IP de SERVIDOR NODE JS\n\nimport { urlServidor } from './funcionesSistema.js';\nvar Url = urlServidor + '/reporte/';\n\n// DATOS DE ENCUENTA DE CONTINUIDAD PARA REPORTE\nexport function reporteEncuestaContinuidad(busqueda){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url + \"continuidad\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => { resolver(respuesta.json()) }) // Enviar Respuesta\n        .catch(error => { rechazar(error) }); // Enviar Error\n    });\n}\n\n// DATOS DE ENCUENTA DE PRESIONES PARA REPORTE\nexport function reporteEncuestaPresion(busqueda){\n    return new Promise((resolver,rechazar)=>{\n        fetch(Url + \"presion\",{ // Fetch para consumir API de SERVER NODE JS\n            method:'POST',\n            body: JSON.stringify(busqueda),\n            headers: new Headers({ 'Content-type':'application/json' })\n        })\n        .then(respuesta => { resolver(respuesta.json()) }) // Enviar Respuesta\n        .catch(error => { rechazar(error) }); // Enviar Error\n    });\n}\n","import React, {Component} from 'react';\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport ModalDescargarArchivo from '../../componentes/DescargaArchivo.js';\nimport TablaReporteEncuesta from './TablaReporteEncuesta.js';\nimport TablaReportePonderado from './TablaReportePonderado.js';\nimport TablaReporteSevicio from './TablaReporteServicio.js';\nimport TablaRerporte6Hr from './TablaReporte6Hr.js';\nimport TablaRerporte18Hr from './TablaReporte18Hr.js';\nimport TablaReporteResumen6Hrs from  './TablaReporteResumen6Hrs.js';\nimport TablaReporteResumen18Hrs from  './TablaReporteResumen18Hrs.js';\nimport TablaReporteResumen from './TablaReporteResumen.js';\n\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { reporteEncuestaContinuidad } from '../../datos/reporteDB.js';\nimport { totalHoraZonaAltitudContinuidad } from '../../datos/continuidadDB.js';\nimport { promesaListarZonasComponente} from '../../datos/zonaDB.js';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud } from '../../datos/funcionesSistema';\n\nvar mesActual = parseInt(new Date().getMonth()) + 1;\nvar agnoActual = parseInt(new Date().getFullYear());\n\nconst estadoInicial = {\n    usuario : verificarGrupoUsuario(),\n    actividadContinuidades : [], // Lista de actividades de Continuidad\n    promedioPonderados : [], // Lista de Promedios Ponderados\n\n    zonas : [], // Lista de Zonas\n\n    zonaReporte : \"%\",\n    urbanoReporte : \"%\",\n    altitudReporte : \"%\",\n    mesReporte : mesActual,\n    agnoReporte : agnoActual,\n    \n    agnos : [2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026],\n    mesesAgno : ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre' ,'Diciembre'],\n    tiposAltitud : ['Alta','Media','Baja','Sin Especificar'],\n    \n    cantidadZonas : 0,\n    cantidadPuntosMedidos : 0,\n    cantidadPuntosRegistrados : 0,\n\n    tipoReporteContinuidad : \"1\",\n    tituloReporteContinuidad : [\n        'REPORTE NO ENCONTRADO', // REPORTE N° 0\n        'ENCUESTA DE CONTINUIDAD DEL SERVICIO POR ZONA DE ABASTECIMIENTO',\n        'CONTINUIDAD PROMEDIO PONDERADO',\n        'CONTINUIDAD DE HORAS DE SERVICIO',\n        'CONTINUIDAD MENOR A 6 HORAS',\n        'RESUMEN CONTINUIDAD MENOR A 6 HORAS',\n        'CONTINUIDAD MENOR A 18 HORAS',\n        'RESUMEN CONTINUIDAD MENOR A 18 HORAS',\n        'RESUMEN CONTINUIDAD'\n    ],\n\n    documento: {\n        nombreArchivo : \"\",\n        contenido : \"\",\n        orientacion : \"\",\n        idTabla : \"\",\n    },\n\n    mostrarReporte : false,\n    mostrarDescargaArchivo : false\n}\n\nexport class ReporteContinuidad extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    listarZonas = () => { promesaListarZonasComponente().then(zonas => this.setState({ zonas }) )}\n    \n    mostrarReporte = () => { this.setState({ mostrarReporte : !this.state.mostrarReporte }) }\n\n    mostrarDescargaArchivo = () => { \n        this.generarInformacionDocumento(this.state.actividadContinuidades);\n        this.setState({ mostrarDescargaArchivo : !this.state.mostrarDescargaArchivo })\n    }\n\n    cambiarMesReporte = (evento) => {\n        this.setState({ mesReporte : evento.target.value, mostrarReporte : false },() => this.reporteContinuidad());\n    }\n\n    cambiarAgnoReporte = (evento) => {\n        this.setState({ agnoReporte : evento.target.value, mostrarReporte : false },() => this.reporteContinuidad());\n    }\n\n    cambiarZonaReporte = (evento) => {\n        this.setState({ zonaReporte : evento.target.value, mostrarReporte : false },() => this.reporteContinuidad());     \n    }\n\n    cambiarAltitudReporte = (evento) => {\n        this.setState({ altitudReporte : evento.target.value, mostrarReporte : false },() => this.reporteContinuidad());\n    }\n\n    cambiarTipoReporte = (evento) => {\n        this.setState({ tipoReporteContinuidad : evento.target.value, mostrarReporte : false });\n    }\n\n    reporteContinuidad = () => {\n        const Busqueda = {\n            codigoZona : this.state.zonaReporte,\n            codigoUrbano : this.state.urbanoReporte,\n            tipoAltitud : this.state.altitudReporte,\n            mesPeriodo : this.state.mesReporte,\n            agnoPeriodo : this.state.agnoReporte,\n        }\n        reporteEncuestaContinuidad(Busqueda).then(continuidades => {\n            this.setState({ \n                cantidadPuntosRegistrados : continuidades.length, \n                cantidadPuntosMedidos : this.verificarRegistrosCompletos(continuidades)\n            });\n            this.generarReporte(continuidades);\n        });\n    }\n\n    verificarRegistrosCompletos = (continuidades) => {\n        var datosVacios = 0;\n        continuidades.map( continuidad => {\n            if(continuidad.codigoContinuidad === 'sin datos'){ datosVacios = datosVacios + 1;}\n            return 0;\n        });\n        return continuidades.length - datosVacios;\n    }\n\n    generarReporte = ( continuidades ) => {\n        \n        var cantidadZonas = 0;\n        var actividadContinuidades = [];\n        var promedioPonderados = [];        \n        this.state.zonas.filter(zona => { \n            if(this.state.zonaReporte === \"%\" ){ return zona.esSector }\n            else { return zona.esSector && zona.codigoZona.toString() === this.state.zonaReporte }\n         }).map(zonaSector => {\n            cantidadZonas = cantidadZonas + 1;\n            this.state.tiposAltitud.filter(altitud => {\n                if(this.state.altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                else { return obtenerCodigoTipoAltitud(altitud).toString() === this.state.altitudReporte }   \n            })\n            .map(altitud => {\n                var tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                const Busqueda = {\n                    codigoZona : zonaSector.codigoZona,\n                    codigoUrbano : \"%\",\n                    tipoAltitud : tipoAltitud,\n                    mesPeriodo : this.state.mesReporte,\n                    agnoPeriodo : this.state.agnoReporte,\n                }\n                totalHoraZonaAltitudContinuidad(Busqueda).then(promedio => {\n                    this.state.zonas.map( z => {\n                        if(zonaSector.sector === 1){\n                            if(z.sector === zonaSector.sector && z.subSector === zonaSector.subSector ){\n                                const actividades = this.insertarPonderado(continuidades,z.codigoZona,zonaSector.codigoZona,tipoAltitud,promedio.promedioHora)\n                                actividades.forEach(actividad => { actividadContinuidades.push(actividad) });\n                            }\n                        }else{\n                            if(z.sector === zonaSector.sector){\n                                const actividades = this.insertarPonderado(continuidades,z.codigoZona,zonaSector.codigoZona,tipoAltitud,promedio.promedioHora)\n                                actividades.forEach(actividad => { actividadContinuidades.push(actividad) });\n                            }\n                        }\n                        return 0;\n                    });\n                    promedio = this.calcularPromedios(promedio);\n                    promedio[\"codigoZona\"] = zonaSector.codigoZona;\n                    promedio[\"tipoAltitud\"] = tipoAltitud;\n\n                    promedioPonderados.push(promedio);\n                })\n                return 0;\n            });\n            return 0;\n        });\n\n        this.setState({ \n            actividadContinuidades: actividadContinuidades,\n            promedioPonderados : promedioPonderados, cantidadZonas\n        });\n    }\n\n    calcularPromedios = ( promedio ) => {\n        var hora = parseFloat((promedio.promedioHora || \"00:00\").substring(0,2));\n        var minuto = parseFloat((promedio.promedioHora || \"00:00\").substring(3,5));\n        var representa = parseFloat((minuto / 60).toFixed(2));\n\n        var contProm = (hora + representa);\n        var producto = parseFloat((contProm * promedio.conexionesActivas).toFixed(6));\n\n        promedio[\"hora\"] = hora;\n        promedio[\"minuto\"] = minuto;\n        promedio[\"representa\"] = representa;\n        promedio[\"contProm\"] = contProm;\n        promedio[\"producto\"] = producto;\n\n        return promedio;\n    }\n\n    insertarPonderado = (continuidades, codigoZona, codigoZonaReporte, tipoAltitud, promedioPonderado) => {\n        const actividades = [];\n        continuidades.map(continuidad => {\n            if(continuidad.codigoZona === codigoZona && continuidad.tipoAltitud === tipoAltitud){\n                continuidad[\"promedioHora\"] = promedioPonderado;\n                continuidad[\"codigoZonaReporte\"] = codigoZonaReporte;\n                actividades.push(continuidad);\n            }\n            return 0;\n        });\n        return actividades;\n    }\n\n    generarInformacionDocumento = (actividadContinuidades) => {\n        var { documento } = this.state;\n\n        switch (this.state.tipoReporteContinuidad) {\n            case \"1\":\n                documento.nombreArchivo = \"ReporteContinuidadEncuesta\";\n                documento.idTabla = \"tablaReporteContinuidadEncuesta\";\n                documento.contenido = \"Zona;Altitud;Urbanización-Calle;MañanasDe;MañanasA;TardesDe;TardesA;Total;PromedioPonderado\\n\";\n                documento.orientacion = \"landscape\";\n                actividadContinuidades.map(a => documento.contenido = documento.contenido + \n                    a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" )     \n            break;\n            case \"2\":\n                documento.nombreArchivo = \"ReporteContinuidadPonderado\";\n                documento.idTabla = \"tablaReporteContinuidadPonderado\";\n                documento.contenido = \"Zona;Altitud;Prom;Hora;Minuto;Representa;Cont. Prom.;Conex. Act.;Producto;Cont Pond\\n\";\n                documento.orientacion = \"landscape\";\n                actividadContinuidades.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"3\":\n                documento.nombreArchivo = \"ReporteContinuidadServicio\";\n                documento.idTabla = \"tablaReporteContinuidadServicio\";\n                documento.contenido = \"Zona;Area De Servicio;Numero De Conexiones;Horas;Peso(1)Ponderado\\n\";\n                documento.orientacion = \"portrait\";\n                actividadContinuidades.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" ) \n            break;\n            case \"4\":                \n            documento.nombreArchivo = \"ReporteContinuidadMenor6Hrs\";\n            documento.idTabla = \"tablaReporteContinuidadMenor6Hrs\";\n            documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n            documento.orientacion = \"landscape\";\n            actividadContinuidades.map(a =>  documento.contenido = documento.contenido + \n                a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"5\":                \n                documento.nombreArchivo = \"ReporteContinuidadResumen6Hrs\";\n                documento.idTabla = \"tablaReporteResumenContinuidadReporte6Hrs\";\n                documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n                documento.orientacion = \"portrait\";\n                actividadContinuidades.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"6\":                \n                documento.nombreArchivo = \"ReporteContinuidadMenor18Hrs\";\n                documento.idTabla = \"tablaReporteContinuidadMenor18Hrs\";\n                documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n                documento.orientacion = \"landscape\";\n                actividadContinuidades.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"7\":                \n                documento.nombreArchivo = \"ReporteContinuidadResumen18Hrs\";\n                documento.idTabla = \"tablaReporteResumenContinuidad\";\n                documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n                documento.orientacion = \"portrait\";\n                actividadContinuidades.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"8\":                \n                documento.nombreArchivo = \"ReporteContinuidadResumen\";\n                documento.idTabla = \"tablaReporteResumenContinuidad\";\n                documento.contenido = \"N°;DENOMINACION_ZONA;SECTOR;CODF;FUENTE;CONEX;HORA;ESTADO\\n\";\n                documento.orientacion = \"portrait\";\n                actividadContinuidades.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoContinuidad + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            default:\n                break;\n        }\n        this.setState({ documento });\n    }\n    \n    componentDidMount(){\n        if(this.state.usuario.grupo > 0){ // Si es administrador\n            this.listarZonas();\n            this.reporteContinuidad();\n        }// else{ this.props.history.push('/') }\n    }\n\n    render(){\n        if(this.state.usuario.grupo > 0){ // Si es administrador\n        return(\n            <div className=\"contenedor\">\n                <div className=\"centrado\">\n                    <div className=\"buscador_actividad_reporte\">\n                        <div className=\"centrado\">\n                            <div>\n                                <select className=\"cuadro_dato\" value={this.state.mesReporte} onChange={this.cambiarMesReporte}>\n                                    { this.state.mesesAgno.map( (mes, indice) => ( <option key={indice} value={indice + 1}> {mes} </option> ) ) }\n                                </select> \n                                &nbsp; &mdash; &nbsp;\n                                <select className=\"cuadro_dato\"  value={this.state.agnoReporte} onChange={this.cambiarAgnoReporte}>\n                                    { this.state.agnos.map((a, indice) => <option key={indice} value={a}>{a}</option> )}\n                                </select>\n                            </div>\n                        </div>\n                        <select hidden={true} className=\"cuadro_dato\" onChange={this.cambiarZonaReporte}>\n                            <option value=\"%\">Zonas (TODO)</option>\n                            {this.state.zonas.filter(zona => { return zona.esSector } ).map(zona => (\n                                <option key={zona.codigoZona} value={zona.codigoZona}>\n                                    { zona.denominacionZona + '( Zona \\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)+\" )\"}\n                                </option> \n                            ))}\n                        </select>\n                        <select hidden={true} className=\"cuadro_dato\" onChange={this.cambiarAltitudReporte}>\n                            <option value=\"%\">Altitud (TODO)</option>\n                            {   this.state.tiposAltitud.filter(altitud => { return obtenerCodigoTipoAltitud(altitud) !== 0 }).map(altitud => (\n                                <option key={altitud} value={ obtenerCodigoTipoAltitud(altitud) }>\n                                    {altitud}\n                                </option>\n                            ))}\n                        </select>\n                        <select className=\"cuadro_dato\" value={this.state.tipoReporteContinuidad} onChange={this.cambiarTipoReporte}>\n                            <option value=\"1\">Encuesta de Continuidad del Servicio</option>\n                            <option value=\"2\">Continuidad Promedio Ponderado</option>\n                            <option value=\"3\">Continuidad de Horas de Servicio</option>\n                            <option value=\"4\">Continuidad menor a 6 Hrs</option>\n                            <option value=\"5\">Resumen Continuidad menor a 6 Hrs</option>\n                            <option value=\"6\">Continuidad menor a 18 Hrs</option>\n                            <option value=\"7\">Resumen Continuidad menor a 18 Hrs</option>\n                            <option value=\"8\">Resumen Comercial de Continuidad</option>\n                        </select>\n                    </div>\n                </div> \n                <br />\n                <div className=\"centrado\">\n                    <div className=\"cuadro_mensaje informacion\">\n                        <div><b>Resumen de Reporte</b></div>\n                        <hr />\n                        <p>Zonas: {this.state.cantidadZonas}</p>\n                        <p>Puntos Registrados: {this.state.cantidadPuntosRegistrados}</p>\n                        <p>Puntos Medidos: {this.state.cantidadPuntosMedidos}</p>\n                        <div className=\"centrado\">\n                            <div hidden = {this.state.cantidadPuntosRegistrados < 1} className=\"dos_columnas\">\n                                <button className=\"boton boton_verde\" onClick={this.mostrarReporte}>Generar<br/>Reporte</button>\n                                <button className={\"boton \"+(!this.state.mostrarReporte?\"boton_rojo\":\"boton_verde\")} onClick={this.mostrarDescargaArchivo} disabled={ !this.state.mostrarReporte }>Descargar<br/>Reporte</button>\n                            </div>\n                        </div>                              \n\n                    </div>\n                </div>\n                <hr />\n                <h2 style={{textAlign:'center'}}>{this.state.tituloReporteContinuidad[this.state.tipoReporteContinuidad]}<br />{this.state.mesesAgno[this.state.mesReporte-1]}, {this.state.agnoReporte}</h2> \n                \n                {/* REPORTE N° 1 */}\n                <TablaReporteEncuesta\n                    mostrarReporte = {this.state.mostrarReporte}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    actividadContinuidades = {this.state.actividadContinuidades}\n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                />\n\n                 {/* REPORTE N° 2 */}\n                <TablaReportePonderado\n                    mostrarReporte = {this.state.mostrarReporte} \n                    promedioPonderados = {this.state.promedioPonderados}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                />\n\n                {/* REPORTE N° 3 */}\n                <TablaReporteSevicio\n                    mostrarReporte = {this.state.mostrarReporte} \n                    promedioPonderados = {this.state.promedioPonderados}\n                    zonas = {this.state.zonas}\n                    zonaReporte = {this.state.zonaReporte}\n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                />\n\n                {/* REPORTE N° 4 */}\n                <TablaRerporte6Hr\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                    promedioPonderados = {this.state.promedioPonderados}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    actividadContinuidades = {this.state.actividadContinuidades}\n                />\n\n                {/* REPORTE N° 5 */}\n                <TablaReporteResumen6Hrs\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                    zonas = {this.state.zonas}\n                    zonaReporte = {this.state.zonaReporte}\n                />\n\n                {/* REPORTE N° 6 */}     \n                <TablaRerporte18Hr\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                    promedioPonderados = {this.state.promedioPonderados}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    actividadContinuidades = {this.state.actividadContinuidades}\n                />\n\n                {/* REPORTE N° 7 */}\n                <TablaReporteResumen18Hrs\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                    zonas = {this.state.zonas}\n                    zonaReporte = {this.state.zonaReporte}\n                />\n\n                {/* REPORTE N° 8 */}\n                <TablaReporteResumen\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReporteContinuidad = {this.state.tipoReporteContinuidad}\n                    zonas = {this.state.zonas}\n                />\n                \n                <ModalDescargarArchivo\n                    titulo = {\"\"}\n                    mensaje = {\"Escoja el tipo de Documento que se Descargara\"}\n                    mostrarDescargaArchivo = { this.state.mostrarDescargaArchivo }\n                    controlDescargaArchivo = { this.mostrarDescargaArchivo }\n                    documento = { this.state.documento }\n                    tipoReporte = {this.state.tipoReporteContinuidad}\n                />\n            </div>\n        )} else { return <UsuarioNoValido /> }\n    }\n}\n\nexport default ReporteContinuidad","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud } from '../../datos/funcionesSistema';\n\nconst TablaReportePresionEncuesta = ( \n    { mostrarReporte, actividadPresiones, zonas, tiposAltitud, zonaReporte, altitudReporte, tipoReportePresion } ) => {\n        \n    if(mostrarReporte && tipoReportePresion === \"1\"){ \n        return (\n        <div id=\"reportePresionEncuesta\">\n            <div style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id=\"tablaReportePresionEncuesta\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Zona&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Urbanización - Calle&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Presión<br />A.Arriba&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Presión<br />A.Abajo&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PRESION&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;H=RED&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PRES. EN<br/>MCA&nbsp;</th>\n                </tr>\n                </thead>\n                { \n                    zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {                   \n                        const cantidadRegistrosZona = actividadPresiones.filter(actividad =>\n                            actividad.codigoZonaReporte === zona.codigoZona\n                        ).length;\n                        if(cantidadRegistrosZona > 0){\n                            return(\n                                <tbody key={zona.codigoZona}>\n                                    <tr>\n                                        <td rowSpan={cantidadRegistrosZona + 7} style={{border:'1px solid black',textAlign:'center'}}>\n                                        { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                        </td>\n                                    </tr>\n                                    { \n                                        tiposAltitud\n                                        .filter(altitud => {\n                                            if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                                            else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                                        })\n                                        .map(altitud  => {\n                                            const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                                            var promedioPresionAltitud = 0;\n                                            var cantidadPresionAltitud = 0;\n                                            const cantidadRegistrosZonaAltitud = actividadPresiones.filter(actividad => {\n                                                return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                                            }).length;\n                                            if(cantidadRegistrosZonaAltitud > 0){\n                                                return(\n                                                    <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                                    <tr>\n                                                        <td rowSpan={cantidadRegistrosZonaAltitud + 2} style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                                    </tr>\n                                                    {\n                                                    actividadPresiones.filter( actividad => {\n                                                        return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                                                    }).map((actividad, indice) => {\n                                                        promedioPresionAltitud = promedioPresionAltitud + (actividad.lecturaAbajo * 0.703) + 1;\n                                                        cantidadPresionAltitud = cantidadPresionAltitud + 1;\n                                                        return (\n                                                        <tr key={indice}>\n                                                            <td style={{border: '1px solid black', textAlign:'left', paddingLeft:'8px'}}>\n                                                                {actividad.denominacionLote}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {parseFloat(actividad.lecturaArriba) || 0}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {parseFloat(actividad.lecturaAbajo)||0}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {parseFloat(actividad.lecturaAbajo)||0}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {1}\n                                                            </td>\n                                                            <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                                {(actividad.promedioPresion||0).toFixed(2)}\n                                                            </td>\n                                                        </tr>\n                                                        )\n                                                    }) \n                                                    }\n                                                    <tr>\n                                                        <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;<b>PROMEDIO PARTE {(altitud).toUpperCase()}</b>&nbsp;</td>\n                                                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{(promedioPresionAltitud/cantidadPresionAltitud).toFixed(2)}&nbsp;</td>\n                                                    </tr>\n                                                    </React.Fragment>\n                                                )\n                                            }else { return null} \n                                        })\n                                    }\n                                </tbody>\n                            )\n                        } else{ return  null }               \n                    })\n                }\n            </table>\n            </div>\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReportePresionEncuesta\n","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud } from '../../datos/funcionesSistema';\n\nconst TablaReportePresionPonderado = ( \n    { mostrarReporte, promedioPresiones, zonas, tiposAltitud, zonaReporte, altitudReporte, tipoReportePresion } ) => {\n        \n    if(mostrarReporte  && tipoReportePresion === \"2\"){\n        var promedioConexionesReporte = 0;\n        var promedioProductoReporte = 0;\n        return (\n        <div id=\"reportePresionPonderado\">\n            <div style={{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id=\"tablaReportePresionPonderado\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;Zona&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PRESION (MCA)&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEX. ACT.&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>PRODUCTO&nbsp;</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CONT POND. <br/>SECTOR &nbsp;</th>\n                </tr>\n                </thead>\n                { \n                    zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {\n                        var promedioConexionesZona = 0,promedioProductoZona = 0;\n                        return(\n                        <tbody key={zona.codigoZona}>\n                            <tr>\n                                <td rowSpan={5} style={{border:'1px solid black',textAlign:'center'}}>\n                                { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                </td>\n                            </tr>\n                            { \n                                tiposAltitud\n                                .filter(altitud => {\n                                    if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                                    else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                                })\n                                .map(altitud  => {\n                                    const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                                    return(\n                                        <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                        <tr>\n                                            <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                        {\n                                        promedioPresiones.filter( promedio => {\n                                            return promedio.codigoZona === zona.codigoZona && promedio.tipoAltitud === tipoAltitud;\n                                        }).map(promedio => {\n                                            promedioConexionesZona = promedioConexionesZona + promedio.conexionesActivas;\n                                            promedioConexionesReporte = promedioConexionesReporte + promedio.conexionesActivas;\n                                            \n                                            promedioProductoZona = promedioProductoZona + promedio.producto;\n                                            promedioProductoReporte = promedioProductoReporte + promedio.producto;\n\n                                            return (\n                                            <React.Fragment key={zona.codigoZona+\"-\"+tipoAltitud}>\n                                                <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                    {promedio.promedio.toFixed(2)}\n                                                </td>\n                                                <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                    {promedio.conexionesActivas}\n                                                </td>\n                                                <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                    {promedio.producto.toFixed(2)}\n                                                </td>\n                                                <td style={{ borderRight : '1px solid black'}}>&nbsp;</td>\n                                            </React.Fragment>\n                                            )\n                                        })\n                                        }\n                                        </tr>\n                                    </React.Fragment>\n                                    )\n                                })\n                            }\n                            <tr>\n                                <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO</td>\n                                <td style={{border:'1px solid black', textAlign:'center'}}>{ (promedioConexionesZona || 0).toFixed(0)}</td>\n                                <td style={{border:'1px solid black', textAlign:'center'}}>{ (promedioProductoZona || 0).toFixed(2)}</td>\n                                <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioConexionesZona > 0 ?(promedioProductoZona / promedioConexionesZona).toFixed(2) : 0}</td>\n                            </tr>\n                        </tbody>\n                        )             \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={3} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO PONDERADO</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{(promedioConexionesReporte).toFixed(0)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{(promedioProductoReporte).toFixed(2)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}></td>\n                    </tr>\n                    <tr >\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>PRESION PROMEDIO PONDERADO</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{ (promedioProductoReporte/promedioConexionesReporte).toFixed(3) }</td>                    \n                    </tr>\n                    <tr>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>INDICE DE CUMPLIMIENTO INDIVIDUAL (ICI) PRESION MINIMA</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{(((promedioProductoReporte/promedioConexionesReporte)/10)*100).toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>INDICE DE CUMPLIMIENTO INDIVIDUAL (ICI) PRESION MAXIMA</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{(( 49.89 / 50 ) * 100 ).toFixed(2)}</td>\n                    </tr>\n                </tbody>\n            </table>\n            </div>\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReportePresionPonderado\n","import React from 'react';\nimport { numeroArabigoEnRomano} from '../../datos/funcionesSistema';\n\nconst variablePSI = 0.7039;\n\nfunction mostrarPromedios(promedioProductoPonderado,promedioTotalConexiones, sumaPresionPSI, sumaPresionMCA, cantidadZonas ) {\n    var promedioProductoConexiones = (promedioProductoPonderado / promedioTotalConexiones);\n    var promedioPresionPSI = (sumaPresionPSI / cantidadZonas);\n    var promedioPresionMCA = (sumaPresionMCA / cantidadZonas);\n\n    return (\n    <tbody>\n        <tr>\n            <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO PONDERADO DE PRESIÓN</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ (promedioProductoConexiones / variablePSI).toFixed(2) }</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioProductoConexiones.toFixed(2) }</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioTotalConexiones }</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioProductoPonderado.toFixed(2) }</td>\n        </tr>\n        <tr>\n            <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO ARITMETICO DE PRESIÓN</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioPresionPSI.toFixed(2) }</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ promedioPresionMCA.toFixed(2) }</td>\n            <td>&nbsp;</td>\n            <td>&nbsp;</td>\n        </tr>\n        <tr>\n            <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>PROMEDIO GENERAL DE PRESIÓN</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ (((promedioProductoConexiones / variablePSI) + promedioPresionPSI ) / 2).toFixed(2) }</td>\n            <td style={{border:'1px solid black', textAlign:'center'}}>{ ((promedioProductoConexiones + promedioPresionMCA ) / 2).toFixed(2) }</td>\n            <td>&nbsp;</td>\n            <td>&nbsp;</td>\n        </tr>\n    </tbody>\n    );\n}\n\nconst TablaReportePresionServicio = ( \n    { mostrarReporte, promedioPresiones, zonas, zonaReporte, tipoReportePresion} ) => {\n        \n    if(mostrarReporte  && tipoReportePresion === \"3\"){\n        var promedioProductoPonderado = 0;\n        var promedioTotalConexiones = 0;      \n\n        var sumaPresionMCA = 0;\n        var sumaPresionPSI = 0;\n\n        var cantidadZonas = 0;\n        \n        return (\n        <div id = \"reportePresionServicio\">\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id = \"tablaReportePresionServicio\">\n                <thead>\n                    <tr>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;ZONA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;AREA DE SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PRESION PSI&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PRESION MCA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;NUMERO DE<br />CONEXIONES&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PRODUCTO<br /> (PONDERADO)&nbsp;</th>\n                    </tr>\n                </thead>\n                { \n                    zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {\n                        var promedioConexionesZona = 0;\n                        var productoPronderado = 0;\n                        \n                        promedioPresiones.map(promedio => {\n                            if(zona.codigoZona === promedio.codigoZona){\n                                promedioConexionesZona = promedioConexionesZona + promedio.conexionesActivas;\n                                promedioTotalConexiones = promedioTotalConexiones + promedio.conexionesActivas;\n                                productoPronderado = productoPronderado + promedio.producto; \n                            }\n                            return null;\n                        });\n\n                        var presionMCA = productoPronderado / promedioConexionesZona;\n                        presionMCA = presionMCA === isNaN ? 0:presionMCA;\n\n                        var presionPSI = presionMCA / variablePSI;\n                        presionPSI = presionPSI === isNaN ? 0: presionPSI;\n\n                        sumaPresionMCA = sumaPresionMCA + presionMCA;\n                        sumaPresionPSI = sumaPresionPSI + presionPSI;\n                        \n                        promedioProductoPonderado = promedioProductoPonderado + productoPronderado;\n                        cantidadZonas = cantidadZonas + 1;\n                        return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                    <td style={{border: '1px solid black'}}> {zona.denominacionZona} </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> { presionPSI.toFixed(2) } </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> { presionMCA.toFixed(2) } </td>  \n                                    <td style={{border: '1px solid black', textAlign:'center'}}> { promedioConexionesZona } </td>  \n                                    <td style={{border: '1px solid black', textAlign:'center'}}> { productoPronderado.toFixed(2) } </td>                                      \n                                </tr>\n                            </tbody>\n                        )\n                    })\n                }\n                {\n                    mostrarPromedios(promedioProductoPonderado,promedioTotalConexiones, sumaPresionPSI, sumaPresionMCA, cantidadZonas)\n                }\n                \n            </table>\n        </div>\n        <br />\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReportePresionServicio\n","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud } from '../../datos/funcionesSistema';\n\nconst TablaReportePreMin = ({mostrarReporte,tipoReportePresion,actividadPresiones,promedioPresiones,zonas,tiposAltitud,zonaReporte,altitudReporte})=>{\n    if(mostrarReporte  && tipoReportePresion === \"4\"){\n    console.log(promedioPresiones);\n    var sumaConexionesActivas = 0;\n    var sumaConexionesPresionMin = 0;\n    var sumaPresConex = 0;\n\n    function sumarConexionesMenor10Mca (presionMenor10Mca, conexionesMenor10Mca){\n        sumaPresConex = sumaPresConex + (presionMenor10Mca * conexionesMenor10Mca);\n        sumaConexionesPresionMin = sumaConexionesPresionMin + conexionesMenor10Mca;\n    }\n\n    return (\n    <div id=\"reportePresionMinima\">\n        <div className=\"centrado\">\n            <table id=\"tablaReportePresionMinima\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Zona</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Urbanización - Calle</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>PRESION</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CANT</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones <br/>Activas</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones <br/>PRE - MIN</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Presion <br/>Menor a 10</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>PRESx CONx</th>\n                </tr>\n                </thead>\n                {(zonas||[]).filter(zona => {\n                    if(zonaReporte === \"%\" ){ return zona.esSector }\n                    else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                }).map(zona => {                   \n                    const cantidadRegistrosZona = (actividadPresiones||[]).filter(actividad=>actividad.codigoZonaReporte===zona.codigoZona).length;\n                    var conexionesActivas = 0;\n                    var conexionesMenor10Mca = 0;\n                    var cant = 0;\n\n                    if(cantidadRegistrosZona > 0){\n                        return(\n                        <tbody key={zona.codigoZona}>\n                            <tr>\n                                <td rowSpan={cantidadRegistrosZona + 7} style={{border:'1px solid black',textAlign:'center'}}>\n                                { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                </td>\n                            </tr>\n                            {tiposAltitud.filter(altitud => {\n                                if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                                else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                            }).map(altitud  => {\n\n                                var presionAcumulado = 0;\n                                var cantAcumulado = 0;\n                                var presionMenor10Mca = 0;\n                                var promedioPresionZonaAltitud = 0;\n                                \n                                const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                                const cantidadRegistrosZonaAltitud = (actividadPresiones||[]).filter(actividad => {\n                                    return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                                }).length;\n                                \n                                (promedioPresiones||[]).filter(promedio => promedio.codigoZona === zona.codigoZona && promedio.tipoAltitud ===tipoAltitud)\n                                .forEach(promedio => conexionesActivas = promedio.conexionesActivas);\n                                sumaConexionesActivas = sumaConexionesActivas + conexionesActivas;\n\n                                if(cantidadRegistrosZonaAltitud > 0){\n                                    return(\n                                        <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                        <tr>\n                                            <td rowSpan={cantidadRegistrosZonaAltitud + 2} style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                        </tr>\n                                        {(actividadPresiones||[]).filter(actividad=>{return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud})\n                                        .forEach(actividad => {\n                                            cant = actividad.promedioPresion < 10.00 ? 1 : 0;\n                                            cantAcumulado = cant + cantAcumulado;\n                                            conexionesMenor10Mca = conexionesActivas / cantidadRegistrosZonaAltitud * cantAcumulado; // CONEXIONES\n                                            if(conexionesMenor10Mca !== 0){presionAcumulado = presionAcumulado + (cant === 1 ? actividad.promedioPresion : 0)}\n                                            presionMenor10Mca = ((presionAcumulado/cantAcumulado)||0).toFixed(2); // CONTINUIDAD\n                                            promedioPresionZonaAltitud = promedioPresionZonaAltitud + actividad.promedioPresion;\n                                        })}\n                                        {(actividadPresiones||[]).filter(actividad=>{ return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;})\n                                        .map((actividad,indice) => { return (\n                                            <tr key={zona.codigoZona+\"-\"+tipoAltitud+\"-\"+actividad.codigoPresion}>\n                                                <td style={{border: '1px solid black', textAlign:'left', paddingLeft:'8px'}}>\n                                                    {actividad.denominacionLote}\n                                                </td>\n                                                <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                    {actividad.promedioPresion.toFixed(2)}\n                                                </td>\n                                                <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                    {actividad.promedioPresion < 10.00 ? 1 : 0}\n                                                </td>\n                                                {indice<1?<td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesActivas } </td> : null }\n                                                {indice<1?<td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesMenor10Mca.toFixed(2) } </td> : null }\n                                                {indice<1?<td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { presionMenor10Mca} </td> : null }\n                                                {indice<1?<td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { (presionMenor10Mca * conexionesMenor10Mca).toFixed(2)} </td> : null }\n                                            </tr>\n                                            )\n                                        }) \n                                        }\n                                        {sumarConexionesMenor10Mca(presionMenor10Mca, conexionesMenor10Mca)}\n                                        <tr>\n                                            <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;<b>PROMEDIO PARTE {(altitud).toUpperCase()}</b>&nbsp;</td>\n                                            <td colSpan={6} style={{border:'1px solid black', textAlign:'center'}}> {(promedioPresionZonaAltitud/cantidadRegistrosZonaAltitud).toFixed(2)} </td>\n                                        </tr>\n                                        </React.Fragment>\n                                    )\n                                }else { return null} \n                            })}\n                        </tbody>)\n                    } else{ return  null }               \n                })}\n                <tbody>\n                    <tr>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>SUMATORIA</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesActivas}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesPresionMin.toFixed(2)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaPresConex.toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Presion Minima Promedio</td>\n                        <td colSpan={5}style={{border:'1px solid black', textAlign:'center'}}>{(sumaPresConex/sumaConexionesPresionMin).toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Porcentaje de población con Presión menor a 10 mca</td>\n                        <td colSpan={5}style={{border:'1px solid black', textAlign:'center'}}>{((sumaConexionesPresionMin/sumaConexionesActivas)*100).toFixed(2)} %</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    )} else { return null}\n    \n}\nexport default TablaReportePreMin","import React from 'react';\nimport { numeroArabigoEnRomano, obtenerCodigoTipoAltitud } from '../../datos/funcionesSistema';\n\nconst TablaReportePreMax = ({mostrarReporte,tipoReportePresion,actividadPresiones,promedioPresiones,zonas,tiposAltitud,zonaReporte,altitudReporte})=>{\n    var sumaConexionesActivas = 0;\n    var sumaConexionesPresionMax = 0;\n    var sumaPresConex = 0;\n\n    function sumarconexionesMayor50Mca (presionMayor50Mca, conexionesMayor50Mca){\n        sumaPresConex = sumaPresConex + (presionMayor50Mca * conexionesMayor50Mca);\n        sumaConexionesPresionMax = sumaConexionesPresionMax + conexionesMayor50Mca;\n    }\n\n    if(mostrarReporte  && tipoReportePresion === \"6\"){ \n    return (\n    <div id=\"reportePresionMaxima\">\n        <div className=\"centrado\">\n            <table id=\"tablaReportePresionMaxima\">\n                <thead>\n                <tr>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Zona</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Tipo de<br />Altitud</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Urbanización - Calle</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>PRESION</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>CANT</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones <br/>Activas</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Conexiones <br/>PRE - MAX</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>Presion <br/>Mayor a 50</th>\n                    <th style={{border:'1px solid black',textAlign:'center'}}>PRESx CONx</th>\n                </tr>\n                </thead>\n                {zonas.filter(zona => {\n                    if(zonaReporte === \"%\" ){ return zona.esSector }\n                    else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                }).map(zona => {                   \n                    const cantidadRegistrosZona = (actividadPresiones||[]).filter(actividad=>actividad.codigoZonaReporte===zona.codigoZona).length;\n                    var conexionesActivas = 0;\n                    var conexionesMayor50Mca = 0;\n                    var cant = 0;\n\n                    if(cantidadRegistrosZona > 0){\n                        return(\n                        <tbody key={zona.codigoZona}>\n                            <tr>\n                                <td rowSpan={cantidadRegistrosZona + 7} style={{border:'1px solid black',textAlign:'center'}}>\n                                { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                </td>\n                            </tr>\n                            {tiposAltitud.filter(altitud => {\n                                if(altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                                else { return obtenerCodigoTipoAltitud(altitud).toString() === altitudReporte } \n                            }).map(altitud  => {\n                                var presionAcumulado = 0;\n                                var cantAcumulado = 0;\n                                var presionMayor50Mca = 0;\n                                var promedioPresionZonaAltitud = 0;\n                                \n                                const tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                                const cantidadRegistrosZonaAltitud = (actividadPresiones||[]).filter(actividad => {\n                                    return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;\n                                }).length;\n                                \n                                (promedioPresiones||[]).filter(promedio => promedio.codigoZona === zona.codigoZona && promedio.tipoAltitud ===tipoAltitud)\n                                .forEach(promedio => conexionesActivas = promedio.conexionesActivas);\n                                sumaConexionesActivas = sumaConexionesActivas + conexionesActivas;\n\n                                if(cantidadRegistrosZonaAltitud > 0){\n                                    return(\n                                        <React.Fragment key={zona.codigoZona+\"-\"+altitud}>\n                                        <tr>\n                                            <td rowSpan={cantidadRegistrosZonaAltitud + 2} style={{border:'1px solid black', textAlign:'center'}}>&nbsp;{altitud}</td>\n                                        </tr>\n                                        {(actividadPresiones||[]).filter(actividad=>{return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud})\n                                        .forEach(actividad => {\n                                            cant = actividad.promedioPresion > 50.00 ? 1 : 0;\n                                            cantAcumulado = cant + cantAcumulado;\n                                            conexionesMayor50Mca = conexionesActivas / cantidadRegistrosZonaAltitud * cantAcumulado; // CONEXIONES\n                                            if(conexionesMayor50Mca !== 0){presionAcumulado = presionAcumulado + (cant === 1 ? actividad.promedioPresion : 0)}\n                                            presionMayor50Mca = ((presionAcumulado/cantAcumulado)||0).toFixed(2); // CONTINUIDAD\n                                            promedioPresionZonaAltitud = promedioPresionZonaAltitud + actividad.promedioPresion;\n                                        })}\n                                        {(actividadPresiones||[]).filter(actividad=>{ return actividad.codigoZonaReporte === zona.codigoZona && actividad.tipoAltitud === tipoAltitud;})\n                                        .map((actividad,indice) => { return (\n                                            <tr key={zona.codigoZona+\"-\"+tipoAltitud+\"-\"+actividad.codigoPresion}>\n                                                <td style={{border: '1px solid black', textAlign:'left', paddingLeft:'8px'}}>\n                                                    {actividad.denominacionLote}\n                                                </td>\n                                                <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                    {actividad.promedioPresion.toFixed(2)}\n                                                </td>\n                                                <td style={{border: '1px solid black', textAlign:'center'}}>\n                                                    {actividad.promedioPresion > 50.00 ? 1 : 0}\n                                                </td>\n                                                { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesActivas } </td> : null }\n                                                { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { conexionesMayor50Mca.toFixed(2) } </td> : null }\n                                                { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { presionMayor50Mca} </td> : null }\n                                                { indice < 1 ?  <td rowSpan={cantidadRegistrosZonaAltitud} style={{border:'1px solid black', textAlign:'center'}}> { (presionMayor50Mca * conexionesMayor50Mca).toFixed(2)} </td> : null }\n                                            </tr>\n                                            )\n                                        }) \n                                        }\n                                        {sumarconexionesMayor50Mca(presionMayor50Mca, conexionesMayor50Mca)}\n                                        <tr>\n                                            <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;<b>PROMEDIO PARTE {(altitud).toUpperCase()}</b>&nbsp;</td>\n                                            <td colSpan={6} style={{border:'1px solid black', textAlign:'center'}}> {(promedioPresionZonaAltitud/cantidadRegistrosZonaAltitud).toFixed(2)} </td>\n                                        </tr>\n                                        </React.Fragment>\n                                    )\n                                }else { return null} \n                            })}\n\n                        </tbody>)\n                    } else{ return  null }               \n                })}\n                <tbody>\n                    <tr>\n                        <td colSpan={5} style={{border:'1px solid black', textAlign:'center'}}>SUMATORIA</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesActivas}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaConexionesPresionMax.toFixed(2)}</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>&nbsp;</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>{sumaPresConex.toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Presion Maxima Promedio</td>\n                        <td colSpan={5}style={{border:'1px solid black', textAlign:'center'}}>{(sumaPresConex/sumaConexionesPresionMax).toFixed(2)}</td>\n                    </tr>\n                    <tr>\n                        <td colSpan={2}>&nbsp;</td>\n                        <td colSpan={2} style={{border:'1px solid black', textAlign:'center'}}>Porcentaje de población con Presión mayor a 50 mca</td>\n                        <td colSpan={5}style={{border:'1px solid black', textAlign:'center'}}>{((sumaConexionesPresionMax/sumaConexionesActivas)*100).toFixed(2)} %</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    )} else { return null}\n    \n}\nexport default TablaReportePreMax","import React from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\n\nconst TablaReporteResumenPresionMaxima=({mostrarReporte,tipoReportePresion,zonas,zonaReporte})=>{\n    if(mostrarReporte  && tipoReportePresion === \"7\"){\n        return (\n        <div id = \"ReporteResumenPresionMaxima\">\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id = \"tablaReporteResumenPresionMaxima\">\n                <thead>\n                    <tr>\n                        <th colSpan={5} style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PORCENTAJE DE LA POBLACION CON SERVICIO MAYOR A 50 mca DE PRESIÓN&nbsp;</th>\n                    </tr>\n                    <tr>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;ZONA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;AREA DE SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEXIONES <br/>SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEXIONES CON SERVICIO<br />MAYOR A 50mca&nbsp;</th>\n                    </tr>\n                </thead>\n                {zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {     \n                        return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                    <td style={{border: '1px solid black'}}> {zona.denominacionZona} </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 2,641 </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 177 </td>                                      \n                                </tr>\n                            </tbody>\n                        )              \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={2} rowSpan={2} style={{border:'1px solid black', textAlign:'center'}}>PORCION DE POBLACION CON MAS DE 50 mca</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>86135</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>(%)</td>\n                    </tr>\n                    <tr>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>7606</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>8.83%</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <br />\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteResumenPresionMaxima\n","import React from 'react';\nimport { numeroArabigoEnRomano } from '../../datos/funcionesSistema';\n\nconst TablaReporteResumenPresionMinima=({mostrarReporte,tipoReportePresion,zonas,zonaReporte})=>{\n    if(mostrarReporte  && tipoReportePresion === \"5\"){\n        return (\n        <div id = \"ReporteResumenPresionMinima\">\n            <div style = {{display:'flex', justifyContent:'center', alignItems:'center'}}>\n            <table id = \"tablaReporteResumenPresionMinima\">\n            <thead>\n                    <tr>\n                        <th colSpan={5} style={{border:'1px solid black',textAlign:'center'}}>&nbsp;PORCENTAJE DE LA POBLACION CON SERVICIO MENOR A 10 mca DE PRESIÓN&nbsp;</th>\n                    </tr>\n                    <tr>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;ZONA&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;AREA DE SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEXIONES <br/>SERVICIO&nbsp;</th>\n                        <th style={{border:'1px solid black',textAlign:'center'}}>&nbsp;CONEXIONES CON SERVICIO<br />MENOR A 10mca&nbsp;</th>\n                    </tr>\n                </thead>\n                {zonas\n                    .filter(zona => {\n                        if(zonaReporte === \"%\" ){ return zona.esSector }\n                        else { return zona.esSector && zona.codigoZona.toString() === zonaReporte }\n                    })\n                    .map(zona => {     \n                        return(\n                            <tbody key={zona.codigoZona}>\n                                <tr>\n                                    <td style={{border:'1px solid black',textAlign:'center'}}>\n                                    { '\\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)}\n                                    </td>\n                                    <td style={{border: '1px solid black'}}> {zona.denominacionZona} </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 2,641 </td>\n                                    <td style={{border: '1px solid black', textAlign:'center'}}> 177 </td>                                      \n                                </tr>\n                            </tbody>\n                        )              \n                    })\n                }\n                <tbody>\n                    <tr>\n                        <td colSpan={2} rowSpan={2} style={{border:'1px solid black', textAlign:'center'}}>PORCION DE POBLACION CON MENOS DE 10 mca</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>86135</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>(%)</td>\n                    </tr>\n                    <tr>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>1536</td>\n                        <td style={{border:'1px solid black', textAlign:'center'}}>1.78%</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <br />\n        </div>\n    )} else { return null}\n    \n}\nexport default TablaReporteResumenPresionMinima\n","import React, {Component} from 'react';\nimport { verificarGrupoUsuario } from '../../datos/usuarioDB.js';\nimport { promesaListarZonasComponente} from '../../datos/zonaDB.js';\nimport { promesaTotalConexionesActivasZonaAltitud } from '../../datos/conexionDB';\nimport { numeroArabigoEnRomano , obtenerCodigoTipoAltitud} from '../../datos/funcionesSistema';\nimport { reporteEncuestaPresion } from '../../datos/reporteDB.js';\n\nimport UsuarioNoValido from '../../componentes/UsuarioNoValido.js';\nimport ModalDescargarArchivo from '../../componentes/DescargaArchivo.js';\nimport TablaReporteEncuesta from './TablaReporteEncuesta.js';\nimport TablaReportePonderado from './TablaReportePonderado.js';\nimport TablaReporteSevicio from './TablaReporteServicio.js';\nimport TablaReportePreMin from './TablaReportePreMin';\nimport TablaReportePreMax from './TablaReportePreMax';\nimport TablaReporteResumenPreMax from './TablaReporteResumenPreMax';\nimport TablaReporteResumenPreMin from './TablaReporteResumenPreMin';\n\nvar mesActual = parseInt(new Date().getMonth()) + 1;\nvar agnoActual = parseInt(new Date().getFullYear());\n\nconst estadoInicial = {\n    usuario : verificarGrupoUsuario(),\n    actividadPresiones : [], // Lista de actividades de presion\n    promedioPresiones : [], // Lista de Promedios de Presiones\n    zonas : [], // Lista de Zonas\n\n    zonaReporte : \"%\",\n    urbanoReporte : \"%\",\n    altitudReporte : \"%\",\n    mesReporte : mesActual,\n    agnoReporte : agnoActual,\n    \n    agnos : [2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026],\n    mesesAgno : ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre' ,'Diciembre'],\n    tiposAltitud : ['Alta','Media','Baja','Sin Especificar'],\n    \n    cantidadZonas : 0,\n    cantidadPuntosMedidos : 0,\n    cantidadPuntosRegistrados : 0,\n\n    tipoReportePresion : \"1\",\n    tituloReportePresion : [\n        'REPORTE NO ENCONTRADO', // REPORTE N° 0\n        'ENCUESTA DE PRESIONES DEL SERVICIO POR ZONA DE ABASTECIMIENTO',\n        'PRESIONES PROMEDIO PONDERADO',\n        'PRESIÓN DE SERVICIO',\n        'PRESIONES MINIMA PROMEDIO',\n        'RESUMEN PRESIÓN MINIMA',\n        'PRESIONES MAXIMA PROMEDIO',\n        'RESUMEN PRESIÓN MAXIMA',\n    ],\n\n    documento: {\n        nombreArchivo : \"\",\n        contenido : \"\",\n        orientacion : \"\",\n        idTabla : \"\",\n    },\n\n    mostrarReporte : false,\n    mostrarDescargaArchivo : false\n}\n\nexport class ReportePresion extends Component{\n    constructor(props){\n        super(props);\n        this.state = estadoInicial;\n    }\n\n    listarZonas = () => { promesaListarZonasComponente().then(zonas => this.setState({ zonas }) )}\n    \n    mostrarReporte = () => { this.setState({ mostrarReporte : !this.state.mostrarReporte }) }\n\n    mostrarDescargaArchivo = () => { \n        this.generarInformacionDocumento(this.state.actividadPresiones);\n        this.setState({ mostrarDescargaArchivo : !this.state.mostrarDescargaArchivo })\n    }\n\n    cambiarMesReporte = (evento) => {\n        this.setState({ mesReporte : evento.target.value, mostrarReporte : false },() => this.reportePresion());\n    }\n\n    cambiarAgnoReporte = (evento) => {\n        this.setState({ agnoReporte : evento.target.value, mostrarReporte : false },() => this.reportePresion());\n    }\n\n    cambiarZonaReporte = (evento) => {\n        this.setState({ zonaReporte : evento.target.value, mostrarReporte : false },() => this.reportePresion());     \n    }\n\n    cambiarAltitudReporte = (evento) => {\n        this.setState({ altitudReporte : evento.target.value, mostrarReporte : false },() => this.reportePresion());\n    }\n\n    cambiarTipoReporte = (evento) => {\n        this.setState({ tipoReportePresion : evento.target.value, mostrarReporte : false });\n    }\n\n    reportePresion = () => {\n        const Busqueda = {\n            codigoZona : this.state.zonaReporte,\n            codigoUrbano : this.state.urbanoReporte,\n            tipoAltitud : this.state.altitudReporte,\n            mesPeriodo : this.state.mesReporte,\n            agnoPeriodo : this.state.agnoReporte,\n        }\n        reporteEncuestaPresion(Busqueda).then(presiones => {\n            this.setState({\n                actividadPresiones : presiones,\n                cantidadPuntosRegistrados : presiones.length, \n                cantidadPuntosMedidos : this.verificarRegistrosCompletos(presiones)\n            });\n            if(presiones.length > 0){ this.generarReporte(presiones) }\n        });\n    }\n\n    generarReporte = (presiones) => {\n\n        var cantidadZonas = 0;\n        var actividadPresiones = [];\n        var promedioPresiones = [];\n\n        this.state.zonas.filter(zona => { \n            if(this.state.zonaReporte === \"%\" ){ return zona.esSector }\n            else { return zona.esSector && zona.codigoZona.toString() === this.state.zonaReporte }\n         }).map(zonaSector => {\n            cantidadZonas = cantidadZonas + 1;\n            this.state.tiposAltitud.filter(altitud => {\n                if(this.state.altitudReporte === \"%\"){ return obtenerCodigoTipoAltitud(altitud) !== 0 }\n                else { return obtenerCodigoTipoAltitud(altitud).toString() === this.state.altitudReporte }   \n            })\n            .map(altitud => {\n                var tipoAltitud = obtenerCodigoTipoAltitud(altitud);\n                this.state.zonas.map( z => {\n                    if(zonaSector.sector === 1){\n                        if(z.sector === zonaSector.sector && z.subSector === zonaSector.subSector ){\n                            const actividades = this.insertarPromedioZonaAltitud(presiones,z.codigoZona,zonaSector.codigoZona,tipoAltitud)\n                            actividades.forEach(actividad => { actividadPresiones.push(actividad) });\n                        }\n                    }else{\n                        if(z.sector === zonaSector.sector){\n                            const actividades = this.insertarPromedioZonaAltitud(presiones,z.codigoZona,zonaSector.codigoZona,tipoAltitud)\n                            actividades.forEach(actividad => { actividadPresiones.push(actividad) });                        \n                        }\n                    }\n                    return 0;\n                });\n                const Busqueda = {\n                    codigoZona : zonaSector.codigoZona,\n                    tipoAltitud : tipoAltitud,\n                    mesPeriodo : this.state.mesReporte,\n                    agnoPeriodo : this.state.agnoReporte,\n                }\n                promesaTotalConexionesActivasZonaAltitud(Busqueda).then(conexion => {\n                    const promedioPresionZonaAltitud = this.insertarTotalConexionesActivas(actividadPresiones,zonaSector.codigoZona,tipoAltitud,(conexion.conexionesActivas ||0 ))\n                    promedioPresiones.push(promedioPresionZonaAltitud);\n                });\n                return 0;\n            });\n            return 0;\n        });\n\n        this.setState({ actividadPresiones: actividadPresiones, promedioPresiones: promedioPresiones, cantidadZonas });\n    }\n\n    insertarTotalConexionesActivas = (actividadPresiones, codigoZonaReporte, tipoAltitud, conexionesActivas ) => {\n\n        var promedioPresionAltitud = 0;\n        var cantidadPresionAltitud = 0;\n\n        actividadPresiones.map(presion => {\n            if(presion.codigoZonaReporte === codigoZonaReporte && presion.tipoAltitud === tipoAltitud){           \n                promedioPresionAltitud = promedioPresionAltitud + presion.promedioPresion;\n                cantidadPresionAltitud = cantidadPresionAltitud + 1;\n            }\n            return 0;\n        });\n\n        var promedio  = (promedioPresionAltitud / cantidadPresionAltitud) || 0;\n\n        var producto = promedio * conexionesActivas;\n\n        const promedioPresion = {\n            promedio : promedio,\n            conexionesActivas : conexionesActivas,\n            producto : producto,\n            codigoZona : codigoZonaReporte,\n            tipoAltitud : tipoAltitud,\n        };\n        \n\n        return promedioPresion ;\n    }\n\n    insertarPromedioZonaAltitud = (presiones, codigoZona, codigoZonaReporte, tipoAltitud ) => {\n        \n        const actividades = [];\n\n        var hRed = 1;\n        var decimalMultiplicador = 0.703;\n\n        presiones.map(presion => {\n            if(presion.codigoZona === codigoZona && presion.tipoAltitud === tipoAltitud){\n                               \n                var promedioPresion = (presion.lecturaAbajo * decimalMultiplicador) + hRed;\n\n                presion[\"promedioPresion\"] = promedioPresion;\n                presion[\"codigoZonaReporte\"] = codigoZonaReporte;\n\n                actividades.push(presion);\n            }\n            return 0;\n        });\n\n       return actividades ;\n    }\n\n    verificarRegistrosCompletos = (presiones) => {\n        var datosVacios = 0;\n        presiones.map( presion => {\n            if(presion.codigoPresion === 'sin datos'){ datosVacios = datosVacios + 1;}\n            return 0;\n        });\n        return presiones.length - datosVacios;\n    }\n\n    generarInformacionDocumento = (actividadPresiones) => {\n        var { documento } = this.state;\n        switch (this.state.tipoReportePresion) {\n            case \"1\":\n                documento.nombreArchivo = \"ReportePresionEncuesta\";\n                documento.idTabla = \"tablaReportePresionEncuesta\";\n                documento.contenido = \"Zona;Altitud;Urbanización-Calle;MañanasDe;MañanasA;TardesDe;TardesA;Total;PromedioPonderado\\n\";\n                documento.orientacion = \"landscape\";\n                actividadPresiones.map(a => documento.contenido = documento.contenido + \n                    a.codigoPresion + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"2\":\n                documento.nombreArchivo = \"ReportePresionPonderado\";\n                documento.idTabla = \"tablaReportePresionPonderado\";\n                documento.contenido = \"Zona;Altitud;Prom;Hora;Minuto;Representa;Cont. Prom.;Conex. Act.;Producto;Cont Pond\\n\";\n                documento.orientacion = \"landscape\";\n                actividadPresiones.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoPresion + \";\" + a.tipoAltitud + \"\\n\" ) \n            break;\n            case \"3\":\n                documento.nombreArchivo = \"ReportePresionServicio\";\n                documento.idTabla = \"tablaReportePresionServicio\";\n                documento.contenido = \"Zona;Area De Servicio;Numero De Conexiones;Horas;Peso(1)Ponderado\\n\";\n                documento.orientacion = \"portrait\";\n                actividadPresiones.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoPresion + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"4\":                \n                documento.nombreArchivo = \"ReportePresionMinima\";\n                documento.idTabla = \"tablaReportePresionMinima\";\n                documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n                documento.orientacion = \"landscape\";\n                actividadPresiones.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoPresion + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"5\":                \n                documento.nombreArchivo = \"ReportePresionResumenPreMin\";\n                documento.idTabla = \"tablaReportePresionResumenPreMin\";\n                documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n                documento.orientacion = \"portrait\";\n                actividadPresiones.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoPresion + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"6\":                \n                documento.nombreArchivo = \"ReportePresionMaxima\";\n                documento.idTabla = \"tablaReportePresionMaxima\";\n                documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n                documento.orientacion = \"landscape\";\n                actividadPresiones.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoPresion + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            case \"7\":                \n                documento.nombreArchivo = \"ReportePresionResumenPreMax\";\n                documento.idTabla = \"tablaReportePresionResumenPreMax\";\n                documento.contenido = \"CODIGO_ZONA;DENOMINACION_ZONA;VALORNUMERO\\n\";\n                documento.orientacion = \"portrait\";\n                actividadPresiones.map(a =>  documento.contenido = documento.contenido + \n                    a.codigoPresion + \";\" + a.tipoAltitud + \"\\n\" )\n            break;\n            default: break;\n        }\n        this.setState({ documento });\n    }\n    \n    componentDidMount(){\n        if(this.state.usuario.grupo > 0) {\n            this.listarZonas();\n            this.reportePresion();\n        }// else{ this.props.history.push('/') }\n    }\n\n    render(){\n        if(this.state.usuario.grupo > 0){\n        return(\n            <div className=\"contenedor\">\n                <div className=\"centrado\">\n                    <div className=\"buscador_actividad_reporte\">\n                        <div className=\"centrado\">\n                            <div>\n                                <select className=\"cuadro_dato\" value={this.state.mesReporte} onChange={this.cambiarMesReporte}>\n                                    { this.state.mesesAgno.map( (mes, indice) => ( <option key={indice} value={indice + 1}> {mes} </option> ) ) }\n                                </select> \n                                &nbsp; &mdash; &nbsp;\n                                <select className=\"cuadro_dato\" value={this.state.agnoReporte} onChange={this.cambiarAgnoReporte}>\n                                    { this.state.agnos.map((a, indice) => <option key={indice} value={a}>{a}</option> )}\n                                </select>\n                            </div>\n                        </div>\n                        <select hidden={true} className=\"cuadro_dato\" onChange={this.cambiarZonaReporte}>\n                            <option value=\"%\">Zonas (TODO)</option>\n                            {   this.state.zonas.filter(zona => { return zona.esSector } ).map(zona => (\n                                <option key={zona.codigoZona} value={zona.codigoZona}>\n                                    { zona.denominacionZona + '( Zona \\u0020' + numeroArabigoEnRomano(zona.sector) + (parseInt(zona.subSector) === 0 ? '':\" \\u2014 \" + numeroArabigoEnRomano(zona.subSector)) + (zona.microSector === '-' ? '':\" \\u2014 \"+zona.microSector)+\" )\"}\n                                </option> ))}\n                        </select>\n                        <select hidden={true} className=\"cuadro_dato\" onChange={this.cambiarAltitudReporte}>\n                            <option value=\"%\">Altitud (TODO)</option>\n                            {   this.state.tiposAltitud.filter(altitud => { return obtenerCodigoTipoAltitud(altitud) !== 0 }).map(altitud => (\n                                <option key={altitud} value={ obtenerCodigoTipoAltitud(altitud) }>\n                                    {altitud}\n                                </option>\n                            ))}\n                        </select>\n                        <select className=\"cuadro_dato\" value={this.state.tipoReporteContinuidad} onChange={this.cambiarTipoReporte}>\n                            <option value=\"1\">Encuesta de Presiones del Servicio</option>\n                            <option value=\"2\">Presiones Promedio Ponderado</option>\n                            <option value=\"3\">Presión de Servicio</option>\n                            <option value=\"4\">Presión Minima</option>\n                            <option value=\"5\">Resumen Presión Minima</option>\n                            <option value=\"6\">Presión Maxima</option>\n                            <option value=\"7\">Resumen Presión Maxima</option>\n                        </select>\n                    </div>\n                </div> \n                <br />\n                <div className=\"centrado\">\n                    <div className=\"cuadro_mensaje informacion\">\n                        <div><b>Resumen de Reporte</b></div>\n                        <hr />\n                        <p>Zonas: {this.state.cantidadZonas}</p>\n                        <p>Puntos Registrados: {this.state.cantidadPuntosRegistrados}</p>\n                        <p>Puntos Medidos: {this.state.cantidadPuntosMedidos}</p>                                \n                        <div hidden = {this.state.cantidadPuntosRegistrados < 1} className=\"dos_columnas\">\n                            <button className=\"boton boton_verde\" onClick={this.mostrarReporte}>Generar<br/>Reporte</button>\n                            <button className={\"boton \"+(!this.state.mostrarReporte?\"boton_rojo\":\"boton_verde\")} onClick={this.mostrarDescargaArchivo} disabled={ !this.state.mostrarReporte }>Descargar<br/>Reporte</button>\n                        </div>\n                    </div>\n                </div>\n                <hr />   \n                <h2 style={{textAlign:'center'}}>{this.state.tituloReportePresion[this.state.tipoReportePresion]}<br />{this.state.mesesAgno[this.state.mesReporte-1]}, {this.state.agnoReporte}</h2> \n                \n                {/* REPORTE N° 1*/}\n                <TablaReporteEncuesta\n                    mostrarReporte = {this.state.mostrarReporte}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    actividadPresiones = {this.state.actividadPresiones}\n                    tipoReportePresion = {this.state.tipoReportePresion}\n                />\n\n                {/* REPORTE N° 2*/}\n                <TablaReportePonderado\n                    mostrarReporte = {this.state.mostrarReporte} \n                    promedioPresiones = {this.state.promedioPresiones}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    tipoReportePresion = {this.state.tipoReportePresion}\n                />\n\n                {/* REPORTE N° 3*/}\n                <TablaReporteSevicio\n                    mostrarReporte = {this.state.mostrarReporte} \n                    promedioPresiones = {this.state.promedioPresiones}\n                    zonas = {this.state.zonas}\n                    zonaReporte = {this.state.zonaReporte}\n                    tipoReportePresion = {this.state.tipoReportePresion}\n                />\n\n                {/* REPORTE N° 4*/}\n                <TablaReportePreMin\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReportePresion = {this.state.tipoReportePresion}\n                    promedioPresiones = {this.state.promedioPresiones}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    actividadPresiones = {this.state.actividadPresiones}\n                />\n\n                {/* REPORTE N° 5*/}\n                <TablaReporteResumenPreMin\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReportePresion = {this.state.tipoReportePresion}\n                    zonas = {this.state.zonas}\n                    zonaReporte = {this.state.zonaReporte}\n                />\n\n                {/* REPORTE N° 6*/}\n                <TablaReportePreMax\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReportePresion = {this.state.tipoReportePresion}\n                    promedioPresiones = {this.state.promedioPresiones}\n                    zonas = {this.state.zonas}\n                    tiposAltitud = {this.state.tiposAltitud}\n                    zonaReporte = {this.state.zonaReporte}\n                    altitudReporte = {this.state.altitudReporte}\n                    actividadPresiones = {this.state.actividadPresiones}\n                />\n\n                {/* REPORTE N° 7*/}\n                <TablaReporteResumenPreMax\n                    mostrarReporte = {this.state.mostrarReporte} \n                    tipoReportePresion = {this.state.tipoReportePresion}\n                    zonas = {this.state.zonas}\n                    zonaReporte = {this.state.zonaReporte}\n                />\n\n                <ModalDescargarArchivo\n                    titulo = {\"\"}\n                    mensaje = {\"Escoja el tipo de Documento que se Descargara\"}\n                    mostrarDescargaArchivo = { this.state.mostrarDescargaArchivo }\n                    controlDescargaArchivo = { this.mostrarDescargaArchivo }\n                    documento = { this.state.documento }\n                    tipoReporte = { this.state.tipoReportePresion }\n                />\n            </div>\n        )\n        } else { return <UsuarioNoValido /> }\n    }\n}\n\nexport default ReportePresion","import React, {Component} from 'react';\r\nimport { modulos, urlAplicacion } from '../datos/funcionesSistema.js';\r\n\r\nexport class Navegador extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            moduloAtivo : []\r\n        };\r\n    }\r\n\r\n    identificarModulo = () => {\r\n        var direccion = (window.location.href).substring(urlAplicacion.length);\r\n        direccion = direccion.split(\"/app\")[1];    \r\n        modulos.forEach(moduloAtivo=>{ if(moduloAtivo.url===\"/app\"+direccion) { this.setState({ moduloAtivo }) } });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.identificarModulo();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"navegador\">\r\n            <div className=\"navegador_titulo\"><b>{this.state.moduloAtivo.titulo}</b></div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navegador;\r\n","/*\n-- File:             Error404.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Interfaz UI para mostrar Error 404\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React, { Component } from 'react'\n\nexport class Error404 extends Component {\n    render() {\n        return (\n            <div>\n                <h1>ERROR 404</h1>\n                <h4> No existe Pagina </h4>           \n            </div>\n        )\n    }\n}\n\nexport default Error404;","import React from 'react';\nconst Usuario = (props) => { return(\n<div className=\"icono_usuario\">\n    <svg viewBox=\"-42 0 512 512.002\" {...props}>    \n        <path d=\"m210.351562 246.632812c33.882813 0 63.222657-12.152343 87.195313-36.128906 23.972656-23.972656 36.125-53.304687 36.125-87.191406 0-33.875-12.152344-63.210938-36.128906-87.191406-23.976563-23.96875-53.3125-36.121094-87.191407-36.121094-33.886718 0-63.21875 12.152344-87.191406 36.125s-36.128906 53.308594-36.128906 87.1875c0 33.886719 12.15625 63.222656 36.132812 87.195312 23.976563 23.96875 53.3125 36.125 87.1875 36.125zm0 0\"/><path d=\"m426.128906 393.703125c-.691406-9.976563-2.089844-20.859375-4.148437-32.351563-2.078125-11.578124-4.753907-22.523437-7.957031-32.527343-3.308594-10.339844-7.808594-20.550781-13.371094-30.335938-5.773438-10.15625-12.554688-19-20.164063-26.277343-7.957031-7.613282-17.699219-13.734376-28.964843-18.199219-11.226563-4.441407-23.667969-6.691407-36.976563-6.691407-5.226563 0-10.28125 2.144532-20.042969 8.5-6.007812 3.917969-13.035156 8.449219-20.878906 13.460938-6.707031 4.273438-15.792969 8.277344-27.015625 11.902344-10.949219 3.542968-22.066406 5.339844-33.039063 5.339844-10.972656 0-22.085937-1.796876-33.046874-5.339844-11.210938-3.621094-20.296876-7.625-26.996094-11.898438-7.769532-4.964844-14.800782-9.496094-20.898438-13.46875-9.75-6.355468-14.808594-8.5-20.035156-8.5-13.3125 0-25.75 2.253906-36.972656 6.699219-11.257813 4.457031-21.003906 10.578125-28.96875 18.199219-7.605469 7.28125-14.390625 16.121094-20.15625 26.273437-5.558594 9.785157-10.058594 19.992188-13.371094 30.339844-3.199219 10.003906-5.875 20.945313-7.953125 32.523437-2.058594 11.476563-3.457031 22.363282-4.148437 32.363282-.679688 9.796875-1.023438 19.964844-1.023438 30.234375 0 26.726562 8.496094 48.363281 25.25 64.320312 16.546875 15.746094 38.441406 23.734375 65.066406 23.734375h246.53125c26.625 0 48.511719-7.984375 65.0625-23.734375 16.757813-15.945312 25.253906-37.585937 25.253906-64.324219-.003906-10.316406-.351562-20.492187-1.035156-30.242187zm0 0\"/>\n    </svg>\n</div>\n)}\nexport default Usuario","import React from 'react';\nconst Icono = (props) => { \nreturn (\n<div style={{cursor:\"pointer\"}}>\n    <div className=\"centrado\">\n        <svg className=\"icono_sesion\" viewBox=\"0 -96 512 512\" {...props}>\n        <path d=\"m456.835938 0h-401.667969c-30.421875 0-55.167969 24.746094-55.167969 55.164062v208.867188c0 30.421875 24.746094 55.167969 55.167969 55.167969h401.667969c30.417968 0 55.164062-24.746094 55.164062-55.164063v-208.871094c0-30.417968-24.746094-55.164062-55.164062-55.164062zm25.164062 264.035156c0 13.875-11.289062 25.164063-25.164062 25.164063h-401.667969c-13.878907 0-25.167969-11.289063-25.167969-25.164063v-208.871094c0-13.875 11.289062-25.164062 25.167969-25.164062h401.667969c13.875 0 25.164062 11.289062 25.164062 25.164062zm0 0\"/><path d=\"m202.339844 52.59375c-4.289063-4.292969-10.742188-5.574219-16.347656-3.253906-5.605469 2.324218-9.257813 7.792968-9.257813 13.859375v17.136719h-113.535156c-8.285157 0-15 6.714843-15 15v128.53125c0 8.285156 6.714843 15 15 15h113.535156v17.132812c0 6.066406 3.652344 11.535156 9.257813 13.859375 1.855468.769531 3.804687 1.140625 5.738281 1.140625 3.902343 0 7.738281-1.523438 10.609375-4.394531l96.398437-96.398438c5.859375-5.859375 5.859375-15.355469 0-21.214843zm3.949218 167.636719c-1.625-6.527344-7.523437-11.363281-14.554687-11.363281h-113.535156v-98.53125h113.535156c7.03125 0 12.929687-4.839844 14.554687-11.367188l60.632813 60.632812zm0 0\"/><path d=\"m448.800781 48.199219h-112.464843c-8.285157 0-15 6.714843-15 15v192.800781c0 8.285156 6.714843 15 15 15h112.464843c8.285157 0 15-6.714844 15-15v-192.800781c0-8.285157-6.714843-15-15-15zm-15 192.800781h-82.464843v-162.800781h82.464843zm0 0\"/>\n        </svg>\n    </div>\n    <div style={{color:\"white\"}} className=\"centrado\"><b>{props.conectado?\"Salir\":\"Ingresar\"}</b></div>\n</div>\n)}\nexport default Icono\n/*#FF0040 => Rojo - #28a745 => Verde*/","import React from 'react'\n\nconst MenuDesplegable = ({grupoUsuario, mostrar}) => {\n    if(mostrar){\n        if(grupoUsuario === 0){ return (\n            <ul className='menu_desplegable abrir'>\n                <a href=\"/app/actividad/operario\"><div>Actividades<br /> Operario</div></a>\n                <a href=\"/app/cambiocontra\"><div>Cambiar<br />Contraseña</div></a>\n                <a href=\"/app/salir\"><div>Salir</div></a>\n            </ul>\n        )}\n        if(!grupoUsuario){return (\n            <ul className='menu_desplegable abrir'>\n                <a href=\"/app/ingresar\"><div>Ingresar</div></a>\n            </ul>\n        )}\n        if(grupoUsuario > 0){ return (\n            <ul className='menu_desplegable abrir'>\n                <a href=\"/app/zona\"><div>Zonas Comerciales</div></a>\n                <a href=\"/app/bloque\"><div>Bloques Urbanos</div></a>\n                <a href=\"/app/direccion\"><div>Direcciones Activas</div></a>\n                <a href=\"/app/usuario\"><div>Usuarios Sistema</div></a>\n                <a href=\"/app/aguafuente\"><div>Fuentes de Agua</div></a>\n                <a href=\"/app/zonafuente\"><div>Fuentes Zona</div></a>\n                <a href=\"/app/conexion\"><div>Conexiones Activas</div></a>\n                <a href=\"/app/conexion/prodagua\"><div>Conexiones Agua</div></a>\n                <a href=\"/app/actividad\"><div>Actividades y Reporte</div></a>\n                <a href=\"/app/cambiocontra\"><div>Cambiar Contraseña</div></a>\n            </ul>\n        )}\n        return null\n    }else{ return null }  \n}\n\nexport default MenuDesplegable;","import React from 'react'\nimport IconoUsuario from './IconoUsuario.js';\nimport IconoSesion from './IconoSesion.js';\nimport MenuDesplegable from './MenuDesplegable.js';\nimport { obtenerDenominacionGrupoUsuario} from '../datos/funcionesSistema';\n\nconst Menu = props => { return(\n    <header className=\"barra_herramientas\">\n        <nav className=\"barra_herramientas_navegador\">\n            <div className=\"barra_herramientas_boton_logo\">\n                <div>\n                    <MenuDesplegable grupoUsuario={props.usuario.grupo} mostrar={props.mostrar}/>\n                    <div className=\"barra_herramientas_boton\" onClick={props.controlMenuLateral}>\n                        <div className=\"barra_herramientas_boton_linea\"/>\n                        <div className=\"barra_herramientas_boton_linea\"/>\n                        <div className=\"barra_herramientas_boton_linea\"/>\n                    </div>\n                </div>\n                <a href='/app'><img className=\"barra_herramientas_logo\" src=\"/img/Logo-Seda-Cusco.png\" alt=\"MEMBRETE SEDACUSCO\" title={\"MEMBRETE SEDACUSCO\"}/></a>\n            </div>\n            <div></div>\n            <div className=\"barra_herramientas_sesion\">\n                { props.usuario ? \n                <a href='/app/perfil' className=\"barra_herramientas_navegador_usuario\" title={obtenerDenominacionGrupoUsuario(props.usuario.grupo)}>\n                    <div><IconoUsuario fill=\"#28a745\"/></div>\n                    <div className=\"usuario_nombre\">{(props.usuario.nombres).substring(0,20)}</div>\n                    <div className=\"usuario_apellido\">{props.usuario.apellidosPaterno}</div>\n                </a> : <div></div> }\n                <a href={props.usuario?\"/app/salir\":\"/app/ingresar\"} style={{textDecoration:\"none\"}}><IconoSesion conectado={props.usuario?1:0} fill={\"white\"}/></a>\n            </div>\n        </nav>\n        {props.mostrar?<div className=\"fondo_claro\" onClick={props.controlFondoMenu}/>:null}\n    </header>\n)}\n\nexport default Menu;","/*\n-- File:             App.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Rutas de Aplicación MediSeda\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019\n*/\n\nimport React, { Component } from 'react';\nimport { BrowserRouter , Route , Switch } from 'react-router-dom'; // Libreria React-Router\nimport { verificarGrupoUsuario } from './datos/usuarioDB.js'; // Verificar Datos de Usuario Conectado\nimport { conectarBaseDatos,conectarServidor } from './datos/appWebDB.js';\nimport Principal from './componentes/Principal.js'; // Importar Interfaz UI Principal\nimport Perfil from './componentes/Perfil.js'; // Importar Interfaz UI de Perfil de Usuario\nimport Usuario from './vista/usuario/Usuario.js'; // Importar Interfaz UI Usuario\nimport InicioSesion from './vista/sesion/InicioSesion.js'; // Importar Interfaz UI Inicio Sesion\nimport CerrarSesion from './vista/sesion/CerraSesion.js';\nimport CambioContrasegna from './vista/usuario/CambioContrasegna.js';\nimport Actividad from './vista/actividad/Actividad.js';\nimport ActividadAdministrador from './vista/actividadAdministrador/ActividadAdministrador.js';// Importar Interfaz UI de Actividad Para Administrador\nimport ActividadOperario from './vista/actividadOperario/ActividadOperario.js';// Importar Interfaz UI de Actividad Para Operario\nimport Bloque from './vista/bloque/Bloque.js'; // Interfaz Adicionales\nimport Conexion from './vista/conexion/Conexion.js';\nimport ConexionProdAgua from './vista/conexionProdAgua/ConexionProdAgua.js';\nimport Direccion from './vista/direccion/Direccion.js';\nimport FuenteAgua from './vista/fuenteAgua/FuenteAgua.js';\nimport FuenteZona from './vista/fuenteZona/FuenteZona.js';\nimport Zona from './vista/zona/Zona.js'; \nimport Mapa from './vista/mapa/Mapa.js';\nimport ReporteContinuidad from './vista/reporteContinuidad/ReporteContinuidad.js';\nimport ReportePresion from './vista/reportePresion/ReportePresion.js';\n\nimport Navegador from './componentes/Navegador.js';\nimport Error404 from './componentes/Error404.js'; // Importar Interfaz UI Error404\nimport Menu from './componentes/Menu.js';\n\nimport { urlAplicacion } from './datos/funcionesSistema.js';\n\nconst estadoInicial = {\n  estadoConectado : localStorage.getItem('estadoConectado') || \"red\", // red ==> Sin Conexion a server -- orange ==> Sin conexion a BD -- green ==> Conectado\n  mostrarMenuLateral : false,\n  usuario : verificarGrupoUsuario(),\n};\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = estadoInicial;\n  }\n\n  actualizarUsuario = (ruta) => {\n    ruta = urlAplicacion + ruta;\n    this.setState({usuario:verificarGrupoUsuario()},()=> window.location = ruta);\n  }\n\n  actualizarEstado = () => {\n    conectarServidor().then(res => {\n      if(!res.error){\n        conectarBaseDatos().then(res => {\n          if(!res.error){ \n            localStorage.setItem('estadoConectado',\"green\");\n            this.setState({ estadoConectado : \"green\" })\n          }\n          else{ \n            localStorage.setItem('estadoConectado',\"orange\");\n            this.setState({ estadoConectado : \"orange\" })\n          }\n        });\n      }else{ \n        localStorage.setItem('estadoConectado',\"red\");\n        this.setState({ estadoConectado : \"red\" })\n      }\n    });\n  }\n\n  controlMenuLateral = () => {\n    this.setState({ mostrarMenuLateral : !this.state.mostrarMenuLateral });\n  }\n\n  controlFondoMenu = () =>{\n    this.setState({ mostrarMenuLateral : false });\n  }\n  \n  componentDidMount(){\n    if(this.state.usuario.grupo === 0 || this.state.estadoConectado === \"red\"){\n      this.actualizarEstado();\n    }\n  }\n\n  render() {\n    const { estadoConectado } = this.state;\n    return (\n      <div className=\"App\" style={{height : '100%'}}>\n        <Menu controlMenuLateral={this.controlMenuLateral} mostrar={this.state.mostrarMenuLateral} estadoConectado={ estadoConectado }\n              controlFondoMenu={this.controlFondoMenu} cerrarSesion={this.cerrarSesion} usuario={this.state.usuario}/>\n        <main style={{ marginTop : '56px' }}>\n        <Navegador usuario={this.state.usuario}></Navegador>              \n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/app\" component={Principal}/>\n              <Route path=\"/app/perfil\" component={Perfil}/>\n              <Route path=\"/app/ingresar\" render={(props) => <InicioSesion actualizarUsuario={this.actualizarUsuario} {...props}/> } />\n              <Route path=\"/app/salir\" render={(props) => <CerrarSesion actualizarUsuario={this.actualizarUsuario} {...props}/>}/>\n              <Route path=\"/app/usuario\" component={Usuario}/>\n              <Route path=\"/app/cambiocontra\" component={CambioContrasegna}/>\n              <Route path=\"/app/actividad/administrador/continuidad\" render={(props) => <ActividadAdministrador tipoActividad={0} {...props}/>}/>\n              <Route path=\"/app/actividad/administrador/presion\" render={(props) => <ActividadAdministrador tipoActividad={1} {...props}/>}/>\n              <Route path=\"/app/actividad/operario\" component={ActividadOperario}/>               \n              <Route path=\"/app/actividad\" component={Actividad}/>                            \n              <Route path=\"/app/bloque\" component={Bloque} />\n              <Route path=\"/app/conexion/prodagua\" component={ConexionProdAgua} />\n              <Route path=\"/app/conexion\" component={Conexion} />\n              <Route path=\"/app/direccion\" component={Direccion} />\n              <Route path=\"/app/aguafuente\" component={FuenteAgua} />\n              <Route path=\"/app/zonafuente\" component={FuenteZona} />\n              <Route path=\"/app/zona\" component={Zona} />\n              <Route path=\"/app/mapa\" component={Mapa} />\n              <Route path=\"/app/reporte/continuidad\" component={ReporteContinuidad} />\n              <Route path=\"/app/reporte/presion\" component={ReportePresion} />\n              <Route path=\"/app/*\" component={Error404}/>\n            </Switch>\n          </BrowserRouter>\n      </main>\n    </div>\n    )\n  }\n\n}\n\nexport default App;","/*\n-- File:             index.js\n-- Project Name:     MediSeda\n-- Version:          0.0.1\n-- Description:      Iniciar Aplicación MediSeda\n-- Author:           Jorge Muñiz\n-- Create Date:      2019-10-02\n-- @Copyright        Jorge.Muñiz.Velasquez - World Connect Perú - 2019           \n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; // Importar Aplicación\nimport './Estilo.css';\n\nReactDOM.render(<App />, document.getElementById('root')); // Renderiza Aplicación en root de HTML\n"],"sourceRoot":""}